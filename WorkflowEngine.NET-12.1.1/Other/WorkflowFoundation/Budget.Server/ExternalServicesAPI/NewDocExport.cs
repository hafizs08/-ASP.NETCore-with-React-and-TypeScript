using ExternalServicesAPI;

namespace ExternalServices
{

    //------------------------------------------------------------------------------
    // <auto-generated>
    //     This code was generated by a tool.
    //     Runtime Version:2.0.50727.4952
    //
    //     Changes to this file may cause incorrect behavior and will be lost if
    //     the code is regenerated.
    // </auto-generated>
    //------------------------------------------------------------------------------

    using System;
    using System.ComponentModel;
    using System.Diagnostics;
    using System.Web.Services;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;

    // 
    // This source code was auto-generated by wsdl, Version=2.0.50727.3038.
    // 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "IccBossNewDocExport_IccBossNewDocHttpBinding", Namespace = "http://BudjetLib/interfaces/bossnewdoc/IccBossNewDoc/Binding")]
    public partial class IccBossNewDocExport_IccBossNewDocHttpService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback createDocOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;
        /// <remarks/>
        public IccBossNewDocExport_IccBossNewDocHttpService()
        {
            Url = Settings.NewDocExportUrl;
            if (IsLocalFileSystemWebService(Url))
            {
                UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if (((IsLocalFileSystemWebService(base.Url)
                            && (useDefaultCredentialsSetExplicitly == false))
                            && (IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                useDefaultCredentialsSetExplicitly = true;
            }
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (string.IsNullOrEmpty(url))
            {
                return false;
            }
            var wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }



        /// <remarks/>
        public event createDocCompletedEventHandler createDocCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("createDocResponse", Namespace = "http://BudjetLib/interfaces/bossnewdoc/IccBossNewDoc")]
        public createDocResponse createDoc([System.Xml.Serialization.XmlElementAttribute("createDoc", Namespace = "http://BudjetLib/interfaces/bossnewdoc/IccBossNewDoc")] createDoc createDoc1)
        {
            object[] results = this.Invoke("createDoc", new object[] {
                    createDoc1});
            return ((createDocResponse)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegincreateDoc(createDoc createDoc1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("createDoc", new object[] {
                    createDoc1}, callback, asyncState);
        }

        /// <remarks/>
        public createDocResponse EndcreateDoc(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((createDocResponse)(results[0]));
        }

        /// <remarks/>
        public void createDocAsync(createDoc createDoc1)
        {
            this.createDocAsync(createDoc1, null);
        }

        /// <remarks/>
        public void createDocAsync(createDoc createDoc1, object userState)
        {
            if ((this.createDocOperationCompleted == null))
            {
                this.createDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDocOperationCompleted);
            }
            this.InvokeAsync("createDoc", new object[] {
                    createDoc1}, this.createDocOperationCompleted, userState);
        }

        private void OncreateDocOperationCompleted(object arg)
        {
            if ((this.createDocCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDocCompleted(this, new createDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://BudjetLib/interfaces/bossnewdoc/IccBossNewDoc")]
    public partial class createDoc
    {

        private BossNewDocRequest requestField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public BossNewDocRequest request
        {
            get
            {
                return this.requestField;
            }
            set
            {
                this.requestField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://BudjetLib/bo/bossnewdoc")]
    public partial class BossNewDocRequest
    {

        private string idPaydocField;

        private string[] basePayDocIdsField;

        private string idFirmField;

        private string typeDocField;

        private string currCodeField;

        private System.DateTime currCourseDateField;

        private bool currCourseDateFieldSpecified;

        private string docStringNumField;

        private System.DateTime docDateField;

        private bool docDateFieldSpecified;

        private string custIdFromField;

        private string custIdToField;

        private string docSumField;

        private string taxStringField;

        private string rootDocIdField;

        private string sDocStringNumField;

        private System.DateTime sDocDateField;

        private bool sDocDateFieldSpecified;

        private string rDocStringNumField;

        private string rDocDateField;

        private string rUserExpensesField;

        private string rUserCfuExpensesField;

        private string rUserCfuPotrebField;

        private string rUserProjectField;

        private string rUserSmetaField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string idPaydoc
        {
            get
            {
                return this.idPaydocField;
            }
            set
            {
                this.idPaydocField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("basePayDocId", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] basePayDocIds
        {
            get
            {
                return this.basePayDocIdsField;
            }
            set
            {
                this.basePayDocIdsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string idFirm
        {
            get
            {
                return this.idFirmField;
            }
            set
            {
                this.idFirmField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string typeDoc
        {
            get
            {
                return this.typeDocField;
            }
            set
            {
                this.typeDocField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string currCode
        {
            get
            {
                return this.currCodeField;
            }
            set
            {
                this.currCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "date")]
        public System.DateTime currCourseDate
        {
            get
            {
                return this.currCourseDateField;
            }
            set
            {
                this.currCourseDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool currCourseDateSpecified
        {
            get
            {
                return this.currCourseDateFieldSpecified;
            }
            set
            {
                this.currCourseDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string docStringNum
        {
            get
            {
                return this.docStringNumField;
            }
            set
            {
                this.docStringNumField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "date")]
        public System.DateTime docDate
        {
            get
            {
                return this.docDateField;
            }
            set
            {
                this.docDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool docDateSpecified
        {
            get
            {
                return this.docDateFieldSpecified;
            }
            set
            {
                this.docDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string custIdFrom
        {
            get
            {
                return this.custIdFromField;
            }
            set
            {
                this.custIdFromField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string custIdTo
        {
            get
            {
                return this.custIdToField;
            }
            set
            {
                this.custIdToField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string docSum
        {
            get
            {
                return this.docSumField;
            }
            set
            {
                this.docSumField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string taxString
        {
            get
            {
                return this.taxStringField;
            }
            set
            {
                this.taxStringField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string rootDocId
        {
            get
            {
                return this.rootDocIdField;
            }
            set
            {
                this.rootDocIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sDocStringNum
        {
            get
            {
                return this.sDocStringNumField;
            }
            set
            {
                this.sDocStringNumField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "date")]
        public System.DateTime sDocDate
        {
            get
            {
                return this.sDocDateField;
            }
            set
            {
                this.sDocDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sDocDateSpecified
        {
            get
            {
                return this.sDocDateFieldSpecified;
            }
            set
            {
                this.sDocDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string rDocStringNum
        {
            get
            {
                return this.rDocStringNumField;
            }
            set
            {
                this.rDocStringNumField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string rDocDate
        {
            get
            {
                return this.rDocDateField;
            }
            set
            {
                this.rDocDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string rUserExpenses
        {
            get
            {
                return this.rUserExpensesField;
            }
            set
            {
                this.rUserExpensesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string rUserCfuExpenses
        {
            get
            {
                return this.rUserCfuExpensesField;
            }
            set
            {
                this.rUserCfuExpensesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string rUserCfuPotreb
        {
            get
            {
                return this.rUserCfuPotrebField;
            }
            set
            {
                this.rUserCfuPotrebField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string rUserProject
        {
            get
            {
                return this.rUserProjectField;
            }
            set
            {
                this.rUserProjectField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string rUserSmeta
        {
            get
            {
                return this.rUserSmetaField;
            }
            set
            {
                this.rUserSmetaField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://BudjetLib/bo/bossnewdoc")]
    public partial class BossNewDocResponse
    {

        private int respCodeField;

        private bool respCodeFieldSpecified;

        private string errDescField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int respCode
        {
            get
            {
                return this.respCodeField;
            }
            set
            {
                this.respCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool respCodeSpecified
        {
            get
            {
                return this.respCodeFieldSpecified;
            }
            set
            {
                this.respCodeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string errDesc
        {
            get
            {
                return this.errDescField;
            }
            set
            {
                this.errDescField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://BudjetLib/interfaces/bossnewdoc/IccBossNewDoc")]
    public partial class createDocResponse
    {

        private BossNewDocResponse responseField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public BossNewDocResponse response
        {
            get
            {
                return this.responseField;
            }
            set
            {
                this.responseField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void createDocCompletedEventHandler(object sender, createDocCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal createDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public createDocResponse Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((createDocResponse)(this.results[0]));
            }
        }
    }
}

