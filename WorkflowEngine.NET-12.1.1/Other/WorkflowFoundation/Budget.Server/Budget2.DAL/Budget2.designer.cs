#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Budget2.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Budget2")]
	public partial class Budget2DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBillDemandDistribution(BillDemandDistribution instance);
    partial void UpdateBillDemandDistribution(BillDemandDistribution instance);
    partial void DeleteBillDemandDistribution(BillDemandDistribution instance);
    partial void InsertBillDemandDistributionReserve(BillDemandDistributionReserve instance);
    partial void UpdateBillDemandDistributionReserve(BillDemandDistributionReserve instance);
    partial void DeleteBillDemandDistributionReserve(BillDemandDistributionReserve instance);
    partial void InsertBillDemandDistributionReserveMoney(BillDemandDistributionReserveMoney instance);
    partial void UpdateBillDemandDistributionReserveMoney(BillDemandDistributionReserveMoney instance);
    partial void DeleteBillDemandDistributionReserveMoney(BillDemandDistributionReserveMoney instance);
    partial void InsertBillDemandPath(BillDemandPath instance);
    partial void UpdateBillDemandPath(BillDemandPath instance);
    partial void DeleteBillDemandPath(BillDemandPath instance);
    partial void InsertReserve(Reserve instance);
    partial void UpdateReserve(Reserve instance);
    partial void DeleteReserve(Reserve instance);
    partial void InsertMonth(Month instance);
    partial void UpdateMonth(Month instance);
    partial void DeleteMonth(Month instance);
    partial void InsertSecurityTrusteeIdentity(SecurityTrusteeIdentity instance);
    partial void UpdateSecurityTrusteeIdentity(SecurityTrusteeIdentity instance);
    partial void DeleteSecurityTrusteeIdentity(SecurityTrusteeIdentity instance);
    partial void InsertWorkflowCurrentState(WorkflowCurrentState instance);
    partial void UpdateWorkflowCurrentState(WorkflowCurrentState instance);
    partial void DeleteWorkflowCurrentState(WorkflowCurrentState instance);
    partial void InsertWorkflowTrackingHistory(WorkflowTrackingHistory instance);
    partial void UpdateWorkflowTrackingHistory(WorkflowTrackingHistory instance);
    partial void DeleteWorkflowTrackingHistory(WorkflowTrackingHistory instance);
    partial void InsertWorkflowType(WorkflowType instance);
    partial void UpdateWorkflowType(WorkflowType instance);
    partial void DeleteWorkflowType(WorkflowType instance);
    partial void InsertStructDivision(StructDivision instance);
    partial void UpdateStructDivision(StructDivision instance);
    partial void DeleteStructDivision(StructDivision instance);
    partial void InsertSecurityTrustee(SecurityTrustee instance);
    partial void UpdateSecurityTrustee(SecurityTrustee instance);
    partial void DeleteSecurityTrustee(SecurityTrustee instance);
    partial void InsertSecurityDescriptorRecord(SecurityDescriptorRecord instance);
    partial void UpdateSecurityDescriptorRecord(SecurityDescriptorRecord instance);
    partial void DeleteSecurityDescriptorRecord(SecurityDescriptorRecord instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertCurrencyRate(CurrencyRate instance);
    partial void UpdateCurrencyRate(CurrencyRate instance);
    partial void DeleteCurrencyRate(CurrencyRate instance);
    partial void InsertSecurityRole(SecurityRole instance);
    partial void UpdateSecurityRole(SecurityRole instance);
    partial void DeleteSecurityRole(SecurityRole instance);
    partial void InsertSecurityGroup(SecurityGroup instance);
    partial void UpdateSecurityGroup(SecurityGroup instance);
    partial void DeleteSecurityGroup(SecurityGroup instance);
    partial void InsertBudgetVersion(BudgetVersion instance);
    partial void UpdateBudgetVersion(BudgetVersion instance);
    partial void DeleteBudgetVersion(BudgetVersion instance);
    partial void InsertBudget(Budget instance);
    partial void UpdateBudget(Budget instance);
    partial void DeleteBudget(Budget instance);
    partial void InsertBudgetStatus(BudgetStatus instance);
    partial void UpdateBudgetStatus(BudgetStatus instance);
    partial void DeleteBudgetStatus(BudgetStatus instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertContractAllocation(ContractAllocation instance);
    partial void UpdateContractAllocation(ContractAllocation instance);
    partial void DeleteContractAllocation(ContractAllocation instance);
    partial void InsertContractStatus(ContractStatus instance);
    partial void UpdateContractStatus(ContractStatus instance);
    partial void DeleteContractStatus(ContractStatus instance);
    partial void InsertLimit(Limit instance);
    partial void UpdateLimit(Limit instance);
    partial void DeleteLimit(Limit instance);
    partial void InsertDemandMoney(DemandMoney instance);
    partial void UpdateDemandMoney(DemandMoney instance);
    partial void DeleteDemandMoney(DemandMoney instance);
    partial void InsertExpertCostArticle(ExpertCostArticle instance);
    partial void UpdateExpertCostArticle(ExpertCostArticle instance);
    partial void DeleteExpertCostArticle(ExpertCostArticle instance);
    partial void InsertDeputyEmployee(DeputyEmployee instance);
    partial void UpdateDeputyEmployee(DeputyEmployee instance);
    partial void DeleteDeputyEmployee(DeputyEmployee instance);
    partial void InsertExpert(Expert instance);
    partial void UpdateExpert(Expert instance);
    partial void DeleteExpert(Expert instance);
    partial void InsertCurrencyRateActual(CurrencyRateActual instance);
    partial void UpdateCurrencyRateActual(CurrencyRateActual instance);
    partial void DeleteCurrencyRateActual(CurrencyRateActual instance);
    partial void InsertDemandAllocation(DemandAllocation instance);
    partial void UpdateDemandAllocation(DemandAllocation instance);
    partial void DeleteDemandAllocation(DemandAllocation instance);
    partial void InsertAppSetting(AppSetting instance);
    partial void UpdateAppSetting(AppSetting instance);
    partial void DeleteAppSetting(AppSetting instance);
    partial void InsertEMailTemplate(EMailTemplate instance);
    partial void UpdateEMailTemplate(EMailTemplate instance);
    partial void DeleteEMailTemplate(EMailTemplate instance);
    partial void InsertContractMoney(ContractMoney instance);
    partial void UpdateContractMoney(ContractMoney instance);
    partial void DeleteContractMoney(ContractMoney instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertBillDemandAllocation(BillDemandAllocation instance);
    partial void UpdateBillDemandAllocation(BillDemandAllocation instance);
    partial void DeleteBillDemandAllocation(BillDemandAllocation instance);
    partial void InsertCFO(CFO instance);
    partial void UpdateCFO(CFO instance);
    partial void DeleteCFO(CFO instance);
    partial void InsertBillDemandContractMoney(BillDemandContractMoney instance);
    partial void UpdateBillDemandContractMoney(BillDemandContractMoney instance);
    partial void DeleteBillDemandContractMoney(BillDemandContractMoney instance);
    partial void InsertDemandPermission(DemandPermission instance);
    partial void UpdateDemandPermission(DemandPermission instance);
    partial void DeleteDemandPermission(DemandPermission instance);
    partial void InsertDemandTransitionHistory(DemandTransitionHistory instance);
    partial void UpdateDemandTransitionHistory(DemandTransitionHistory instance);
    partial void DeleteDemandTransitionHistory(DemandTransitionHistory instance);
    partial void InsertDemandAdjustmentTransitionHistory(DemandAdjustmentTransitionHistory instance);
    partial void UpdateDemandAdjustmentTransitionHistory(DemandAdjustmentTransitionHistory instance);
    partial void DeleteDemandAdjustmentTransitionHistory(DemandAdjustmentTransitionHistory instance);
    partial void InsertContract(Contract instance);
    partial void UpdateContract(Contract instance);
    partial void DeleteContract(Contract instance);
    partial void InsertCounteragent(Counteragent instance);
    partial void UpdateCounteragent(Counteragent instance);
    partial void DeleteCounteragent(Counteragent instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertWorkflowTicket(WorkflowTicket instance);
    partial void UpdateWorkflowTicket(WorkflowTicket instance);
    partial void DeleteWorkflowTicket(WorkflowTicket instance);
    partial void InsertSecurityRoleRecord(SecurityRoleRecord instance);
    partial void UpdateSecurityRoleRecord(SecurityRoleRecord instance);
    partial void DeleteSecurityRoleRecord(SecurityRoleRecord instance);
    partial void InsertWorkflowSighting(WorkflowSighting instance);
    partial void UpdateWorkflowSighting(WorkflowSighting instance);
    partial void DeleteWorkflowSighting(WorkflowSighting instance);
    partial void InsertDemandAdjustment(DemandAdjustment instance);
    partial void UpdateDemandAdjustment(DemandAdjustment instance);
    partial void DeleteDemandAdjustment(DemandAdjustment instance);
    partial void InsertBillDemandTransitionHistory(BillDemandTransitionHistory instance);
    partial void UpdateBillDemandTransitionHistory(BillDemandTransitionHistory instance);
    partial void DeleteBillDemandTransitionHistory(BillDemandTransitionHistory instance);
    partial void InsertDemandStatusInternal(DemandStatusInternal instance);
    partial void UpdateDemandStatusInternal(DemandStatusInternal instance);
    partial void DeleteDemandStatusInternal(DemandStatusInternal instance);
    partial void InsertBillDemandState(BillDemandState instance);
    partial void UpdateBillDemandState(BillDemandState instance);
    partial void DeleteBillDemandState(BillDemandState instance);
    partial void InsertDemandAdjustmentState(DemandAdjustmentState instance);
    partial void UpdateDemandAdjustmentState(DemandAdjustmentState instance);
    partial void DeleteDemandAdjustmentState(DemandAdjustmentState instance);
    partial void InsertCostArticle(CostArticle instance);
    partial void UpdateCostArticle(CostArticle instance);
    partial void DeleteCostArticle(CostArticle instance);
    partial void InsertDemand(Demand instance);
    partial void UpdateDemand(Demand instance);
    partial void DeleteDemand(Demand instance);
    partial void InsertFilial(Filial instance);
    partial void UpdateFilial(Filial instance);
    partial void DeleteFilial(Filial instance);
    partial void InsertvSecurityTrusteeRole(vSecurityTrusteeRole instance);
    partial void UpdatevSecurityTrusteeRole(vSecurityTrusteeRole instance);
    partial void DeletevSecurityTrusteeRole(vSecurityTrusteeRole instance);
    partial void InsertBillDemand(BillDemand instance);
    partial void UpdateBillDemand(BillDemand instance);
    partial void DeleteBillDemand(BillDemand instance);
    #endregion
		
		public Budget2DataContext() : 
				base(global::Budget2.DAL.Properties.Settings.Default.Budget2ConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public Budget2DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Budget2DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Budget2DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Budget2DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BillDemandDistribution> BillDemandDistributions
		{
			get
			{
				return this.GetTable<BillDemandDistribution>();
			}
		}
		
		public System.Data.Linq.Table<BillDemandDistributionOld> BillDemandDistributionOlds
		{
			get
			{
				return this.GetTable<BillDemandDistributionOld>();
			}
		}
		
		public System.Data.Linq.Table<BillDemandDistributionReserve> BillDemandDistributionReserves
		{
			get
			{
				return this.GetTable<BillDemandDistributionReserve>();
			}
		}
		
		public System.Data.Linq.Table<BillDemandDistributionReserveMoney> BillDemandDistributionReserveMoneys
		{
			get
			{
				return this.GetTable<BillDemandDistributionReserveMoney>();
			}
		}
		
		public System.Data.Linq.Table<BillDemandPath> BillDemandPaths
		{
			get
			{
				return this.GetTable<BillDemandPath>();
			}
		}
		
		public System.Data.Linq.Table<Reserve> Reserves
		{
			get
			{
				return this.GetTable<Reserve>();
			}
		}
		
		public System.Data.Linq.Table<Month> Months
		{
			get
			{
				return this.GetTable<Month>();
			}
		}
		
		public System.Data.Linq.Table<SecurityTrusteeIdentity> SecurityTrusteeIdentities
		{
			get
			{
				return this.GetTable<SecurityTrusteeIdentity>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowCurrentState> WorkflowCurrentStates
		{
			get
			{
				return this.GetTable<WorkflowCurrentState>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowTrackingHistory> WorkflowTrackingHistories
		{
			get
			{
				return this.GetTable<WorkflowTrackingHistory>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowType> WorkflowTypes
		{
			get
			{
				return this.GetTable<WorkflowType>();
			}
		}
		
		public System.Data.Linq.Table<StructDivision> StructDivisions
		{
			get
			{
				return this.GetTable<StructDivision>();
			}
		}
		
		public System.Data.Linq.Table<SecurityTrustee> SecurityTrustees
		{
			get
			{
				return this.GetTable<SecurityTrustee>();
			}
		}
		
		public System.Data.Linq.Table<SecurityDescriptorRecord> SecurityDescriptorRecords
		{
			get
			{
				return this.GetTable<SecurityDescriptorRecord>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<CurrencyRate> CurrencyRates
		{
			get
			{
				return this.GetTable<CurrencyRate>();
			}
		}
		
		public System.Data.Linq.Table<SecurityRole> SecurityRoles
		{
			get
			{
				return this.GetTable<SecurityRole>();
			}
		}
		
		public System.Data.Linq.Table<SecurityGroup> SecurityGroups
		{
			get
			{
				return this.GetTable<SecurityGroup>();
			}
		}
		
		public System.Data.Linq.Table<BudgetVersion> BudgetVersions
		{
			get
			{
				return this.GetTable<BudgetVersion>();
			}
		}
		
		public System.Data.Linq.Table<Budget> Budgets
		{
			get
			{
				return this.GetTable<Budget>();
			}
		}
		
		public System.Data.Linq.Table<BudgetStatus> BudgetStatus
		{
			get
			{
				return this.GetTable<BudgetStatus>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<ContractAllocation> ContractAllocations
		{
			get
			{
				return this.GetTable<ContractAllocation>();
			}
		}
		
		public System.Data.Linq.Table<ContractStatus> ContractStatus
		{
			get
			{
				return this.GetTable<ContractStatus>();
			}
		}
		
		public System.Data.Linq.Table<Limit> Limits
		{
			get
			{
				return this.GetTable<Limit>();
			}
		}
		
		public System.Data.Linq.Table<DemandMoney> DemandMoneys
		{
			get
			{
				return this.GetTable<DemandMoney>();
			}
		}
		
		public System.Data.Linq.Table<ExpertCostArticle> ExpertCostArticles
		{
			get
			{
				return this.GetTable<ExpertCostArticle>();
			}
		}
		
		public System.Data.Linq.Table<DeputyEmployee> DeputyEmployees
		{
			get
			{
				return this.GetTable<DeputyEmployee>();
			}
		}
		
		public System.Data.Linq.Table<Expert> Experts
		{
			get
			{
				return this.GetTable<Expert>();
			}
		}
		
		public System.Data.Linq.Table<CurrencyRateActual> CurrencyRateActuals
		{
			get
			{
				return this.GetTable<CurrencyRateActual>();
			}
		}
		
		public System.Data.Linq.Table<DemandAllocation> DemandAllocations
		{
			get
			{
				return this.GetTable<DemandAllocation>();
			}
		}
		
		public System.Data.Linq.Table<AppSetting> AppSettings
		{
			get
			{
				return this.GetTable<AppSetting>();
			}
		}
		
		public System.Data.Linq.Table<EMailTemplate> EMailTemplates
		{
			get
			{
				return this.GetTable<EMailTemplate>();
			}
		}
		
		public System.Data.Linq.Table<ContractMoney> ContractMoneys
		{
			get
			{
				return this.GetTable<ContractMoney>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<BillDemandAllocation> BillDemandAllocations
		{
			get
			{
				return this.GetTable<BillDemandAllocation>();
			}
		}
		
		public System.Data.Linq.Table<CFO> CFOs
		{
			get
			{
				return this.GetTable<CFO>();
			}
		}
		
		public System.Data.Linq.Table<BillDemandContractMoney> BillDemandContractMoneys
		{
			get
			{
				return this.GetTable<BillDemandContractMoney>();
			}
		}
		
		public System.Data.Linq.Table<DemandPermission> DemandPermissions
		{
			get
			{
				return this.GetTable<DemandPermission>();
			}
		}
		
		public System.Data.Linq.Table<DemandTransitionHistory> DemandTransitionHistories
		{
			get
			{
				return this.GetTable<DemandTransitionHistory>();
			}
		}
		
		public System.Data.Linq.Table<DemandAdjustmentTransitionHistory> DemandAdjustmentTransitionHistories
		{
			get
			{
				return this.GetTable<DemandAdjustmentTransitionHistory>();
			}
		}
		
		public System.Data.Linq.Table<Contract> Contracts
		{
			get
			{
				return this.GetTable<Contract>();
			}
		}
		
		public System.Data.Linq.Table<Counteragent> Counteragents
		{
			get
			{
				return this.GetTable<Counteragent>();
			}
		}
		
		public System.Data.Linq.Table<V_Report_BillDemand> V_Report_BillDemands
		{
			get
			{
				return this.GetTable<V_Report_BillDemand>();
			}
		}
		
		public System.Data.Linq.Table<V_Report_BillDemandTransitionHistory> V_Report_BillDemandTransitionHistories
		{
			get
			{
				return this.GetTable<V_Report_BillDemandTransitionHistory>();
			}
		}
		
		public System.Data.Linq.Table<V_Report_BillDemandAllocation> V_Report_BillDemandAllocations
		{
			get
			{
				return this.GetTable<V_Report_BillDemandAllocation>();
			}
		}
		
		public System.Data.Linq.Table<V_Report_BillDemandDistribution> V_Report_BillDemandDistributions
		{
			get
			{
				return this.GetTable<V_Report_BillDemandDistribution>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowTicket> WorkflowTickets
		{
			get
			{
				return this.GetTable<WorkflowTicket>();
			}
		}
		
		public System.Data.Linq.Table<SecurityRoleRecord> SecurityRoleRecords
		{
			get
			{
				return this.GetTable<SecurityRoleRecord>();
			}
		}
		
		public System.Data.Linq.Table<WorkflowSighting> WorkflowSightings
		{
			get
			{
				return this.GetTable<WorkflowSighting>();
			}
		}
		
		public System.Data.Linq.Table<DemandAdjustment> DemandAdjustments
		{
			get
			{
				return this.GetTable<DemandAdjustment>();
			}
		}
		
		public System.Data.Linq.Table<BillDemandTransitionHistory> BillDemandTransitionHistories
		{
			get
			{
				return this.GetTable<BillDemandTransitionHistory>();
			}
		}
		
		public System.Data.Linq.Table<DemandStatusInternal> DemandStatusInternals
		{
			get
			{
				return this.GetTable<DemandStatusInternal>();
			}
		}
		
		public System.Data.Linq.Table<BillDemandState> BillDemandStates
		{
			get
			{
				return this.GetTable<BillDemandState>();
			}
		}
		
		public System.Data.Linq.Table<DemandAdjustmentState> DemandAdjustmentStates
		{
			get
			{
				return this.GetTable<DemandAdjustmentState>();
			}
		}
		
		public System.Data.Linq.Table<CostArticle> CostArticles
		{
			get
			{
				return this.GetTable<CostArticle>();
			}
		}
		
		public System.Data.Linq.Table<Demand> Demands
		{
			get
			{
				return this.GetTable<Demand>();
			}
		}
		
		public System.Data.Linq.Table<Filial> Filials
		{
			get
			{
				return this.GetTable<Filial>();
			}
		}
		
		public System.Data.Linq.Table<vSecurityTrusteeRole> vSecurityTrusteeRoles
		{
			get
			{
				return this.GetTable<vSecurityTrusteeRole>();
			}
		}
		
		public System.Data.Linq.Table<BillDemand> BillDemands
		{
			get
			{
				return this.GetTable<BillDemand>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spRecalcBillDemandCurrencySum")]
		public int spRecalcBillDemandCurrencySum([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BillDemandId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> billDemandId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), billDemandId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteWorkflowInPesistenceStore")]
		public int DeleteWorkflowInPesistenceStore([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillDemandDistribution")]
	public partial class BillDemandDistribution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _BillDemandId;
		
		private System.Nullable<System.Guid> _DemandId;
		
		private System.Nullable<System.Guid> _ReserveId;
		
		private System.Nullable<bool> _OnDemand;
		
		private decimal _Sum;
		
		private EntitySet<BillDemandDistributionReserve> _BillDemandDistributionReserves;
		
		private EntityRef<Demand> _Demand;
		
		private EntityRef<BillDemand> _BillDemand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnBillDemandIdChanging(System.Guid value);
    partial void OnBillDemandIdChanged();
    partial void OnDemandIdChanging(System.Nullable<System.Guid> value);
    partial void OnDemandIdChanged();
    partial void OnReserveIdChanging(System.Nullable<System.Guid> value);
    partial void OnReserveIdChanged();
    partial void OnOnDemandChanging(System.Nullable<bool> value);
    partial void OnOnDemandChanged();
    partial void OnSumChanging(decimal value);
    partial void OnSumChanged();
    #endregion
		
		public BillDemandDistribution()
		{
			this._BillDemandDistributionReserves = new EntitySet<BillDemandDistributionReserve>(new Action<BillDemandDistributionReserve>(this.attach_BillDemandDistributionReserves), new Action<BillDemandDistributionReserve>(this.detach_BillDemandDistributionReserves));
			this._Demand = default(EntityRef<Demand>);
			this._BillDemand = default(EntityRef<BillDemand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDemandId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BillDemandId
		{
			get
			{
				return this._BillDemandId;
			}
			set
			{
				if ((this._BillDemandId != value))
				{
					if (this._BillDemand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillDemandIdChanging(value);
					this.SendPropertyChanging();
					this._BillDemandId = value;
					this.SendPropertyChanged("BillDemandId");
					this.OnBillDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DemandId
		{
			get
			{
				return this._DemandId;
			}
			set
			{
				if ((this._DemandId != value))
				{
					if (this._Demand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIdChanging(value);
					this.SendPropertyChanging();
					this._DemandId = value;
					this.SendPropertyChanged("DemandId");
					this.OnDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReserveId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ReserveId
		{
			get
			{
				return this._ReserveId;
			}
			set
			{
				if ((this._ReserveId != value))
				{
					this.OnReserveIdChanging(value);
					this.SendPropertyChanging();
					this._ReserveId = value;
					this.SendPropertyChanged("ReserveId");
					this.OnReserveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnDemand", DbType="Bit")]
		public System.Nullable<bool> OnDemand
		{
			get
			{
				return this._OnDemand;
			}
			set
			{
				if ((this._OnDemand != value))
				{
					this.OnOnDemandChanging(value);
					this.SendPropertyChanging();
					this._OnDemand = value;
					this.SendPropertyChanged("OnDemand");
					this.OnOnDemandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Money NOT NULL")]
		public decimal Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this.OnSumChanging(value);
					this.SendPropertyChanging();
					this._Sum = value;
					this.SendPropertyChanged("Sum");
					this.OnSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemandDistribution_BillDemandDistributionReserve", Storage="_BillDemandDistributionReserves", ThisKey="Id", OtherKey="BillDemandDistributionId")]
		public EntitySet<BillDemandDistributionReserve> BillDemandDistributionReserves
		{
			get
			{
				return this._BillDemandDistributionReserves;
			}
			set
			{
				this._BillDemandDistributionReserves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_BillDemandDistribution", Storage="_Demand", ThisKey="DemandId", OtherKey="Id", IsForeignKey=true)]
		public Demand Demand
		{
			get
			{
				return this._Demand.Entity;
			}
			set
			{
				Demand previousValue = this._Demand.Entity;
				if (((previousValue != value) 
							|| (this._Demand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Demand.Entity = null;
						previousValue.BillDemandDistributions.Remove(this);
					}
					this._Demand.Entity = value;
					if ((value != null))
					{
						value.BillDemandDistributions.Add(this);
						this._DemandId = value.Id;
					}
					else
					{
						this._DemandId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Demand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemand_BillDemandDistribution", Storage="_BillDemand", ThisKey="BillDemandId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BillDemand BillDemand
		{
			get
			{
				return this._BillDemand.Entity;
			}
			set
			{
				BillDemand previousValue = this._BillDemand.Entity;
				if (((previousValue != value) 
							|| (this._BillDemand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillDemand.Entity = null;
						previousValue.BillDemandDistributions.Remove(this);
					}
					this._BillDemand.Entity = value;
					if ((value != null))
					{
						value.BillDemandDistributions.Add(this);
						this._BillDemandId = value.Id;
					}
					else
					{
						this._BillDemandId = default(System.Guid);
					}
					this.SendPropertyChanged("BillDemand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillDemandDistributionReserves(BillDemandDistributionReserve entity)
		{
			this.SendPropertyChanging();
			entity.BillDemandDistribution = this;
		}
		
		private void detach_BillDemandDistributionReserves(BillDemandDistributionReserve entity)
		{
			this.SendPropertyChanging();
			entity.BillDemandDistribution = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillDemandDistributionOld")]
	public partial class BillDemandDistributionOld
	{
		
		private System.Guid _BillDemandId;
		
		private System.Guid _ReserveId;
		
		private System.Guid _ResrveWorkId;
		
		private byte _MonthId;
		
		private decimal _Sum;
		
		public BillDemandDistributionOld()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDemandId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BillDemandId
		{
			get
			{
				return this._BillDemandId;
			}
			set
			{
				if ((this._BillDemandId != value))
				{
					this._BillDemandId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReserveId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ReserveId
		{
			get
			{
				return this._ReserveId;
			}
			set
			{
				if ((this._ReserveId != value))
				{
					this._ReserveId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResrveWorkId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ResrveWorkId
		{
			get
			{
				return this._ResrveWorkId;
			}
			set
			{
				if ((this._ResrveWorkId != value))
				{
					this._ResrveWorkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthId", DbType="TinyInt NOT NULL")]
		public byte MonthId
		{
			get
			{
				return this._MonthId;
			}
			set
			{
				if ((this._MonthId != value))
				{
					this._MonthId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Money NOT NULL")]
		public decimal Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this._Sum = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillDemandDistributionReserve")]
	public partial class BillDemandDistributionReserve : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _BillDemandDistributionId;
		
		private System.Guid _DemandId;
		
		private decimal _Sum;
		
		private EntitySet<BillDemandDistributionReserveMoney> _BillDemandDistributionReserveMoneys;
		
		private EntityRef<BillDemandDistribution> _BillDemandDistribution;
		
		private EntityRef<Demand> _Demand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnBillDemandDistributionIdChanging(System.Guid value);
    partial void OnBillDemandDistributionIdChanged();
    partial void OnDemandIdChanging(System.Guid value);
    partial void OnDemandIdChanged();
    partial void OnSumChanging(decimal value);
    partial void OnSumChanged();
    #endregion
		
		public BillDemandDistributionReserve()
		{
			this._BillDemandDistributionReserveMoneys = new EntitySet<BillDemandDistributionReserveMoney>(new Action<BillDemandDistributionReserveMoney>(this.attach_BillDemandDistributionReserveMoneys), new Action<BillDemandDistributionReserveMoney>(this.detach_BillDemandDistributionReserveMoneys));
			this._BillDemandDistribution = default(EntityRef<BillDemandDistribution>);
			this._Demand = default(EntityRef<Demand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDemandDistributionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BillDemandDistributionId
		{
			get
			{
				return this._BillDemandDistributionId;
			}
			set
			{
				if ((this._BillDemandDistributionId != value))
				{
					if (this._BillDemandDistribution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillDemandDistributionIdChanging(value);
					this.SendPropertyChanging();
					this._BillDemandDistributionId = value;
					this.SendPropertyChanged("BillDemandDistributionId");
					this.OnBillDemandDistributionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DemandId
		{
			get
			{
				return this._DemandId;
			}
			set
			{
				if ((this._DemandId != value))
				{
					if (this._Demand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIdChanging(value);
					this.SendPropertyChanging();
					this._DemandId = value;
					this.SendPropertyChanged("DemandId");
					this.OnDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Money NOT NULL")]
		public decimal Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this.OnSumChanging(value);
					this.SendPropertyChanging();
					this._Sum = value;
					this.SendPropertyChanged("Sum");
					this.OnSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemandDistributionReserve_BillDemandDistributionReserveMoney", Storage="_BillDemandDistributionReserveMoneys", ThisKey="Id", OtherKey="BillDemandDistributionReserveId")]
		public EntitySet<BillDemandDistributionReserveMoney> BillDemandDistributionReserveMoneys
		{
			get
			{
				return this._BillDemandDistributionReserveMoneys;
			}
			set
			{
				this._BillDemandDistributionReserveMoneys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemandDistribution_BillDemandDistributionReserve", Storage="_BillDemandDistribution", ThisKey="BillDemandDistributionId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BillDemandDistribution BillDemandDistribution
		{
			get
			{
				return this._BillDemandDistribution.Entity;
			}
			set
			{
				BillDemandDistribution previousValue = this._BillDemandDistribution.Entity;
				if (((previousValue != value) 
							|| (this._BillDemandDistribution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillDemandDistribution.Entity = null;
						previousValue.BillDemandDistributionReserves.Remove(this);
					}
					this._BillDemandDistribution.Entity = value;
					if ((value != null))
					{
						value.BillDemandDistributionReserves.Add(this);
						this._BillDemandDistributionId = value.Id;
					}
					else
					{
						this._BillDemandDistributionId = default(System.Guid);
					}
					this.SendPropertyChanged("BillDemandDistribution");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_BillDemandDistributionReserve", Storage="_Demand", ThisKey="DemandId", OtherKey="Id", IsForeignKey=true)]
		public Demand Demand
		{
			get
			{
				return this._Demand.Entity;
			}
			set
			{
				Demand previousValue = this._Demand.Entity;
				if (((previousValue != value) 
							|| (this._Demand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Demand.Entity = null;
						previousValue.BillDemandDistributionReserves.Remove(this);
					}
					this._Demand.Entity = value;
					if ((value != null))
					{
						value.BillDemandDistributionReserves.Add(this);
						this._DemandId = value.Id;
					}
					else
					{
						this._DemandId = default(System.Guid);
					}
					this.SendPropertyChanged("Demand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillDemandDistributionReserveMoneys(BillDemandDistributionReserveMoney entity)
		{
			this.SendPropertyChanging();
			entity.BillDemandDistributionReserve = this;
		}
		
		private void detach_BillDemandDistributionReserveMoneys(BillDemandDistributionReserveMoney entity)
		{
			this.SendPropertyChanging();
			entity.BillDemandDistributionReserve = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillDemandDistributionReserveMoney")]
	public partial class BillDemandDistributionReserveMoney : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _BillDemandDistributionReserveId;
		
		private System.Nullable<byte> _MonthId;
		
		private decimal _Sum;
		
		private EntityRef<BillDemandDistributionReserve> _BillDemandDistributionReserve;
		
		private EntityRef<Month> _Month;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnBillDemandDistributionReserveIdChanging(System.Guid value);
    partial void OnBillDemandDistributionReserveIdChanged();
    partial void OnMonthIdChanging(System.Nullable<byte> value);
    partial void OnMonthIdChanged();
    partial void OnSumChanging(decimal value);
    partial void OnSumChanged();
    #endregion
		
		public BillDemandDistributionReserveMoney()
		{
			this._BillDemandDistributionReserve = default(EntityRef<BillDemandDistributionReserve>);
			this._Month = default(EntityRef<Month>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDemandDistributionReserveId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BillDemandDistributionReserveId
		{
			get
			{
				return this._BillDemandDistributionReserveId;
			}
			set
			{
				if ((this._BillDemandDistributionReserveId != value))
				{
					if (this._BillDemandDistributionReserve.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillDemandDistributionReserveIdChanging(value);
					this.SendPropertyChanging();
					this._BillDemandDistributionReserveId = value;
					this.SendPropertyChanged("BillDemandDistributionReserveId");
					this.OnBillDemandDistributionReserveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthId", DbType="TinyInt")]
		public System.Nullable<byte> MonthId
		{
			get
			{
				return this._MonthId;
			}
			set
			{
				if ((this._MonthId != value))
				{
					if (this._Month.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMonthIdChanging(value);
					this.SendPropertyChanging();
					this._MonthId = value;
					this.SendPropertyChanged("MonthId");
					this.OnMonthIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Money NOT NULL")]
		public decimal Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this.OnSumChanging(value);
					this.SendPropertyChanging();
					this._Sum = value;
					this.SendPropertyChanged("Sum");
					this.OnSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemandDistributionReserve_BillDemandDistributionReserveMoney", Storage="_BillDemandDistributionReserve", ThisKey="BillDemandDistributionReserveId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BillDemandDistributionReserve BillDemandDistributionReserve
		{
			get
			{
				return this._BillDemandDistributionReserve.Entity;
			}
			set
			{
				BillDemandDistributionReserve previousValue = this._BillDemandDistributionReserve.Entity;
				if (((previousValue != value) 
							|| (this._BillDemandDistributionReserve.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillDemandDistributionReserve.Entity = null;
						previousValue.BillDemandDistributionReserveMoneys.Remove(this);
					}
					this._BillDemandDistributionReserve.Entity = value;
					if ((value != null))
					{
						value.BillDemandDistributionReserveMoneys.Add(this);
						this._BillDemandDistributionReserveId = value.Id;
					}
					else
					{
						this._BillDemandDistributionReserveId = default(System.Guid);
					}
					this.SendPropertyChanged("BillDemandDistributionReserve");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Month_BillDemandDistributionReserveMoney", Storage="_Month", ThisKey="MonthId", OtherKey="Id", IsForeignKey=true)]
		public Month Month
		{
			get
			{
				return this._Month.Entity;
			}
			set
			{
				Month previousValue = this._Month.Entity;
				if (((previousValue != value) 
							|| (this._Month.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Month.Entity = null;
						previousValue.BillDemandDistributionReserveMoneys.Remove(this);
					}
					this._Month.Entity = value;
					if ((value != null))
					{
						value.BillDemandDistributionReserveMoneys.Add(this);
						this._MonthId = value.Id;
					}
					else
					{
						this._MonthId = default(Nullable<byte>);
					}
					this.SendPropertyChanged("Month");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillDemandPath")]
	public partial class BillDemandPath : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _BillDemandId;
		
		private string _Path;
		
		private string _FileName;
		
		private EntityRef<BillDemand> _BillDemand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnBillDemandIdChanging(System.Guid value);
    partial void OnBillDemandIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public BillDemandPath()
		{
			this._BillDemand = default(EntityRef<BillDemand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDemandId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BillDemandId
		{
			get
			{
				return this._BillDemandId;
			}
			set
			{
				if ((this._BillDemandId != value))
				{
					if (this._BillDemand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillDemandIdChanging(value);
					this.SendPropertyChanging();
					this._BillDemandId = value;
					this.SendPropertyChanged("BillDemandId");
					this.OnBillDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(255)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemand_BillDemandPath", Storage="_BillDemand", ThisKey="BillDemandId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BillDemand BillDemand
		{
			get
			{
				return this._BillDemand.Entity;
			}
			set
			{
				BillDemand previousValue = this._BillDemand.Entity;
				if (((previousValue != value) 
							|| (this._BillDemand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillDemand.Entity = null;
						previousValue.BillDemandPaths.Remove(this);
					}
					this._BillDemand.Entity = value;
					if ((value != null))
					{
						value.BillDemandPaths.Add(this);
						this._BillDemandId = value.Id;
					}
					else
					{
						this._BillDemandId = default(System.Guid);
					}
					this.SendPropertyChanged("BillDemand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reserve")]
	public partial class Reserve : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private System.Guid _BudgetId;
		
		private int _NumberId;
		
		private System.Nullable<System.Guid> _ManagerId;
		
		private System.DateTime _CreatedDate;
		
		private decimal _Sum;
		
		private System.Nullable<System.Guid> _BankId;
		
		private System.Nullable<decimal> _PlacedSum;
		
		private System.Nullable<double> _NDS;
		
		private System.Nullable<decimal> _SumWithoutNDS;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee;
		
		private EntityRef<Budget> _Budget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBudgetIdChanging(System.Guid value);
    partial void OnBudgetIdChanged();
    partial void OnNumberIdChanging(int value);
    partial void OnNumberIdChanged();
    partial void OnManagerIdChanging(System.Nullable<System.Guid> value);
    partial void OnManagerIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnSumChanging(decimal value);
    partial void OnSumChanged();
    partial void OnBankIdChanging(System.Nullable<System.Guid> value);
    partial void OnBankIdChanged();
    partial void OnPlacedSumChanging(System.Nullable<decimal> value);
    partial void OnPlacedSumChanged();
    partial void OnNDSChanging(System.Nullable<double> value);
    partial void OnNDSChanged();
    partial void OnSumWithoutNDSChanging(System.Nullable<decimal> value);
    partial void OnSumWithoutNDSChanged();
    #endregion
		
		public Reserve()
		{
			this._SecurityTrustee = default(EntityRef<SecurityTrustee>);
			this._Budget = default(EntityRef<Budget>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(2048) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BudgetId
		{
			get
			{
				return this._BudgetId;
			}
			set
			{
				if ((this._BudgetId != value))
				{
					if (this._Budget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudgetIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetId = value;
					this.SendPropertyChanged("BudgetId");
					this.OnBudgetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberId", DbType="Int NOT NULL")]
		public int NumberId
		{
			get
			{
				return this._NumberId;
			}
			set
			{
				if ((this._NumberId != value))
				{
					this.OnNumberIdChanging(value);
					this.SendPropertyChanging();
					this._NumberId = value;
					this.SendPropertyChanged("NumberId");
					this.OnNumberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ManagerId
		{
			get
			{
				return this._ManagerId;
			}
			set
			{
				if ((this._ManagerId != value))
				{
					if (this._SecurityTrustee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ManagerId = value;
					this.SendPropertyChanged("ManagerId");
					this.OnManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Money NOT NULL")]
		public decimal Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this.OnSumChanging(value);
					this.SendPropertyChanging();
					this._Sum = value;
					this.SendPropertyChanged("Sum");
					this.OnSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					this.OnBankIdChanging(value);
					this.SendPropertyChanging();
					this._BankId = value;
					this.SendPropertyChanged("BankId");
					this.OnBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlacedSum", AutoSync=AutoSync.Always, DbType="Money", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PlacedSum
		{
			get
			{
				return this._PlacedSum;
			}
			set
			{
				if ((this._PlacedSum != value))
				{
					this.OnPlacedSumChanging(value);
					this.SendPropertyChanging();
					this._PlacedSum = value;
					this.SendPropertyChanged("PlacedSum");
					this.OnPlacedSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDS", DbType="Float")]
		public System.Nullable<double> NDS
		{
			get
			{
				return this._NDS;
			}
			set
			{
				if ((this._NDS != value))
				{
					this.OnNDSChanging(value);
					this.SendPropertyChanging();
					this._NDS = value;
					this.SendPropertyChanged("NDS");
					this.OnNDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumWithoutNDS", AutoSync=AutoSync.Always, DbType="Money", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> SumWithoutNDS
		{
			get
			{
				return this._SumWithoutNDS;
			}
			set
			{
				if ((this._SumWithoutNDS != value))
				{
					this.OnSumWithoutNDSChanging(value);
					this.SendPropertyChanging();
					this._SumWithoutNDS = value;
					this.SendPropertyChanged("SumWithoutNDS");
					this.OnSumWithoutNDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Reserve", Storage="_SecurityTrustee", ThisKey="ManagerId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee
		{
			get
			{
				return this._SecurityTrustee.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee.Entity = null;
						previousValue.Reserves.Remove(this);
					}
					this._SecurityTrustee.Entity = value;
					if ((value != null))
					{
						value.Reserves.Add(this);
						this._ManagerId = value.Id;
					}
					else
					{
						this._ManagerId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SecurityTrustee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_Reserve", Storage="_Budget", ThisKey="BudgetId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Budget Budget
		{
			get
			{
				return this._Budget.Entity;
			}
			set
			{
				Budget previousValue = this._Budget.Entity;
				if (((previousValue != value) 
							|| (this._Budget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Budget.Entity = null;
						previousValue.Reserves.Remove(this);
					}
					this._Budget.Entity = value;
					if ((value != null))
					{
						value.Reserves.Add(this);
						this._BudgetId = value.Id;
					}
					else
					{
						this._BudgetId = default(System.Guid);
					}
					this.SendPropertyChanged("Budget");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Month")]
	public partial class Month : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Id;
		
		private string _Name;
		
		private byte _Quarter;
		
		private EntitySet<BillDemandDistributionReserveMoney> _BillDemandDistributionReserveMoneys;
		
		private EntitySet<DemandMoney> _DemandMoneys;
		
		private EntitySet<ContractMoney> _ContractMoneys;
		
		private EntitySet<BillDemandContractMoney> _BillDemandContractMoneys;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(byte value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQuarterChanging(byte value);
    partial void OnQuarterChanged();
    #endregion
		
		public Month()
		{
			this._BillDemandDistributionReserveMoneys = new EntitySet<BillDemandDistributionReserveMoney>(new Action<BillDemandDistributionReserveMoney>(this.attach_BillDemandDistributionReserveMoneys), new Action<BillDemandDistributionReserveMoney>(this.detach_BillDemandDistributionReserveMoneys));
			this._DemandMoneys = new EntitySet<DemandMoney>(new Action<DemandMoney>(this.attach_DemandMoneys), new Action<DemandMoney>(this.detach_DemandMoneys));
			this._ContractMoneys = new EntitySet<ContractMoney>(new Action<ContractMoney>(this.attach_ContractMoneys), new Action<ContractMoney>(this.detach_ContractMoneys));
			this._BillDemandContractMoneys = new EntitySet<BillDemandContractMoney>(new Action<BillDemandContractMoney>(this.attach_BillDemandContractMoneys), new Action<BillDemandContractMoney>(this.detach_BillDemandContractMoneys));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quarter", DbType="TinyInt NOT NULL")]
		public byte Quarter
		{
			get
			{
				return this._Quarter;
			}
			set
			{
				if ((this._Quarter != value))
				{
					this.OnQuarterChanging(value);
					this.SendPropertyChanging();
					this._Quarter = value;
					this.SendPropertyChanged("Quarter");
					this.OnQuarterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Month_BillDemandDistributionReserveMoney", Storage="_BillDemandDistributionReserveMoneys", ThisKey="Id", OtherKey="MonthId")]
		public EntitySet<BillDemandDistributionReserveMoney> BillDemandDistributionReserveMoneys
		{
			get
			{
				return this._BillDemandDistributionReserveMoneys;
			}
			set
			{
				this._BillDemandDistributionReserveMoneys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Month_DemandMoney", Storage="_DemandMoneys", ThisKey="Id", OtherKey="MonthId")]
		public EntitySet<DemandMoney> DemandMoneys
		{
			get
			{
				return this._DemandMoneys;
			}
			set
			{
				this._DemandMoneys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Month_ContractMoney", Storage="_ContractMoneys", ThisKey="Id", OtherKey="MonthId")]
		public EntitySet<ContractMoney> ContractMoneys
		{
			get
			{
				return this._ContractMoneys;
			}
			set
			{
				this._ContractMoneys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Month_BillDemandContractMoney", Storage="_BillDemandContractMoneys", ThisKey="Id", OtherKey="Month")]
		public EntitySet<BillDemandContractMoney> BillDemandContractMoneys
		{
			get
			{
				return this._BillDemandContractMoneys;
			}
			set
			{
				this._BillDemandContractMoneys.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillDemandDistributionReserveMoneys(BillDemandDistributionReserveMoney entity)
		{
			this.SendPropertyChanging();
			entity.Month = this;
		}
		
		private void detach_BillDemandDistributionReserveMoneys(BillDemandDistributionReserveMoney entity)
		{
			this.SendPropertyChanging();
			entity.Month = null;
		}
		
		private void attach_DemandMoneys(DemandMoney entity)
		{
			this.SendPropertyChanging();
			entity.Month = this;
		}
		
		private void detach_DemandMoneys(DemandMoney entity)
		{
			this.SendPropertyChanging();
			entity.Month = null;
		}
		
		private void attach_ContractMoneys(ContractMoney entity)
		{
			this.SendPropertyChanging();
			entity.Month = this;
		}
		
		private void detach_ContractMoneys(ContractMoney entity)
		{
			this.SendPropertyChanging();
			entity.Month = null;
		}
		
		private void attach_BillDemandContractMoneys(BillDemandContractMoney entity)
		{
			this.SendPropertyChanging();
			entity.Month1 = this;
		}
		
		private void detach_BillDemandContractMoneys(BillDemandContractMoney entity)
		{
			this.SendPropertyChanging();
			entity.Month1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecurityTrusteeIdentity")]
	public partial class SecurityTrusteeIdentity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _TrusteeId;
		
		private byte _IdentityType;
		
		private string _Login;
		
		private System.Nullable<System.Guid> _PasswordMD5;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnTrusteeIdChanging(System.Guid value);
    partial void OnTrusteeIdChanged();
    partial void OnIdentityTypeChanging(byte value);
    partial void OnIdentityTypeChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordMD5Changing(System.Nullable<System.Guid> value);
    partial void OnPasswordMD5Changed();
    #endregion
		
		public SecurityTrusteeIdentity()
		{
			this._SecurityTrustee = default(EntityRef<SecurityTrustee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrusteeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TrusteeId
		{
			get
			{
				return this._TrusteeId;
			}
			set
			{
				if ((this._TrusteeId != value))
				{
					if (this._SecurityTrustee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrusteeIdChanging(value);
					this.SendPropertyChanging();
					this._TrusteeId = value;
					this.SendPropertyChanged("TrusteeId");
					this.OnTrusteeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityType", DbType="TinyInt NOT NULL")]
		public byte IdentityType
		{
			get
			{
				return this._IdentityType;
			}
			set
			{
				if ((this._IdentityType != value))
				{
					this.OnIdentityTypeChanging(value);
					this.SendPropertyChanging();
					this._IdentityType = value;
					this.SendPropertyChanged("IdentityType");
					this.OnIdentityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordMD5", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PasswordMD5
		{
			get
			{
				return this._PasswordMD5;
			}
			set
			{
				if ((this._PasswordMD5 != value))
				{
					this.OnPasswordMD5Changing(value);
					this.SendPropertyChanging();
					this._PasswordMD5 = value;
					this.SendPropertyChanged("PasswordMD5");
					this.OnPasswordMD5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_SecurityTrusteeIdentity", Storage="_SecurityTrustee", ThisKey="TrusteeId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SecurityTrustee SecurityTrustee
		{
			get
			{
				return this._SecurityTrustee.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee.Entity = null;
						previousValue.SecurityTrusteeIdentities.Remove(this);
					}
					this._SecurityTrustee.Entity = value;
					if ((value != null))
					{
						value.SecurityTrusteeIdentities.Add(this);
						this._TrusteeId = value.Id;
					}
					else
					{
						this._TrusteeId = default(System.Guid);
					}
					this.SendPropertyChanged("SecurityTrustee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowCurrentState")]
	public partial class WorkflowCurrentState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WorkflowId;
		
		private string _StateName;
		
		private System.Guid _WorkflowTypeId;
		
		private EntityRef<WorkflowType> _WorkflowType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkflowIdChanging(System.Guid value);
    partial void OnWorkflowIdChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnWorkflowTypeIdChanging(System.Guid value);
    partial void OnWorkflowTypeIdChanged();
    #endregion
		
		public WorkflowCurrentState()
		{
			this._WorkflowType = default(EntityRef<WorkflowType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid WorkflowId
		{
			get
			{
				return this._WorkflowId;
			}
			set
			{
				if ((this._WorkflowId != value))
				{
					this.OnWorkflowIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowId = value;
					this.SendPropertyChanged("WorkflowId");
					this.OnWorkflowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowTypeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WorkflowTypeId
		{
			get
			{
				return this._WorkflowTypeId;
			}
			set
			{
				if ((this._WorkflowTypeId != value))
				{
					if (this._WorkflowType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkflowTypeIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowTypeId = value;
					this.SendPropertyChanged("WorkflowTypeId");
					this.OnWorkflowTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkflowType_WorkflowCurrentState", Storage="_WorkflowType", ThisKey="WorkflowTypeId", OtherKey="Id", IsForeignKey=true)]
		public WorkflowType WorkflowType
		{
			get
			{
				return this._WorkflowType.Entity;
			}
			set
			{
				WorkflowType previousValue = this._WorkflowType.Entity;
				if (((previousValue != value) 
							|| (this._WorkflowType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkflowType.Entity = null;
						previousValue.WorkflowCurrentStates.Remove(this);
					}
					this._WorkflowType.Entity = value;
					if ((value != null))
					{
						value.WorkflowCurrentStates.Add(this);
						this._WorkflowTypeId = value.Id;
					}
					else
					{
						this._WorkflowTypeId = default(System.Guid);
					}
					this.SendPropertyChanged("WorkflowType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowTrackingHistory")]
	public partial class WorkflowTrackingHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _WorkflowId;
		
		private string _StateName;
		
		private System.DateTime _TransitionTime;
		
		private System.Guid _WorkflowTypeId;
		
		private EntityRef<WorkflowType> _WorkflowType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnWorkflowIdChanging(System.Guid value);
    partial void OnWorkflowIdChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnTransitionTimeChanging(System.DateTime value);
    partial void OnTransitionTimeChanged();
    partial void OnWorkflowTypeIdChanging(System.Guid value);
    partial void OnWorkflowTypeIdChanged();
    #endregion
		
		public WorkflowTrackingHistory()
		{
			this._WorkflowType = default(EntityRef<WorkflowType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WorkflowId
		{
			get
			{
				return this._WorkflowId;
			}
			set
			{
				if ((this._WorkflowId != value))
				{
					this.OnWorkflowIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowId = value;
					this.SendPropertyChanged("WorkflowId");
					this.OnWorkflowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitionTime", DbType="DateTime NOT NULL")]
		public System.DateTime TransitionTime
		{
			get
			{
				return this._TransitionTime;
			}
			set
			{
				if ((this._TransitionTime != value))
				{
					this.OnTransitionTimeChanging(value);
					this.SendPropertyChanging();
					this._TransitionTime = value;
					this.SendPropertyChanged("TransitionTime");
					this.OnTransitionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowTypeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid WorkflowTypeId
		{
			get
			{
				return this._WorkflowTypeId;
			}
			set
			{
				if ((this._WorkflowTypeId != value))
				{
					if (this._WorkflowType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkflowTypeIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowTypeId = value;
					this.SendPropertyChanged("WorkflowTypeId");
					this.OnWorkflowTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkflowType_WorkflowTrackingHistory", Storage="_WorkflowType", ThisKey="WorkflowTypeId", OtherKey="Id", IsForeignKey=true)]
		public WorkflowType WorkflowType
		{
			get
			{
				return this._WorkflowType.Entity;
			}
			set
			{
				WorkflowType previousValue = this._WorkflowType.Entity;
				if (((previousValue != value) 
							|| (this._WorkflowType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkflowType.Entity = null;
						previousValue.WorkflowTrackingHistories.Remove(this);
					}
					this._WorkflowType.Entity = value;
					if ((value != null))
					{
						value.WorkflowTrackingHistories.Add(this);
						this._WorkflowTypeId = value.Id;
					}
					else
					{
						this._WorkflowTypeId = default(System.Guid);
					}
					this.SendPropertyChanged("WorkflowType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowType")]
	public partial class WorkflowType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private EntitySet<WorkflowCurrentState> _WorkflowCurrentStates;
		
		private EntitySet<WorkflowTrackingHistory> _WorkflowTrackingHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public WorkflowType()
		{
			this._WorkflowCurrentStates = new EntitySet<WorkflowCurrentState>(new Action<WorkflowCurrentState>(this.attach_WorkflowCurrentStates), new Action<WorkflowCurrentState>(this.detach_WorkflowCurrentStates));
			this._WorkflowTrackingHistories = new EntitySet<WorkflowTrackingHistory>(new Action<WorkflowTrackingHistory>(this.attach_WorkflowTrackingHistories), new Action<WorkflowTrackingHistory>(this.detach_WorkflowTrackingHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkflowType_WorkflowCurrentState", Storage="_WorkflowCurrentStates", ThisKey="Id", OtherKey="WorkflowTypeId")]
		public EntitySet<WorkflowCurrentState> WorkflowCurrentStates
		{
			get
			{
				return this._WorkflowCurrentStates;
			}
			set
			{
				this._WorkflowCurrentStates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkflowType_WorkflowTrackingHistory", Storage="_WorkflowTrackingHistories", ThisKey="Id", OtherKey="WorkflowTypeId")]
		public EntitySet<WorkflowTrackingHistory> WorkflowTrackingHistories
		{
			get
			{
				return this._WorkflowTrackingHistories;
			}
			set
			{
				this._WorkflowTrackingHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkflowCurrentStates(WorkflowCurrentState entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowType = this;
		}
		
		private void detach_WorkflowCurrentStates(WorkflowCurrentState entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowType = null;
		}
		
		private void attach_WorkflowTrackingHistories(WorkflowTrackingHistory entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowType = this;
		}
		
		private void detach_WorkflowTrackingHistories(WorkflowTrackingHistory entity)
		{
			this.SendPropertyChanging();
			entity.WorkflowType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StructDivision")]
	public partial class StructDivision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private string _Name;
		
		private System.Nullable<System.Guid> _SecurityGroupId;
		
		private string _Code;
		
		private System.Data.Linq.Binary _hierarchicalCode;
		
		private bool _IsDeleted;
		
		private System.Guid _BudgetId;
		
		private bool _IsProtected;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<DemandPermission> _DemandPermissions;
		
		private EntitySet<DemandPermission> _DemandPermissions1;
		
		private EntitySet<Contract> _Contracts;
		
		private EntitySet<Contract> _Contracts1;
		
		private EntitySet<BillDemandTransitionHistory> _BillDemandTransitionHistories;
		
		private EntitySet<Demand> _Demands;
		
		private EntitySet<Demand> _Demands1;
		
		private EntitySet<Demand> _Demands2;
		
		private EntitySet<BillDemand> _BillDemands;
		
		private EntityRef<Budget> _Budget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnParentIdChanging(System.Nullable<System.Guid> value);
    partial void OnParentIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSecurityGroupIdChanging(System.Nullable<System.Guid> value);
    partial void OnSecurityGroupIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnhierarchicalCodeChanging(System.Data.Linq.Binary value);
    partial void OnhierarchicalCodeChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnBudgetIdChanging(System.Guid value);
    partial void OnBudgetIdChanged();
    partial void OnIsProtectedChanging(bool value);
    partial void OnIsProtectedChanged();
    #endregion
		
		public StructDivision()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._DemandPermissions = new EntitySet<DemandPermission>(new Action<DemandPermission>(this.attach_DemandPermissions), new Action<DemandPermission>(this.detach_DemandPermissions));
			this._DemandPermissions1 = new EntitySet<DemandPermission>(new Action<DemandPermission>(this.attach_DemandPermissions1), new Action<DemandPermission>(this.detach_DemandPermissions1));
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._Contracts1 = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts1), new Action<Contract>(this.detach_Contracts1));
			this._BillDemandTransitionHistories = new EntitySet<BillDemandTransitionHistory>(new Action<BillDemandTransitionHistory>(this.attach_BillDemandTransitionHistories), new Action<BillDemandTransitionHistory>(this.detach_BillDemandTransitionHistories));
			this._Demands = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands), new Action<Demand>(this.detach_Demands));
			this._Demands1 = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands1), new Action<Demand>(this.detach_Demands1));
			this._Demands2 = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands2), new Action<Demand>(this.detach_Demands2));
			this._BillDemands = new EntitySet<BillDemand>(new Action<BillDemand>(this.attach_BillDemands), new Action<BillDemand>(this.detach_BillDemands));
			this._Budget = default(EntityRef<Budget>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityGroupId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SecurityGroupId
		{
			get
			{
				return this._SecurityGroupId;
			}
			set
			{
				if ((this._SecurityGroupId != value))
				{
					this.OnSecurityGroupIdChanging(value);
					this.SendPropertyChanging();
					this._SecurityGroupId = value;
					this.SendPropertyChanged("SecurityGroupId");
					this.OnSecurityGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hierarchicalCode", DbType="VarBinary(800)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary hierarchicalCode
		{
			get
			{
				return this._hierarchicalCode;
			}
			set
			{
				if ((this._hierarchicalCode != value))
				{
					this.OnhierarchicalCodeChanging(value);
					this.SendPropertyChanging();
					this._hierarchicalCode = value;
					this.SendPropertyChanged("hierarchicalCode");
					this.OnhierarchicalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BudgetId
		{
			get
			{
				return this._BudgetId;
			}
			set
			{
				if ((this._BudgetId != value))
				{
					if (this._Budget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudgetIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetId = value;
					this.SendPropertyChanged("BudgetId");
					this.OnBudgetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProtected", DbType="Bit NOT NULL")]
		public bool IsProtected
		{
			get
			{
				return this._IsProtected;
			}
			set
			{
				if ((this._IsProtected != value))
				{
					this.OnIsProtectedChanging(value);
					this.SendPropertyChanging();
					this._IsProtected = value;
					this.SendPropertyChanged("IsProtected");
					this.OnIsProtectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_Project", Storage="_Projects", ThisKey="Id", OtherKey="StructDivisionId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_DemandPermission", Storage="_DemandPermissions", ThisKey="Id", OtherKey="AuthorStructDivisionId")]
		public EntitySet<DemandPermission> DemandPermissions
		{
			get
			{
				return this._DemandPermissions;
			}
			set
			{
				this._DemandPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_DemandPermission1", Storage="_DemandPermissions1", ThisKey="Id", OtherKey="UserStructDivisionId")]
		public EntitySet<DemandPermission> DemandPermissions1
		{
			get
			{
				return this._DemandPermissions1;
			}
			set
			{
				this._DemandPermissions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_Contract", Storage="_Contracts", ThisKey="Id", OtherKey="AuthorStructDivisionId")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_Contract1", Storage="_Contracts1", ThisKey="Id", OtherKey="ExecutorStructId")]
		public EntitySet<Contract> Contracts1
		{
			get
			{
				return this._Contracts1;
			}
			set
			{
				this._Contracts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_BillDemandTransitionHistory", Storage="_BillDemandTransitionHistories", ThisKey="Id", OtherKey="TransitionInitiatorStructDivisionId")]
		public EntitySet<BillDemandTransitionHistory> BillDemandTransitionHistories
		{
			get
			{
				return this._BillDemandTransitionHistories;
			}
			set
			{
				this._BillDemandTransitionHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_Demand", Storage="_Demands", ThisKey="Id", OtherKey="AuthorStructDivisionId")]
		public EntitySet<Demand> Demands
		{
			get
			{
				return this._Demands;
			}
			set
			{
				this._Demands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_Demand1", Storage="_Demands1", ThisKey="Id", OtherKey="ExecutorStructId")]
		public EntitySet<Demand> Demands1
		{
			get
			{
				return this._Demands1;
			}
			set
			{
				this._Demands1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_Demand2", Storage="_Demands2", ThisKey="Id", OtherKey="BeginDivisionId")]
		public EntitySet<Demand> Demands2
		{
			get
			{
				return this._Demands2;
			}
			set
			{
				this._Demands2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_BillDemand", Storage="_BillDemands", ThisKey="Id", OtherKey="AuthorStructDivisionId")]
		public EntitySet<BillDemand> BillDemands
		{
			get
			{
				return this._BillDemands;
			}
			set
			{
				this._BillDemands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_StructDivision", Storage="_Budget", ThisKey="BudgetId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Budget Budget
		{
			get
			{
				return this._Budget.Entity;
			}
			set
			{
				Budget previousValue = this._Budget.Entity;
				if (((previousValue != value) 
							|| (this._Budget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Budget.Entity = null;
						previousValue.StructDivisions.Remove(this);
					}
					this._Budget.Entity = value;
					if ((value != null))
					{
						value.StructDivisions.Add(this);
						this._BudgetId = value.Id;
					}
					else
					{
						this._BudgetId = default(System.Guid);
					}
					this.SendPropertyChanged("Budget");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.StructDivision = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.StructDivision = null;
		}
		
		private void attach_DemandPermissions(DemandPermission entity)
		{
			this.SendPropertyChanging();
			entity.StructDivision = this;
		}
		
		private void detach_DemandPermissions(DemandPermission entity)
		{
			this.SendPropertyChanging();
			entity.StructDivision = null;
		}
		
		private void attach_DemandPermissions1(DemandPermission entity)
		{
			this.SendPropertyChanging();
			entity.StructDivision1 = this;
		}
		
		private void detach_DemandPermissions1(DemandPermission entity)
		{
			this.SendPropertyChanging();
			entity.StructDivision1 = null;
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.StructDivision = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.StructDivision = null;
		}
		
		private void attach_Contracts1(Contract entity)
		{
			this.SendPropertyChanging();
			entity.StructDivision1 = this;
		}
		
		private void detach_Contracts1(Contract entity)
		{
			this.SendPropertyChanging();
			entity.StructDivision1 = null;
		}
		
		private void attach_BillDemandTransitionHistories(BillDemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.StructDivision = this;
		}
		
		private void detach_BillDemandTransitionHistories(BillDemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.StructDivision = null;
		}
		
		private void attach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.AuthorStructDivision = this;
		}
		
		private void detach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.AuthorStructDivision = null;
		}
		
		private void attach_Demands1(Demand entity)
		{
			this.SendPropertyChanging();
			entity.ExecutorStructDivision = this;
		}
		
		private void detach_Demands1(Demand entity)
		{
			this.SendPropertyChanging();
			entity.ExecutorStructDivision = null;
		}
		
		private void attach_Demands2(Demand entity)
		{
			this.SendPropertyChanging();
			entity.StructDivision2 = this;
		}
		
		private void detach_Demands2(Demand entity)
		{
			this.SendPropertyChanging();
			entity.StructDivision2 = null;
		}
		
		private void attach_BillDemands(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.StructDivision = this;
		}
		
		private void detach_BillDemands(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.StructDivision = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecurityTrustee")]
	public partial class SecurityTrustee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsContainer;
		
		private bool _Enabled;
		
		private EntitySet<Reserve> _Reserves;
		
		private EntitySet<SecurityTrusteeIdentity> _SecurityTrusteeIdentities;
		
		private EntitySet<SecurityDescriptorRecord> _SecurityDescriptorRecords;
		
		private EntitySet<SecurityGroup> _SecurityGroups;
		
		private EntitySet<SecurityGroup> _SecurityGroups1;
		
		private EntitySet<Limit> _Limits;
		
		private EntitySet<Limit> _Limits1;
		
		private EntitySet<DeputyEmployee> _DeputyEmployees;
		
		private EntitySet<DeputyEmployee> _DeputyEmployees1;
		
		private EntitySet<Expert> _Experts;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<DemandPermission> _DemandPermissions;
		
		private EntitySet<DemandPermission> _DemandPermissions1;
		
		private EntitySet<DemandTransitionHistory> _DemandTransitionHistories;
		
		private EntitySet<DemandTransitionHistory> _DemandTransitionHistories1;
		
		private EntitySet<DemandAdjustmentTransitionHistory> _DemandAdjustmentTransitionHistories;
		
		private EntitySet<DemandAdjustmentTransitionHistory> _DemandAdjustmentTransitionHistories1;
		
		private EntitySet<Contract> _Contracts;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<WorkflowSighting> _WorkflowSightings;
		
		private EntitySet<BillDemandTransitionHistory> _BillDemandTransitionHistories;
		
		private EntitySet<BillDemandTransitionHistory> _BillDemandTransitionHistories1;
		
		private EntitySet<CostArticle> _CostArticles;
		
		private EntitySet<CostArticle> _CostArticles1;
		
		private EntitySet<CostArticle> _CostArticles2;
		
		private EntitySet<Demand> _Demands;
		
		private EntitySet<Demand> _Demands1;
		
		private EntitySet<vSecurityTrusteeRole> _vSecurityTrusteeRoles;
		
		private EntitySet<BillDemand> _BillDemands;
		
		private EntitySet<BillDemand> _BillDemands1;
		
		private EntitySet<BillDemand> _BillDemands2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsContainerChanging(bool value);
    partial void OnIsContainerChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    #endregion
		
		public SecurityTrustee()
		{
			this._Reserves = new EntitySet<Reserve>(new Action<Reserve>(this.attach_Reserves), new Action<Reserve>(this.detach_Reserves));
			this._SecurityTrusteeIdentities = new EntitySet<SecurityTrusteeIdentity>(new Action<SecurityTrusteeIdentity>(this.attach_SecurityTrusteeIdentities), new Action<SecurityTrusteeIdentity>(this.detach_SecurityTrusteeIdentities));
			this._SecurityDescriptorRecords = new EntitySet<SecurityDescriptorRecord>(new Action<SecurityDescriptorRecord>(this.attach_SecurityDescriptorRecords), new Action<SecurityDescriptorRecord>(this.detach_SecurityDescriptorRecords));
			this._SecurityGroups = new EntitySet<SecurityGroup>(new Action<SecurityGroup>(this.attach_SecurityGroups), new Action<SecurityGroup>(this.detach_SecurityGroups));
			this._SecurityGroups1 = new EntitySet<SecurityGroup>(new Action<SecurityGroup>(this.attach_SecurityGroups1), new Action<SecurityGroup>(this.detach_SecurityGroups1));
			this._Limits = new EntitySet<Limit>(new Action<Limit>(this.attach_Limits), new Action<Limit>(this.detach_Limits));
			this._Limits1 = new EntitySet<Limit>(new Action<Limit>(this.attach_Limits1), new Action<Limit>(this.detach_Limits1));
			this._DeputyEmployees = new EntitySet<DeputyEmployee>(new Action<DeputyEmployee>(this.attach_DeputyEmployees), new Action<DeputyEmployee>(this.detach_DeputyEmployees));
			this._DeputyEmployees1 = new EntitySet<DeputyEmployee>(new Action<DeputyEmployee>(this.attach_DeputyEmployees1), new Action<DeputyEmployee>(this.detach_DeputyEmployees1));
			this._Experts = new EntitySet<Expert>(new Action<Expert>(this.attach_Experts), new Action<Expert>(this.detach_Experts));
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._DemandPermissions = new EntitySet<DemandPermission>(new Action<DemandPermission>(this.attach_DemandPermissions), new Action<DemandPermission>(this.detach_DemandPermissions));
			this._DemandPermissions1 = new EntitySet<DemandPermission>(new Action<DemandPermission>(this.attach_DemandPermissions1), new Action<DemandPermission>(this.detach_DemandPermissions1));
			this._DemandTransitionHistories = new EntitySet<DemandTransitionHistory>(new Action<DemandTransitionHistory>(this.attach_DemandTransitionHistories), new Action<DemandTransitionHistory>(this.detach_DemandTransitionHistories));
			this._DemandTransitionHistories1 = new EntitySet<DemandTransitionHistory>(new Action<DemandTransitionHistory>(this.attach_DemandTransitionHistories1), new Action<DemandTransitionHistory>(this.detach_DemandTransitionHistories1));
			this._DemandAdjustmentTransitionHistories = new EntitySet<DemandAdjustmentTransitionHistory>(new Action<DemandAdjustmentTransitionHistory>(this.attach_DemandAdjustmentTransitionHistories), new Action<DemandAdjustmentTransitionHistory>(this.detach_DemandAdjustmentTransitionHistories));
			this._DemandAdjustmentTransitionHistories1 = new EntitySet<DemandAdjustmentTransitionHistory>(new Action<DemandAdjustmentTransitionHistory>(this.attach_DemandAdjustmentTransitionHistories1), new Action<DemandAdjustmentTransitionHistory>(this.detach_DemandAdjustmentTransitionHistories1));
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._WorkflowSightings = new EntitySet<WorkflowSighting>(new Action<WorkflowSighting>(this.attach_WorkflowSightings), new Action<WorkflowSighting>(this.detach_WorkflowSightings));
			this._BillDemandTransitionHistories = new EntitySet<BillDemandTransitionHistory>(new Action<BillDemandTransitionHistory>(this.attach_BillDemandTransitionHistories), new Action<BillDemandTransitionHistory>(this.detach_BillDemandTransitionHistories));
			this._BillDemandTransitionHistories1 = new EntitySet<BillDemandTransitionHistory>(new Action<BillDemandTransitionHistory>(this.attach_BillDemandTransitionHistories1), new Action<BillDemandTransitionHistory>(this.detach_BillDemandTransitionHistories1));
			this._CostArticles = new EntitySet<CostArticle>(new Action<CostArticle>(this.attach_CostArticles), new Action<CostArticle>(this.detach_CostArticles));
			this._CostArticles1 = new EntitySet<CostArticle>(new Action<CostArticle>(this.attach_CostArticles1), new Action<CostArticle>(this.detach_CostArticles1));
			this._CostArticles2 = new EntitySet<CostArticle>(new Action<CostArticle>(this.attach_CostArticles2), new Action<CostArticle>(this.detach_CostArticles2));
			this._Demands = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands), new Action<Demand>(this.detach_Demands));
			this._Demands1 = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands1), new Action<Demand>(this.detach_Demands1));
			this._vSecurityTrusteeRoles = new EntitySet<vSecurityTrusteeRole>(new Action<vSecurityTrusteeRole>(this.attach_vSecurityTrusteeRoles), new Action<vSecurityTrusteeRole>(this.detach_vSecurityTrusteeRoles));
			this._BillDemands = new EntitySet<BillDemand>(new Action<BillDemand>(this.attach_BillDemands), new Action<BillDemand>(this.detach_BillDemands));
			this._BillDemands1 = new EntitySet<BillDemand>(new Action<BillDemand>(this.attach_BillDemands1), new Action<BillDemand>(this.detach_BillDemands1));
			this._BillDemands2 = new EntitySet<BillDemand>(new Action<BillDemand>(this.attach_BillDemands2), new Action<BillDemand>(this.detach_BillDemands2));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1024)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsContainer", DbType="Bit NOT NULL")]
		public bool IsContainer
		{
			get
			{
				return this._IsContainer;
			}
			set
			{
				if ((this._IsContainer != value))
				{
					this.OnIsContainerChanging(value);
					this.SendPropertyChanging();
					this._IsContainer = value;
					this.SendPropertyChanged("IsContainer");
					this.OnIsContainerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Reserve", Storage="_Reserves", ThisKey="Id", OtherKey="ManagerId")]
		public EntitySet<Reserve> Reserves
		{
			get
			{
				return this._Reserves;
			}
			set
			{
				this._Reserves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_SecurityTrusteeIdentity", Storage="_SecurityTrusteeIdentities", ThisKey="Id", OtherKey="TrusteeId")]
		public EntitySet<SecurityTrusteeIdentity> SecurityTrusteeIdentities
		{
			get
			{
				return this._SecurityTrusteeIdentities;
			}
			set
			{
				this._SecurityTrusteeIdentities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_SecurityDescriptorRecord", Storage="_SecurityDescriptorRecords", ThisKey="Id", OtherKey="TrusteeId")]
		public EntitySet<SecurityDescriptorRecord> SecurityDescriptorRecords
		{
			get
			{
				return this._SecurityDescriptorRecords;
			}
			set
			{
				this._SecurityDescriptorRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_SecurityGroup", Storage="_SecurityGroups", ThisKey="Id", OtherKey="TrusteeId")]
		public EntitySet<SecurityGroup> SecurityGroups
		{
			get
			{
				return this._SecurityGroups;
			}
			set
			{
				this._SecurityGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_SecurityGroup1", Storage="_SecurityGroups1", ThisKey="Id", OtherKey="ContainerId")]
		public EntitySet<SecurityGroup> SecurityGroups1
		{
			get
			{
				return this._SecurityGroups1;
			}
			set
			{
				this._SecurityGroups1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Limit", Storage="_Limits", ThisKey="Id", OtherKey="ExecutorId")]
		public EntitySet<Limit> Limits
		{
			get
			{
				return this._Limits;
			}
			set
			{
				this._Limits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Limit1", Storage="_Limits1", ThisKey="Id", OtherKey="ManagerId")]
		public EntitySet<Limit> Limits1
		{
			get
			{
				return this._Limits1;
			}
			set
			{
				this._Limits1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_DeputyEmployee", Storage="_DeputyEmployees", ThisKey="Id", OtherKey="Employee")]
		public EntitySet<DeputyEmployee> DeputyEmployees
		{
			get
			{
				return this._DeputyEmployees;
			}
			set
			{
				this._DeputyEmployees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_DeputyEmployee1", Storage="_DeputyEmployees1", ThisKey="Id", OtherKey="DeputyEmployee1")]
		public EntitySet<DeputyEmployee> DeputyEmployees1
		{
			get
			{
				return this._DeputyEmployees1;
			}
			set
			{
				this._DeputyEmployees1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Expert", Storage="_Experts", ThisKey="Id", OtherKey="SecurityTrusteeId")]
		public EntitySet<Expert> Experts
		{
			get
			{
				return this._Experts;
			}
			set
			{
				this._Experts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Project", Storage="_Projects", ThisKey="Id", OtherKey="ManagerEmployeeId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_DemandPermission", Storage="_DemandPermissions", ThisKey="Id", OtherKey="AuthorId")]
		public EntitySet<DemandPermission> DemandPermissions
		{
			get
			{
				return this._DemandPermissions;
			}
			set
			{
				this._DemandPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_DemandPermission1", Storage="_DemandPermissions1", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<DemandPermission> DemandPermissions1
		{
			get
			{
				return this._DemandPermissions1;
			}
			set
			{
				this._DemandPermissions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_DemandTransitionHistory", Storage="_DemandTransitionHistories", ThisKey="Id", OtherKey="TransitionInitiatorId")]
		public EntitySet<DemandTransitionHistory> DemandTransitionHistories
		{
			get
			{
				return this._DemandTransitionHistories;
			}
			set
			{
				this._DemandTransitionHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_DemandTransitionHistory1", Storage="_DemandTransitionHistories1", ThisKey="Id", OtherKey="TransitionExpectedInitiatorId")]
		public EntitySet<DemandTransitionHistory> DemandTransitionHistories1
		{
			get
			{
				return this._DemandTransitionHistories1;
			}
			set
			{
				this._DemandTransitionHistories1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_DemandAdjustmentTransitionHistory", Storage="_DemandAdjustmentTransitionHistories", ThisKey="Id", OtherKey="TransitionInitiatorId")]
		public EntitySet<DemandAdjustmentTransitionHistory> DemandAdjustmentTransitionHistories
		{
			get
			{
				return this._DemandAdjustmentTransitionHistories;
			}
			set
			{
				this._DemandAdjustmentTransitionHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_DemandAdjustmentTransitionHistory1", Storage="_DemandAdjustmentTransitionHistories1", ThisKey="Id", OtherKey="TransitionExpectedInitiatorId")]
		public EntitySet<DemandAdjustmentTransitionHistory> DemandAdjustmentTransitionHistories1
		{
			get
			{
				return this._DemandAdjustmentTransitionHistories1;
			}
			set
			{
				this._DemandAdjustmentTransitionHistories1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Contract", Storage="_Contracts", ThisKey="Id", OtherKey="AuthorId")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Employee", Storage="_Employees", ThisKey="Id", OtherKey="SecurityTrusteeId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_WorkflowSighting", Storage="_WorkflowSightings", ThisKey="Id", OtherKey="SighterId")]
		public EntitySet<WorkflowSighting> WorkflowSightings
		{
			get
			{
				return this._WorkflowSightings;
			}
			set
			{
				this._WorkflowSightings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_BillDemandTransitionHistory", Storage="_BillDemandTransitionHistories", ThisKey="Id", OtherKey="TransitionInitiatorId")]
		public EntitySet<BillDemandTransitionHistory> BillDemandTransitionHistories
		{
			get
			{
				return this._BillDemandTransitionHistories;
			}
			set
			{
				this._BillDemandTransitionHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_BillDemandTransitionHistory1", Storage="_BillDemandTransitionHistories1", ThisKey="Id", OtherKey="TransitionExpectedInitiatorId")]
		public EntitySet<BillDemandTransitionHistory> BillDemandTransitionHistories1
		{
			get
			{
				return this._BillDemandTransitionHistories1;
			}
			set
			{
				this._BillDemandTransitionHistories1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_CostArticle", Storage="_CostArticles", ThisKey="Id", OtherKey="ExecutorId")]
		public EntitySet<CostArticle> CostArticles
		{
			get
			{
				return this._CostArticles;
			}
			set
			{
				this._CostArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_CostArticle1", Storage="_CostArticles1", ThisKey="Id", OtherKey="ManagerId")]
		public EntitySet<CostArticle> CostArticles1
		{
			get
			{
				return this._CostArticles1;
			}
			set
			{
				this._CostArticles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_CostArticle2", Storage="_CostArticles2", ThisKey="Id", OtherKey="ModifiedEmployeeId")]
		public EntitySet<CostArticle> CostArticles2
		{
			get
			{
				return this._CostArticles2;
			}
			set
			{
				this._CostArticles2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Demand", Storage="_Demands", ThisKey="Id", OtherKey="AuthorId")]
		public EntitySet<Demand> Demands
		{
			get
			{
				return this._Demands;
			}
			set
			{
				this._Demands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Demand1", Storage="_Demands1", ThisKey="Id", OtherKey="NegativeEmployeeId")]
		public EntitySet<Demand> Demands1
		{
			get
			{
				return this._Demands1;
			}
			set
			{
				this._Demands1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_vSecurityTrusteeRole", Storage="_vSecurityTrusteeRoles", ThisKey="Id", OtherKey="Id")]
		public EntitySet<vSecurityTrusteeRole> vSecurityTrusteeRoles
		{
			get
			{
				return this._vSecurityTrusteeRoles;
			}
			set
			{
				this._vSecurityTrusteeRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_BillDemand", Storage="_BillDemands", ThisKey="Id", OtherKey="AuthorId")]
		public EntitySet<BillDemand> BillDemands
		{
			get
			{
				return this._BillDemands;
			}
			set
			{
				this._BillDemands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_BillDemand1", Storage="_BillDemands1", ThisKey="Id", OtherKey="LimitManagerId")]
		public EntitySet<BillDemand> BillDemands1
		{
			get
			{
				return this._BillDemands1;
			}
			set
			{
				this._BillDemands1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_BillDemand2", Storage="_BillDemands2", ThisKey="Id", OtherKey="CuratorId")]
		public EntitySet<BillDemand> BillDemands2
		{
			get
			{
				return this._BillDemands2;
			}
			set
			{
				this._BillDemands2.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reserves(Reserve entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = this;
		}
		
		private void detach_Reserves(Reserve entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = null;
		}
		
		private void attach_SecurityTrusteeIdentities(SecurityTrusteeIdentity entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = this;
		}
		
		private void detach_SecurityTrusteeIdentities(SecurityTrusteeIdentity entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = null;
		}
		
		private void attach_SecurityDescriptorRecords(SecurityDescriptorRecord entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = this;
		}
		
		private void detach_SecurityDescriptorRecords(SecurityDescriptorRecord entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = null;
		}
		
		private void attach_SecurityGroups(SecurityGroup entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = this;
		}
		
		private void detach_SecurityGroups(SecurityGroup entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = null;
		}
		
		private void attach_SecurityGroups1(SecurityGroup entity)
		{
			this.SendPropertyChanging();
			entity.Container = this;
		}
		
		private void detach_SecurityGroups1(SecurityGroup entity)
		{
			this.SendPropertyChanging();
			entity.Container = null;
		}
		
		private void attach_Limits(Limit entity)
		{
			this.SendPropertyChanging();
			entity.Executor = this;
		}
		
		private void detach_Limits(Limit entity)
		{
			this.SendPropertyChanging();
			entity.Executor = null;
		}
		
		private void attach_Limits1(Limit entity)
		{
			this.SendPropertyChanging();
			entity.Manager = this;
		}
		
		private void detach_Limits1(Limit entity)
		{
			this.SendPropertyChanging();
			entity.Manager = null;
		}
		
		private void attach_DeputyEmployees(DeputyEmployee entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = this;
		}
		
		private void detach_DeputyEmployees(DeputyEmployee entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = null;
		}
		
		private void attach_DeputyEmployees1(DeputyEmployee entity)
		{
			this.SendPropertyChanging();
			entity.DeputySecurityTrustee = this;
		}
		
		private void detach_DeputyEmployees1(DeputyEmployee entity)
		{
			this.SendPropertyChanging();
			entity.DeputySecurityTrustee = null;
		}
		
		private void attach_Experts(Expert entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = this;
		}
		
		private void detach_Experts(Expert entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = null;
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = null;
		}
		
		private void attach_DemandPermissions(DemandPermission entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = this;
		}
		
		private void detach_DemandPermissions(DemandPermission entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = null;
		}
		
		private void attach_DemandPermissions1(DemandPermission entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee1 = this;
		}
		
		private void detach_DemandPermissions1(DemandPermission entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee1 = null;
		}
		
		private void attach_DemandTransitionHistories(DemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = this;
		}
		
		private void detach_DemandTransitionHistories(DemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = null;
		}
		
		private void attach_DemandTransitionHistories1(DemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee1 = this;
		}
		
		private void detach_DemandTransitionHistories1(DemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee1 = null;
		}
		
		private void attach_DemandAdjustmentTransitionHistories(DemandAdjustmentTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = this;
		}
		
		private void detach_DemandAdjustmentTransitionHistories(DemandAdjustmentTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = null;
		}
		
		private void attach_DemandAdjustmentTransitionHistories1(DemandAdjustmentTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee1 = this;
		}
		
		private void detach_DemandAdjustmentTransitionHistories1(DemandAdjustmentTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee1 = null;
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = null;
		}
		
		private void attach_WorkflowSightings(WorkflowSighting entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = this;
		}
		
		private void detach_WorkflowSightings(WorkflowSighting entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = null;
		}
		
		private void attach_BillDemandTransitionHistories(BillDemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = this;
		}
		
		private void detach_BillDemandTransitionHistories(BillDemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = null;
		}
		
		private void attach_BillDemandTransitionHistories1(BillDemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee1 = this;
		}
		
		private void detach_BillDemandTransitionHistories1(BillDemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee1 = null;
		}
		
		private void attach_CostArticles(CostArticle entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = this;
		}
		
		private void detach_CostArticles(CostArticle entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = null;
		}
		
		private void attach_CostArticles1(CostArticle entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee1 = this;
		}
		
		private void detach_CostArticles1(CostArticle entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee1 = null;
		}
		
		private void attach_CostArticles2(CostArticle entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee2 = this;
		}
		
		private void detach_CostArticles2(CostArticle entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee2 = null;
		}
		
		private void attach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.Author = this;
		}
		
		private void detach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.Author = null;
		}
		
		private void attach_Demands1(Demand entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee1 = this;
		}
		
		private void detach_Demands1(Demand entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee1 = null;
		}
		
		private void attach_vSecurityTrusteeRoles(vSecurityTrusteeRole entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = this;
		}
		
		private void detach_vSecurityTrusteeRoles(vSecurityTrusteeRole entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee = null;
		}
		
		private void attach_BillDemands(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.Author = this;
		}
		
		private void detach_BillDemands(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.Author = null;
		}
		
		private void attach_BillDemands1(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee1 = this;
		}
		
		private void detach_BillDemands1(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee1 = null;
		}
		
		private void attach_BillDemands2(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee2 = this;
		}
		
		private void detach_BillDemands2(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.SecurityTrustee2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecurityDescriptorRecord")]
	public partial class SecurityDescriptorRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DescriptorId;
		
		private System.Guid _TrusteeId;
		
		private System.Guid _Id;
		
		private System.Guid _RoleId;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee;
		
		private EntityRef<SecurityRole> _SecurityRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDescriptorIdChanging(System.Guid value);
    partial void OnDescriptorIdChanged();
    partial void OnTrusteeIdChanging(System.Guid value);
    partial void OnTrusteeIdChanged();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public SecurityDescriptorRecord()
		{
			this._SecurityTrustee = default(EntityRef<SecurityTrustee>);
			this._SecurityRole = default(EntityRef<SecurityRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DescriptorId
		{
			get
			{
				return this._DescriptorId;
			}
			set
			{
				if ((this._DescriptorId != value))
				{
					this.OnDescriptorIdChanging(value);
					this.SendPropertyChanging();
					this._DescriptorId = value;
					this.SendPropertyChanged("DescriptorId");
					this.OnDescriptorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrusteeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TrusteeId
		{
			get
			{
				return this._TrusteeId;
			}
			set
			{
				if ((this._TrusteeId != value))
				{
					if (this._SecurityTrustee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrusteeIdChanging(value);
					this.SendPropertyChanging();
					this._TrusteeId = value;
					this.SendPropertyChanged("TrusteeId");
					this.OnTrusteeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._SecurityRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_SecurityDescriptorRecord", Storage="_SecurityTrustee", ThisKey="TrusteeId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SecurityTrustee SecurityTrustee
		{
			get
			{
				return this._SecurityTrustee.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee.Entity = null;
						previousValue.SecurityDescriptorRecords.Remove(this);
					}
					this._SecurityTrustee.Entity = value;
					if ((value != null))
					{
						value.SecurityDescriptorRecords.Add(this);
						this._TrusteeId = value.Id;
					}
					else
					{
						this._TrusteeId = default(System.Guid);
					}
					this.SendPropertyChanged("SecurityTrustee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityRole_SecurityDescriptorRecord", Storage="_SecurityRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
		public SecurityRole SecurityRole
		{
			get
			{
				return this._SecurityRole.Entity;
			}
			set
			{
				SecurityRole previousValue = this._SecurityRole.Entity;
				if (((previousValue != value) 
							|| (this._SecurityRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityRole.Entity = null;
						previousValue.SecurityDescriptorRecords.Remove(this);
					}
					this._SecurityRole.Entity = value;
					if ((value != null))
					{
						value.SecurityDescriptorRecords.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("SecurityRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Currency")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _Code;
		
		private bool _IsBase;
		
		private bool _IsDeleted;
		
		private EntitySet<CurrencyRate> _CurrencyRates;
		
		private EntityRef<CurrencyRateActual> _CurrencyRateActual;
		
		private EntitySet<Contract> _Contracts;
		
		private EntitySet<Counteragent> _Counteragents;
		
		private EntitySet<BillDemand> _BillDemands;
		
		private EntitySet<BillDemand> _BillDemands1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnIsBaseChanging(bool value);
    partial void OnIsBaseChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public Currency()
		{
			this._CurrencyRates = new EntitySet<CurrencyRate>(new Action<CurrencyRate>(this.attach_CurrencyRates), new Action<CurrencyRate>(this.detach_CurrencyRates));
			this._CurrencyRateActual = default(EntityRef<CurrencyRateActual>);
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._Counteragents = new EntitySet<Counteragent>(new Action<Counteragent>(this.attach_Counteragents), new Action<Counteragent>(this.detach_Counteragents));
			this._BillDemands = new EntitySet<BillDemand>(new Action<BillDemand>(this.attach_BillDemands), new Action<BillDemand>(this.detach_BillDemands));
			this._BillDemands1 = new EntitySet<BillDemand>(new Action<BillDemand>(this.attach_BillDemands1), new Action<BillDemand>(this.detach_BillDemands1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(4)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBase", DbType="Bit NOT NULL")]
		public bool IsBase
		{
			get
			{
				return this._IsBase;
			}
			set
			{
				if ((this._IsBase != value))
				{
					this.OnIsBaseChanging(value);
					this.SendPropertyChanging();
					this._IsBase = value;
					this.SendPropertyChanged("IsBase");
					this.OnIsBaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CurrencyRate", Storage="_CurrencyRates", ThisKey="Id", OtherKey="CurrencyId")]
		public EntitySet<CurrencyRate> CurrencyRates
		{
			get
			{
				return this._CurrencyRates;
			}
			set
			{
				this._CurrencyRates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CurrencyRateActual", Storage="_CurrencyRateActual", ThisKey="Id", OtherKey="CurrencyId", IsUnique=true, IsForeignKey=false)]
		public CurrencyRateActual CurrencyRateActual
		{
			get
			{
				return this._CurrencyRateActual.Entity;
			}
			set
			{
				CurrencyRateActual previousValue = this._CurrencyRateActual.Entity;
				if (((previousValue != value) 
							|| (this._CurrencyRateActual.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrencyRateActual.Entity = null;
						previousValue.Currency = null;
					}
					this._CurrencyRateActual.Entity = value;
					if ((value != null))
					{
						value.Currency = this;
					}
					this.SendPropertyChanged("CurrencyRateActual");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Contract", Storage="_Contracts", ThisKey="Id", OtherKey="CurrencyId")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Counteragent", Storage="_Counteragents", ThisKey="Id", OtherKey="CurrencyId")]
		public EntitySet<Counteragent> Counteragents
		{
			get
			{
				return this._Counteragents;
			}
			set
			{
				this._Counteragents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_BillDemand", Storage="_BillDemands", ThisKey="Id", OtherKey="CurrencyId")]
		public EntitySet<BillDemand> BillDemands
		{
			get
			{
				return this._BillDemands;
			}
			set
			{
				this._BillDemands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_BillDemand1", Storage="_BillDemands1", ThisKey="Id", OtherKey="PaymentCurrencyId")]
		public EntitySet<BillDemand> BillDemands1
		{
			get
			{
				return this._BillDemands1;
			}
			set
			{
				this._BillDemands1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CurrencyRates(CurrencyRate entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_CurrencyRates(CurrencyRate entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_Counteragents(Counteragent entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_Counteragents(Counteragent entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_BillDemands(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_BillDemands(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_BillDemands1(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.Currency1 = this;
		}
		
		private void detach_BillDemands1(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.Currency1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CurrencyRate")]
	public partial class CurrencyRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CurrencyId;
		
		private System.DateTime _RateDate;
		
		private decimal _Rate;
		
		private decimal _RevRate;
		
		private EntityRef<Currency> _Currency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrencyIdChanging(System.Guid value);
    partial void OnCurrencyIdChanged();
    partial void OnRateDateChanging(System.DateTime value);
    partial void OnRateDateChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnRevRateChanging(decimal value);
    partial void OnRevRateChanged();
    #endregion
		
		public CurrencyRate()
		{
			this._Currency = default(EntityRef<Currency>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime RateDate
		{
			get
			{
				return this._RateDate;
			}
			set
			{
				if ((this._RateDate != value))
				{
					this.OnRateDateChanging(value);
					this.SendPropertyChanging();
					this._RateDate = value;
					this.SendPropertyChanged("RateDate");
					this.OnRateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,9) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevRate", DbType="Decimal(18,9) NOT NULL")]
		public decimal RevRate
		{
			get
			{
				return this._RevRate;
			}
			set
			{
				if ((this._RevRate != value))
				{
					this.OnRevRateChanging(value);
					this.SendPropertyChanging();
					this._RevRate = value;
					this.SendPropertyChanged("RevRate");
					this.OnRevRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CurrencyRate", Storage="_Currency", ThisKey="CurrencyId", OtherKey="Id", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.CurrencyRates.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.CurrencyRates.Add(this);
						this._CurrencyId = value.Id;
					}
					else
					{
						this._CurrencyId = default(System.Guid);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecurityRole")]
	public partial class SecurityRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private EntitySet<SecurityDescriptorRecord> _SecurityDescriptorRecords;
		
		private EntitySet<SecurityRoleRecord> _SecurityRoleRecords;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public SecurityRole()
		{
			this._SecurityDescriptorRecords = new EntitySet<SecurityDescriptorRecord>(new Action<SecurityDescriptorRecord>(this.attach_SecurityDescriptorRecords), new Action<SecurityDescriptorRecord>(this.detach_SecurityDescriptorRecords));
			this._SecurityRoleRecords = new EntitySet<SecurityRoleRecord>(new Action<SecurityRoleRecord>(this.attach_SecurityRoleRecords), new Action<SecurityRoleRecord>(this.detach_SecurityRoleRecords));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityRole_SecurityDescriptorRecord", Storage="_SecurityDescriptorRecords", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<SecurityDescriptorRecord> SecurityDescriptorRecords
		{
			get
			{
				return this._SecurityDescriptorRecords;
			}
			set
			{
				this._SecurityDescriptorRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityRole_SecurityRoleRecord", Storage="_SecurityRoleRecords", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<SecurityRoleRecord> SecurityRoleRecords
		{
			get
			{
				return this._SecurityRoleRecords;
			}
			set
			{
				this._SecurityRoleRecords.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SecurityDescriptorRecords(SecurityDescriptorRecord entity)
		{
			this.SendPropertyChanging();
			entity.SecurityRole = this;
		}
		
		private void detach_SecurityDescriptorRecords(SecurityDescriptorRecord entity)
		{
			this.SendPropertyChanging();
			entity.SecurityRole = null;
		}
		
		private void attach_SecurityRoleRecords(SecurityRoleRecord entity)
		{
			this.SendPropertyChanging();
			entity.SecurityRole = this;
		}
		
		private void detach_SecurityRoleRecords(SecurityRoleRecord entity)
		{
			this.SendPropertyChanging();
			entity.SecurityRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecurityGroup")]
	public partial class SecurityGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TrusteeId;
		
		private System.Guid _ContainerId;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee;
		
		private EntityRef<SecurityTrustee> _Container;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrusteeIdChanging(System.Guid value);
    partial void OnTrusteeIdChanged();
    partial void OnContainerIdChanging(System.Guid value);
    partial void OnContainerIdChanged();
    #endregion
		
		public SecurityGroup()
		{
			this._SecurityTrustee = default(EntityRef<SecurityTrustee>);
			this._Container = default(EntityRef<SecurityTrustee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrusteeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TrusteeId
		{
			get
			{
				return this._TrusteeId;
			}
			set
			{
				if ((this._TrusteeId != value))
				{
					if (this._SecurityTrustee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrusteeIdChanging(value);
					this.SendPropertyChanging();
					this._TrusteeId = value;
					this.SendPropertyChanged("TrusteeId");
					this.OnTrusteeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainerId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ContainerId
		{
			get
			{
				return this._ContainerId;
			}
			set
			{
				if ((this._ContainerId != value))
				{
					if (this._Container.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContainerIdChanging(value);
					this.SendPropertyChanging();
					this._ContainerId = value;
					this.SendPropertyChanged("ContainerId");
					this.OnContainerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_SecurityGroup", Storage="_SecurityTrustee", ThisKey="TrusteeId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SecurityTrustee SecurityTrustee
		{
			get
			{
				return this._SecurityTrustee.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee.Entity = null;
						previousValue.SecurityGroups.Remove(this);
					}
					this._SecurityTrustee.Entity = value;
					if ((value != null))
					{
						value.SecurityGroups.Add(this);
						this._TrusteeId = value.Id;
					}
					else
					{
						this._TrusteeId = default(System.Guid);
					}
					this.SendPropertyChanged("SecurityTrustee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_SecurityGroup1", Storage="_Container", ThisKey="ContainerId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee Container
		{
			get
			{
				return this._Container.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._Container.Entity;
				if (((previousValue != value) 
							|| (this._Container.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Container.Entity = null;
						previousValue.SecurityGroups1.Remove(this);
					}
					this._Container.Entity = value;
					if ((value != null))
					{
						value.SecurityGroups1.Add(this);
						this._ContainerId = value.Id;
					}
					else
					{
						this._ContainerId = default(System.Guid);
					}
					this.SendPropertyChanged("Container");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BudgetVersion")]
	public partial class BudgetVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private System.Guid _BudgetId;
		
		private bool _IsCurrent;
		
		private EntitySet<Limit> _Limits;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<Contract> _Contracts;
		
		private EntitySet<Counteragent> _Counteragents;
		
		private EntitySet<CostArticle> _CostArticles;
		
		private EntitySet<Demand> _Demands;
		
		private EntitySet<Filial> _Filials;
		
		private EntityRef<Budget> _Budget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBudgetIdChanging(System.Guid value);
    partial void OnBudgetIdChanged();
    partial void OnIsCurrentChanging(bool value);
    partial void OnIsCurrentChanged();
    #endregion
		
		public BudgetVersion()
		{
			this._Limits = new EntitySet<Limit>(new Action<Limit>(this.attach_Limits), new Action<Limit>(this.detach_Limits));
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._Counteragents = new EntitySet<Counteragent>(new Action<Counteragent>(this.attach_Counteragents), new Action<Counteragent>(this.detach_Counteragents));
			this._CostArticles = new EntitySet<CostArticle>(new Action<CostArticle>(this.attach_CostArticles), new Action<CostArticle>(this.detach_CostArticles));
			this._Demands = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands), new Action<Demand>(this.detach_Demands));
			this._Filials = new EntitySet<Filial>(new Action<Filial>(this.attach_Filials), new Action<Filial>(this.detach_Filials));
			this._Budget = default(EntityRef<Budget>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(2048) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BudgetId
		{
			get
			{
				return this._BudgetId;
			}
			set
			{
				if ((this._BudgetId != value))
				{
					if (this._Budget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudgetIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetId = value;
					this.SendPropertyChanged("BudgetId");
					this.OnBudgetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrent", DbType="Bit NOT NULL")]
		public bool IsCurrent
		{
			get
			{
				return this._IsCurrent;
			}
			set
			{
				if ((this._IsCurrent != value))
				{
					this.OnIsCurrentChanging(value);
					this.SendPropertyChanging();
					this._IsCurrent = value;
					this.SendPropertyChanged("IsCurrent");
					this.OnIsCurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetVersion_Limit", Storage="_Limits", ThisKey="Id", OtherKey="BudgetVersionId")]
		public EntitySet<Limit> Limits
		{
			get
			{
				return this._Limits;
			}
			set
			{
				this._Limits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetVersion_Project", Storage="_Projects", ThisKey="Id", OtherKey="BudgetVersionId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetVersion_Contract", Storage="_Contracts", ThisKey="Id", OtherKey="BudgetVersionId")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetVersion_Counteragent", Storage="_Counteragents", ThisKey="Id", OtherKey="BudgetVersionId")]
		public EntitySet<Counteragent> Counteragents
		{
			get
			{
				return this._Counteragents;
			}
			set
			{
				this._Counteragents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetVersion_CostArticle", Storage="_CostArticles", ThisKey="Id", OtherKey="BudgetVersionId")]
		public EntitySet<CostArticle> CostArticles
		{
			get
			{
				return this._CostArticles;
			}
			set
			{
				this._CostArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetVersion_Demand", Storage="_Demands", ThisKey="Id", OtherKey="BudgetVersionId")]
		public EntitySet<Demand> Demands
		{
			get
			{
				return this._Demands;
			}
			set
			{
				this._Demands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetVersion_Filial", Storage="_Filials", ThisKey="Id", OtherKey="BudgetVersionId")]
		public EntitySet<Filial> Filials
		{
			get
			{
				return this._Filials;
			}
			set
			{
				this._Filials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_BudgetVersion", Storage="_Budget", ThisKey="BudgetId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Budget Budget
		{
			get
			{
				return this._Budget.Entity;
			}
			set
			{
				Budget previousValue = this._Budget.Entity;
				if (((previousValue != value) 
							|| (this._Budget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Budget.Entity = null;
						previousValue.BudgetVersions.Remove(this);
					}
					this._Budget.Entity = value;
					if ((value != null))
					{
						value.BudgetVersions.Add(this);
						this._BudgetId = value.Id;
					}
					else
					{
						this._BudgetId = default(System.Guid);
					}
					this.SendPropertyChanged("Budget");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Limits(Limit entity)
		{
			this.SendPropertyChanging();
			entity.BudgetVersion = this;
		}
		
		private void detach_Limits(Limit entity)
		{
			this.SendPropertyChanging();
			entity.BudgetVersion = null;
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.BudgetVersion = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.BudgetVersion = null;
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.BudgetVersion = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.BudgetVersion = null;
		}
		
		private void attach_Counteragents(Counteragent entity)
		{
			this.SendPropertyChanging();
			entity.BudgetVersion = this;
		}
		
		private void detach_Counteragents(Counteragent entity)
		{
			this.SendPropertyChanging();
			entity.BudgetVersion = null;
		}
		
		private void attach_CostArticles(CostArticle entity)
		{
			this.SendPropertyChanging();
			entity.BudgetVersion = this;
		}
		
		private void detach_CostArticles(CostArticle entity)
		{
			this.SendPropertyChanging();
			entity.BudgetVersion = null;
		}
		
		private void attach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.BudgetVersion = this;
		}
		
		private void detach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.BudgetVersion = null;
		}
		
		private void attach_Filials(Filial entity)
		{
			this.SendPropertyChanging();
			entity.BudgetVersion = this;
		}
		
		private void detach_Filials(Filial entity)
		{
			this.SendPropertyChanging();
			entity.BudgetVersion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Budget")]
	public partial class Budget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private int _Name;
		
		private byte _StatusId;
		
		private string _Description;
		
		private bool _IsFrozen;
		
		private bool _IsConfirm;
		
		private EntitySet<Reserve> _Reserves;
		
		private EntitySet<StructDivision> _StructDivisions;
		
		private EntitySet<BudgetVersion> _BudgetVersions;
		
		private EntitySet<Expert> _Experts;
		
		private EntitySet<CFO> _CFOs;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<BillDemand> _BillDemands;
		
		private EntityRef<BudgetStatus> _BudgetStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(int value);
    partial void OnNameChanged();
    partial void OnStatusIdChanging(byte value);
    partial void OnStatusIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsFrozenChanging(bool value);
    partial void OnIsFrozenChanged();
    partial void OnIsConfirmChanging(bool value);
    partial void OnIsConfirmChanged();
    #endregion
		
		public Budget()
		{
			this._Reserves = new EntitySet<Reserve>(new Action<Reserve>(this.attach_Reserves), new Action<Reserve>(this.detach_Reserves));
			this._StructDivisions = new EntitySet<StructDivision>(new Action<StructDivision>(this.attach_StructDivisions), new Action<StructDivision>(this.detach_StructDivisions));
			this._BudgetVersions = new EntitySet<BudgetVersion>(new Action<BudgetVersion>(this.attach_BudgetVersions), new Action<BudgetVersion>(this.detach_BudgetVersions));
			this._Experts = new EntitySet<Expert>(new Action<Expert>(this.attach_Experts), new Action<Expert>(this.detach_Experts));
			this._CFOs = new EntitySet<CFO>(new Action<CFO>(this.attach_CFOs), new Action<CFO>(this.detach_CFOs));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._BillDemands = new EntitySet<BillDemand>(new Action<BillDemand>(this.attach_BillDemands), new Action<BillDemand>(this.detach_BillDemands));
			this._BudgetStatus = default(EntityRef<BudgetStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="Int NOT NULL")]
		public int Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="TinyInt NOT NULL")]
		public byte StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._BudgetStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFrozen", DbType="Bit NOT NULL")]
		public bool IsFrozen
		{
			get
			{
				return this._IsFrozen;
			}
			set
			{
				if ((this._IsFrozen != value))
				{
					this.OnIsFrozenChanging(value);
					this.SendPropertyChanging();
					this._IsFrozen = value;
					this.SendPropertyChanged("IsFrozen");
					this.OnIsFrozenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfirm", DbType="Bit NOT NULL")]
		public bool IsConfirm
		{
			get
			{
				return this._IsConfirm;
			}
			set
			{
				if ((this._IsConfirm != value))
				{
					this.OnIsConfirmChanging(value);
					this.SendPropertyChanging();
					this._IsConfirm = value;
					this.SendPropertyChanged("IsConfirm");
					this.OnIsConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_Reserve", Storage="_Reserves", ThisKey="Id", OtherKey="BudgetId")]
		public EntitySet<Reserve> Reserves
		{
			get
			{
				return this._Reserves;
			}
			set
			{
				this._Reserves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_StructDivision", Storage="_StructDivisions", ThisKey="Id", OtherKey="BudgetId")]
		public EntitySet<StructDivision> StructDivisions
		{
			get
			{
				return this._StructDivisions;
			}
			set
			{
				this._StructDivisions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_BudgetVersion", Storage="_BudgetVersions", ThisKey="Id", OtherKey="BudgetId")]
		public EntitySet<BudgetVersion> BudgetVersions
		{
			get
			{
				return this._BudgetVersions;
			}
			set
			{
				this._BudgetVersions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_Expert", Storage="_Experts", ThisKey="Id", OtherKey="BudgetId")]
		public EntitySet<Expert> Experts
		{
			get
			{
				return this._Experts;
			}
			set
			{
				this._Experts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_CFO", Storage="_CFOs", ThisKey="Id", OtherKey="BudgetId")]
		public EntitySet<CFO> CFOs
		{
			get
			{
				return this._CFOs;
			}
			set
			{
				this._CFOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_Employee", Storage="_Employees", ThisKey="Id", OtherKey="BudgetId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_BillDemand", Storage="_BillDemands", ThisKey="Id", OtherKey="BudgetId")]
		public EntitySet<BillDemand> BillDemands
		{
			get
			{
				return this._BillDemands;
			}
			set
			{
				this._BillDemands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetStatus_Budget", Storage="_BudgetStatus", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
		public BudgetStatus BudgetStatus
		{
			get
			{
				return this._BudgetStatus.Entity;
			}
			set
			{
				BudgetStatus previousValue = this._BudgetStatus.Entity;
				if (((previousValue != value) 
							|| (this._BudgetStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BudgetStatus.Entity = null;
						previousValue.Budgets.Remove(this);
					}
					this._BudgetStatus.Entity = value;
					if ((value != null))
					{
						value.Budgets.Add(this);
						this._StatusId = value.Id;
					}
					else
					{
						this._StatusId = default(byte);
					}
					this.SendPropertyChanged("BudgetStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reserves(Reserve entity)
		{
			this.SendPropertyChanging();
			entity.Budget = this;
		}
		
		private void detach_Reserves(Reserve entity)
		{
			this.SendPropertyChanging();
			entity.Budget = null;
		}
		
		private void attach_StructDivisions(StructDivision entity)
		{
			this.SendPropertyChanging();
			entity.Budget = this;
		}
		
		private void detach_StructDivisions(StructDivision entity)
		{
			this.SendPropertyChanging();
			entity.Budget = null;
		}
		
		private void attach_BudgetVersions(BudgetVersion entity)
		{
			this.SendPropertyChanging();
			entity.Budget = this;
		}
		
		private void detach_BudgetVersions(BudgetVersion entity)
		{
			this.SendPropertyChanging();
			entity.Budget = null;
		}
		
		private void attach_Experts(Expert entity)
		{
			this.SendPropertyChanging();
			entity.Budget = this;
		}
		
		private void detach_Experts(Expert entity)
		{
			this.SendPropertyChanging();
			entity.Budget = null;
		}
		
		private void attach_CFOs(CFO entity)
		{
			this.SendPropertyChanging();
			entity.Budget = this;
		}
		
		private void detach_CFOs(CFO entity)
		{
			this.SendPropertyChanging();
			entity.Budget = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Budget = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Budget = null;
		}
		
		private void attach_BillDemands(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.Budget = this;
		}
		
		private void detach_BillDemands(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.Budget = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BudgetStatus")]
	public partial class BudgetStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Id;
		
		private string _Name;
		
		private EntitySet<Budget> _Budgets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(byte value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public BudgetStatus()
		{
			this._Budgets = new EntitySet<Budget>(new Action<Budget>(this.attach_Budgets), new Action<Budget>(this.detach_Budgets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetStatus_Budget", Storage="_Budgets", ThisKey="Id", OtherKey="StatusId")]
		public EntitySet<Budget> Budgets
		{
			get
			{
				return this._Budgets;
			}
			set
			{
				this._Budgets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Budgets(Budget entity)
		{
			this.SendPropertyChanging();
			entity.BudgetStatus = this;
		}
		
		private void detach_Budgets(Budget entity)
		{
			this.SendPropertyChanging();
			entity.BudgetStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _Fax;
		
		private string _Phone;
		
		private string _Email;
		
		private string _Address;
		
		private System.Guid _CountragentId;
		
		private System.Guid _BudgetVersionId;
		
		private bool _IsDeleted;
		
		private EntityRef<Counteragent> _Counteragent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCountragentIdChanging(System.Guid value);
    partial void OnCountragentIdChanged();
    partial void OnBudgetVersionIdChanging(System.Guid value);
    partial void OnBudgetVersionIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public Contact()
		{
			this._Counteragent = default(EntityRef<Counteragent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(255)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(255)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(2048)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountragentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CountragentId
		{
			get
			{
				return this._CountragentId;
			}
			set
			{
				if ((this._CountragentId != value))
				{
					if (this._Counteragent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountragentIdChanging(value);
					this.SendPropertyChanging();
					this._CountragentId = value;
					this.SendPropertyChanged("CountragentId");
					this.OnCountragentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetVersionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BudgetVersionId
		{
			get
			{
				return this._BudgetVersionId;
			}
			set
			{
				if ((this._BudgetVersionId != value))
				{
					this.OnBudgetVersionIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetVersionId = value;
					this.SendPropertyChanged("BudgetVersionId");
					this.OnBudgetVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counteragent_Contact", Storage="_Counteragent", ThisKey="CountragentId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Counteragent Counteragent
		{
			get
			{
				return this._Counteragent.Entity;
			}
			set
			{
				Counteragent previousValue = this._Counteragent.Entity;
				if (((previousValue != value) 
							|| (this._Counteragent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Counteragent.Entity = null;
						previousValue.Contacts.Remove(this);
					}
					this._Counteragent.Entity = value;
					if ((value != null))
					{
						value.Contacts.Add(this);
						this._CountragentId = value.Id;
					}
					else
					{
						this._CountragentId = default(System.Guid);
					}
					this.SendPropertyChanged("Counteragent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContractAllocation")]
	public partial class ContractAllocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _ContractId;
		
		private System.Guid _AllocationId;
		
		private double _Weight;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnContractIdChanging(System.Guid value);
    partial void OnContractIdChanged();
    partial void OnAllocationIdChanging(System.Guid value);
    partial void OnAllocationIdChanged();
    partial void OnWeightChanging(double value);
    partial void OnWeightChanged();
    #endregion
		
		public ContractAllocation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ContractId
		{
			get
			{
				return this._ContractId;
			}
			set
			{
				if ((this._ContractId != value))
				{
					this.OnContractIdChanging(value);
					this.SendPropertyChanging();
					this._ContractId = value;
					this.SendPropertyChanged("ContractId");
					this.OnContractIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllocationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AllocationId
		{
			get
			{
				return this._AllocationId;
			}
			set
			{
				if ((this._AllocationId != value))
				{
					this.OnAllocationIdChanging(value);
					this.SendPropertyChanging();
					this._AllocationId = value;
					this.SendPropertyChanged("AllocationId");
					this.OnAllocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float NOT NULL")]
		public double Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContractStatus")]
	public partial class ContractStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Id;
		
		private string _Name;
		
		private EntitySet<Contract> _Contracts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(byte value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ContractStatus()
		{
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractStatus_Contract", Storage="_Contracts", ThisKey="Id", OtherKey="StatusId")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.ContractStatus = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.ContractStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Limit")]
	public partial class Limit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _Code;
		
		private System.Guid _BudgetVersionId;
		
		private System.Nullable<System.Guid> _ManagerId;
		
		private System.Nullable<System.Guid> _ExecutorId;
		
		private System.Nullable<decimal> _Sum;
		
		private System.Nullable<byte> _TypeId;
		
		private bool _IsDeleted;
		
		private EntitySet<CostArticle> _CostArticles;
		
		private EntitySet<Demand> _Demands;
		
		private EntityRef<BudgetVersion> _BudgetVersion;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnBudgetVersionIdChanging(System.Guid value);
    partial void OnBudgetVersionIdChanged();
    partial void OnManagerIdChanging(System.Nullable<System.Guid> value);
    partial void OnManagerIdChanged();
    partial void OnExecutorIdChanging(System.Nullable<System.Guid> value);
    partial void OnExecutorIdChanged();
    partial void OnSumChanging(System.Nullable<decimal> value);
    partial void OnSumChanged();
    partial void OnTypeIdChanging(System.Nullable<byte> value);
    partial void OnTypeIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public Limit()
		{
			this._CostArticles = new EntitySet<CostArticle>(new Action<CostArticle>(this.attach_CostArticles), new Action<CostArticle>(this.detach_CostArticles));
			this._Demands = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands), new Action<Demand>(this.detach_Demands));
			this._BudgetVersion = default(EntityRef<BudgetVersion>);
			this._SecurityTrustee = default(EntityRef<SecurityTrustee>);
			this._SecurityTrustee1 = default(EntityRef<SecurityTrustee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetVersionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BudgetVersionId
		{
			get
			{
				return this._BudgetVersionId;
			}
			set
			{
				if ((this._BudgetVersionId != value))
				{
					if (this._BudgetVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudgetVersionIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetVersionId = value;
					this.SendPropertyChanged("BudgetVersionId");
					this.OnBudgetVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ManagerId
		{
			get
			{
				return this._ManagerId;
			}
			set
			{
				if ((this._ManagerId != value))
				{
					if (this._SecurityTrustee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ManagerId = value;
					this.SendPropertyChanged("ManagerId");
					this.OnManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ExecutorId
		{
			get
			{
				return this._ExecutorId;
			}
			set
			{
				if ((this._ExecutorId != value))
				{
					if (this._SecurityTrustee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExecutorIdChanging(value);
					this.SendPropertyChanging();
					this._ExecutorId = value;
					this.SendPropertyChanged("ExecutorId");
					this.OnExecutorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this.OnSumChanging(value);
					this.SendPropertyChanging();
					this._Sum = value;
					this.SendPropertyChanged("Sum");
					this.OnSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="TinyInt")]
		public System.Nullable<byte> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Limit_CostArticle", Storage="_CostArticles", ThisKey="Id", OtherKey="LimitId")]
		public EntitySet<CostArticle> CostArticles
		{
			get
			{
				return this._CostArticles;
			}
			set
			{
				this._CostArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Limit_Demand", Storage="_Demands", ThisKey="Id", OtherKey="LimitId")]
		public EntitySet<Demand> Demands
		{
			get
			{
				return this._Demands;
			}
			set
			{
				this._Demands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetVersion_Limit", Storage="_BudgetVersion", ThisKey="BudgetVersionId", OtherKey="Id", IsForeignKey=true)]
		public BudgetVersion BudgetVersion
		{
			get
			{
				return this._BudgetVersion.Entity;
			}
			set
			{
				BudgetVersion previousValue = this._BudgetVersion.Entity;
				if (((previousValue != value) 
							|| (this._BudgetVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BudgetVersion.Entity = null;
						previousValue.Limits.Remove(this);
					}
					this._BudgetVersion.Entity = value;
					if ((value != null))
					{
						value.Limits.Add(this);
						this._BudgetVersionId = value.Id;
					}
					else
					{
						this._BudgetVersionId = default(System.Guid);
					}
					this.SendPropertyChanged("BudgetVersion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Limit", Storage="_SecurityTrustee", ThisKey="ExecutorId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee Executor
		{
			get
			{
				return this._SecurityTrustee.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee.Entity = null;
						previousValue.Limits.Remove(this);
					}
					this._SecurityTrustee.Entity = value;
					if ((value != null))
					{
						value.Limits.Add(this);
						this._ExecutorId = value.Id;
					}
					else
					{
						this._ExecutorId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Executor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Limit1", Storage="_SecurityTrustee1", ThisKey="ManagerId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee Manager
		{
			get
			{
				return this._SecurityTrustee1.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee1.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee1.Entity = null;
						previousValue.Limits1.Remove(this);
					}
					this._SecurityTrustee1.Entity = value;
					if ((value != null))
					{
						value.Limits1.Add(this);
						this._ManagerId = value.Id;
					}
					else
					{
						this._ManagerId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Manager");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CostArticles(CostArticle entity)
		{
			this.SendPropertyChanging();
			entity.Limit = this;
		}
		
		private void detach_CostArticles(CostArticle entity)
		{
			this.SendPropertyChanging();
			entity.Limit = null;
		}
		
		private void attach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.Limit = this;
		}
		
		private void detach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.Limit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DemandMoney")]
	public partial class DemandMoney : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _DemandId;
		
		private byte _MonthId;
		
		private decimal _Sum;
		
		private EntityRef<Month> _Month;
		
		private EntityRef<Demand> _Demand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnDemandIdChanging(System.Guid value);
    partial void OnDemandIdChanged();
    partial void OnMonthIdChanging(byte value);
    partial void OnMonthIdChanged();
    partial void OnSumChanging(decimal value);
    partial void OnSumChanged();
    #endregion
		
		public DemandMoney()
		{
			this._Month = default(EntityRef<Month>);
			this._Demand = default(EntityRef<Demand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DemandId
		{
			get
			{
				return this._DemandId;
			}
			set
			{
				if ((this._DemandId != value))
				{
					if (this._Demand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIdChanging(value);
					this.SendPropertyChanging();
					this._DemandId = value;
					this.SendPropertyChanged("DemandId");
					this.OnDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthId", DbType="TinyInt NOT NULL")]
		public byte MonthId
		{
			get
			{
				return this._MonthId;
			}
			set
			{
				if ((this._MonthId != value))
				{
					if (this._Month.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMonthIdChanging(value);
					this.SendPropertyChanging();
					this._MonthId = value;
					this.SendPropertyChanged("MonthId");
					this.OnMonthIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Money NOT NULL")]
		public decimal Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this.OnSumChanging(value);
					this.SendPropertyChanging();
					this._Sum = value;
					this.SendPropertyChanged("Sum");
					this.OnSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Month_DemandMoney", Storage="_Month", ThisKey="MonthId", OtherKey="Id", IsForeignKey=true)]
		public Month Month
		{
			get
			{
				return this._Month.Entity;
			}
			set
			{
				Month previousValue = this._Month.Entity;
				if (((previousValue != value) 
							|| (this._Month.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Month.Entity = null;
						previousValue.DemandMoneys.Remove(this);
					}
					this._Month.Entity = value;
					if ((value != null))
					{
						value.DemandMoneys.Add(this);
						this._MonthId = value.Id;
					}
					else
					{
						this._MonthId = default(byte);
					}
					this.SendPropertyChanged("Month");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_DemandMoney", Storage="_Demand", ThisKey="DemandId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Demand Demand
		{
			get
			{
				return this._Demand.Entity;
			}
			set
			{
				Demand previousValue = this._Demand.Entity;
				if (((previousValue != value) 
							|| (this._Demand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Demand.Entity = null;
						previousValue.DemandMoneys.Remove(this);
					}
					this._Demand.Entity = value;
					if ((value != null))
					{
						value.DemandMoneys.Add(this);
						this._DemandId = value.Id;
					}
					else
					{
						this._DemandId = default(System.Guid);
					}
					this.SendPropertyChanged("Demand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExpertCostArticle")]
	public partial class ExpertCostArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ExpertId;
		
		private System.Guid _CostArticleId;
		
		private EntityRef<Expert> _Expert;
		
		private EntityRef<CostArticle> _CostArticle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExpertIdChanging(System.Guid value);
    partial void OnExpertIdChanged();
    partial void OnCostArticleIdChanging(System.Guid value);
    partial void OnCostArticleIdChanged();
    #endregion
		
		public ExpertCostArticle()
		{
			this._Expert = default(EntityRef<Expert>);
			this._CostArticle = default(EntityRef<CostArticle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpertId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ExpertId
		{
			get
			{
				return this._ExpertId;
			}
			set
			{
				if ((this._ExpertId != value))
				{
					if (this._Expert.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpertIdChanging(value);
					this.SendPropertyChanging();
					this._ExpertId = value;
					this.SendPropertyChanged("ExpertId");
					this.OnExpertIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostArticleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CostArticleId
		{
			get
			{
				return this._CostArticleId;
			}
			set
			{
				if ((this._CostArticleId != value))
				{
					if (this._CostArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostArticleIdChanging(value);
					this.SendPropertyChanging();
					this._CostArticleId = value;
					this.SendPropertyChanged("CostArticleId");
					this.OnCostArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Expert_ExpertCostArticle", Storage="_Expert", ThisKey="ExpertId", OtherKey="Id", IsForeignKey=true)]
		public Expert Expert
		{
			get
			{
				return this._Expert.Entity;
			}
			set
			{
				Expert previousValue = this._Expert.Entity;
				if (((previousValue != value) 
							|| (this._Expert.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Expert.Entity = null;
						previousValue.ExpertCostArticles.Remove(this);
					}
					this._Expert.Entity = value;
					if ((value != null))
					{
						value.ExpertCostArticles.Add(this);
						this._ExpertId = value.Id;
					}
					else
					{
						this._ExpertId = default(System.Guid);
					}
					this.SendPropertyChanged("Expert");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostArticle_ExpertCostArticle", Storage="_CostArticle", ThisKey="CostArticleId", OtherKey="Id", IsForeignKey=true)]
		public CostArticle CostArticle
		{
			get
			{
				return this._CostArticle.Entity;
			}
			set
			{
				CostArticle previousValue = this._CostArticle.Entity;
				if (((previousValue != value) 
							|| (this._CostArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CostArticle.Entity = null;
						previousValue.ExpertCostArticles.Remove(this);
					}
					this._CostArticle.Entity = value;
					if ((value != null))
					{
						value.ExpertCostArticles.Add(this);
						this._CostArticleId = value.Id;
					}
					else
					{
						this._CostArticleId = default(System.Guid);
					}
					this.SendPropertyChanged("CostArticle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeputyEmployee")]
	public partial class DeputyEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.DateTime _CreateDate;
		
		private System.Guid _Employee;
		
		private System.Guid _DeputyEmployee1;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnEmployeeChanging(System.Guid value);
    partial void OnEmployeeChanged();
    partial void OnDeputyEmployee1Changing(System.Guid value);
    partial void OnDeputyEmployee1Changed();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public DeputyEmployee()
		{
			this._SecurityTrustee = default(EntityRef<SecurityTrustee>);
			this._SecurityTrustee1 = default(EntityRef<SecurityTrustee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				if ((this._Employee != value))
				{
					if (this._SecurityTrustee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeChanging(value);
					this.SendPropertyChanging();
					this._Employee = value;
					this.SendPropertyChanged("Employee");
					this.OnEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DeputyEmployee", Storage="_DeputyEmployee1", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DeputyEmployee1
		{
			get
			{
				return this._DeputyEmployee1;
			}
			set
			{
				if ((this._DeputyEmployee1 != value))
				{
					this.OnDeputyEmployee1Changing(value);
					this.SendPropertyChanging();
					this._DeputyEmployee1 = value;
					this.SendPropertyChanged("DeputyEmployee1");
					this.OnDeputyEmployee1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_DeputyEmployee", Storage="_SecurityTrustee", ThisKey="Employee", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee
		{
			get
			{
				return this._SecurityTrustee.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee.Entity = null;
						previousValue.DeputyEmployees.Remove(this);
					}
					this._SecurityTrustee.Entity = value;
					if ((value != null))
					{
						value.DeputyEmployees.Add(this);
						this._Employee = value.Id;
					}
					else
					{
						this._Employee = default(System.Guid);
					}
					this.SendPropertyChanged("SecurityTrustee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_DeputyEmployee1", Storage="_SecurityTrustee1", ThisKey="DeputyEmployee1", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee DeputySecurityTrustee
		{
			get
			{
				return this._SecurityTrustee1.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee1.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee1.Entity = null;
						previousValue.DeputyEmployees1.Remove(this);
					}
					this._SecurityTrustee1.Entity = value;
					if ((value != null))
					{
						value.DeputyEmployees1.Add(this);
						this._DeputyEmployee1 = value.Id;
					}
					else
					{
						this._DeputyEmployee1 = default(System.Guid);
					}
					this.SendPropertyChanged("DeputySecurityTrustee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Expert")]
	public partial class Expert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _SecurityTrusteeId;
		
		private System.Guid _BudgetId;
		
		private System.Nullable<int> _Count;
		
		private bool _IsDeleted;
		
		private EntitySet<ExpertCostArticle> _ExpertCostArticles;
		
		private EntityRef<Budget> _Budget;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnSecurityTrusteeIdChanging(System.Guid value);
    partial void OnSecurityTrusteeIdChanged();
    partial void OnBudgetIdChanging(System.Guid value);
    partial void OnBudgetIdChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public Expert()
		{
			this._ExpertCostArticles = new EntitySet<ExpertCostArticle>(new Action<ExpertCostArticle>(this.attach_ExpertCostArticles), new Action<ExpertCostArticle>(this.detach_ExpertCostArticles));
			this._Budget = default(EntityRef<Budget>);
			this._SecurityTrustee = default(EntityRef<SecurityTrustee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityTrusteeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SecurityTrusteeId
		{
			get
			{
				return this._SecurityTrusteeId;
			}
			set
			{
				if ((this._SecurityTrusteeId != value))
				{
					if (this._SecurityTrustee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecurityTrusteeIdChanging(value);
					this.SendPropertyChanging();
					this._SecurityTrusteeId = value;
					this.SendPropertyChanged("SecurityTrusteeId");
					this.OnSecurityTrusteeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BudgetId
		{
			get
			{
				return this._BudgetId;
			}
			set
			{
				if ((this._BudgetId != value))
				{
					if (this._Budget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudgetIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetId = value;
					this.SendPropertyChanged("BudgetId");
					this.OnBudgetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Expert_ExpertCostArticle", Storage="_ExpertCostArticles", ThisKey="Id", OtherKey="ExpertId")]
		public EntitySet<ExpertCostArticle> ExpertCostArticles
		{
			get
			{
				return this._ExpertCostArticles;
			}
			set
			{
				this._ExpertCostArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_Expert", Storage="_Budget", ThisKey="BudgetId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Budget Budget
		{
			get
			{
				return this._Budget.Entity;
			}
			set
			{
				Budget previousValue = this._Budget.Entity;
				if (((previousValue != value) 
							|| (this._Budget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Budget.Entity = null;
						previousValue.Experts.Remove(this);
					}
					this._Budget.Entity = value;
					if ((value != null))
					{
						value.Experts.Add(this);
						this._BudgetId = value.Id;
					}
					else
					{
						this._BudgetId = default(System.Guid);
					}
					this.SendPropertyChanged("Budget");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Expert", Storage="_SecurityTrustee", ThisKey="SecurityTrusteeId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee
		{
			get
			{
				return this._SecurityTrustee.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee.Entity = null;
						previousValue.Experts.Remove(this);
					}
					this._SecurityTrustee.Entity = value;
					if ((value != null))
					{
						value.Experts.Add(this);
						this._SecurityTrusteeId = value.Id;
					}
					else
					{
						this._SecurityTrusteeId = default(System.Guid);
					}
					this.SendPropertyChanged("SecurityTrustee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExpertCostArticles(ExpertCostArticle entity)
		{
			this.SendPropertyChanging();
			entity.Expert = this;
		}
		
		private void detach_ExpertCostArticles(ExpertCostArticle entity)
		{
			this.SendPropertyChanging();
			entity.Expert = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CurrencyRateActual")]
	public partial class CurrencyRateActual : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CurrencyId;
		
		private decimal _Rate;
		
		private System.DateTime _ReevaluationDate;
		
		private EntityRef<Currency> _Currency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrencyIdChanging(System.Guid value);
    partial void OnCurrencyIdChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnReevaluationDateChanging(System.DateTime value);
    partial void OnReevaluationDateChanged();
    #endregion
		
		public CurrencyRateActual()
		{
			this._Currency = default(EntityRef<Currency>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,9) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReevaluationDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReevaluationDate
		{
			get
			{
				return this._ReevaluationDate;
			}
			set
			{
				if ((this._ReevaluationDate != value))
				{
					this.OnReevaluationDateChanging(value);
					this.SendPropertyChanging();
					this._ReevaluationDate = value;
					this.SendPropertyChanged("ReevaluationDate");
					this.OnReevaluationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CurrencyRateActual", Storage="_Currency", ThisKey="CurrencyId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.CurrencyRateActual = null;
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.CurrencyRateActual = this;
						this._CurrencyId = value.Id;
					}
					else
					{
						this._CurrencyId = default(System.Guid);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DemandAllocation")]
	public partial class DemandAllocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _DemandId;
		
		private double _Weight;
		
		private System.Guid _CfoId;
		
		private System.Nullable<System.Guid> _GeographicalPositionId;
		
		private EntityRef<CFO> _CFO;
		
		private EntityRef<Demand> _Demand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnDemandIdChanging(System.Guid value);
    partial void OnDemandIdChanged();
    partial void OnWeightChanging(double value);
    partial void OnWeightChanged();
    partial void OnCfoIdChanging(System.Guid value);
    partial void OnCfoIdChanged();
    partial void OnGeographicalPositionIdChanging(System.Nullable<System.Guid> value);
    partial void OnGeographicalPositionIdChanged();
    #endregion
		
		public DemandAllocation()
		{
			this._CFO = default(EntityRef<CFO>);
			this._Demand = default(EntityRef<Demand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DemandId
		{
			get
			{
				return this._DemandId;
			}
			set
			{
				if ((this._DemandId != value))
				{
					if (this._Demand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIdChanging(value);
					this.SendPropertyChanging();
					this._DemandId = value;
					this.SendPropertyChanged("DemandId");
					this.OnDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float NOT NULL")]
		public double Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CfoId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CfoId
		{
			get
			{
				return this._CfoId;
			}
			set
			{
				if ((this._CfoId != value))
				{
					if (this._CFO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCfoIdChanging(value);
					this.SendPropertyChanging();
					this._CfoId = value;
					this.SendPropertyChanged("CfoId");
					this.OnCfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeographicalPositionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GeographicalPositionId
		{
			get
			{
				return this._GeographicalPositionId;
			}
			set
			{
				if ((this._GeographicalPositionId != value))
				{
					this.OnGeographicalPositionIdChanging(value);
					this.SendPropertyChanging();
					this._GeographicalPositionId = value;
					this.SendPropertyChanged("GeographicalPositionId");
					this.OnGeographicalPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CFO_DemandAllocation", Storage="_CFO", ThisKey="CfoId", OtherKey="Id", IsForeignKey=true)]
		public CFO CFO
		{
			get
			{
				return this._CFO.Entity;
			}
			set
			{
				CFO previousValue = this._CFO.Entity;
				if (((previousValue != value) 
							|| (this._CFO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CFO.Entity = null;
						previousValue.DemandAllocations.Remove(this);
					}
					this._CFO.Entity = value;
					if ((value != null))
					{
						value.DemandAllocations.Add(this);
						this._CfoId = value.Id;
					}
					else
					{
						this._CfoId = default(System.Guid);
					}
					this.SendPropertyChanged("CFO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_DemandAllocation", Storage="_Demand", ThisKey="DemandId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Demand Demand
		{
			get
			{
				return this._Demand.Entity;
			}
			set
			{
				Demand previousValue = this._Demand.Entity;
				if (((previousValue != value) 
							|| (this._Demand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Demand.Entity = null;
						previousValue.DemandAllocations.Remove(this);
					}
					this._Demand.Entity = value;
					if ((value != null))
					{
						value.DemandAllocations.Add(this);
						this._DemandId = value.Id;
					}
					else
					{
						this._DemandId = default(System.Guid);
					}
					this.SendPropertyChanged("Demand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppSettings")]
	public partial class AppSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public AppSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMailTemplates")]
	public partial class EMailTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Body;
		
		private string _Head;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnHeadChanging(string value);
    partial void OnHeadChanged();
    #endregion
		
		public EMailTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(256) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Head", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Head
		{
			get
			{
				return this._Head;
			}
			set
			{
				if ((this._Head != value))
				{
					this.OnHeadChanging(value);
					this.SendPropertyChanging();
					this._Head = value;
					this.SendPropertyChanged("Head");
					this.OnHeadChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContractMoney")]
	public partial class ContractMoney : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _ContractId;
		
		private int _Year;
		
		private byte _MonthId;
		
		private decimal _Sum;
		
		private bool _PaidState;
		
		private System.Nullable<int> _ExternalFromEmployeeId;
		
		private System.Nullable<int> _ExternaToEmployeeId;
		
		private string _ConditionPayment;
		
		private System.Nullable<System.Guid> _FromCounteragentId;
		
		private System.Nullable<System.Guid> _ToCounteragentId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<System.DateTime> _DateFrom;
		
		private System.Nullable<System.DateTime> _DateTo;
		
		private string _Comment;
		
		private string _Number;
		
		private System.Nullable<int> _NumberId;
		
		private System.Nullable<int> _ExternalId;
		
		private EntityRef<Month> _Month;
		
		private EntityRef<Contract> _Contract;
		
		private EntityRef<Counteragent> _Counteragent;
		
		private EntityRef<Counteragent> _Counteragent1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnContractIdChanging(System.Guid value);
    partial void OnContractIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMonthIdChanging(byte value);
    partial void OnMonthIdChanged();
    partial void OnSumChanging(decimal value);
    partial void OnSumChanged();
    partial void OnPaidStateChanging(bool value);
    partial void OnPaidStateChanged();
    partial void OnExternalFromEmployeeIdChanging(System.Nullable<int> value);
    partial void OnExternalFromEmployeeIdChanged();
    partial void OnExternaToEmployeeIdChanging(System.Nullable<int> value);
    partial void OnExternaToEmployeeIdChanged();
    partial void OnConditionPaymentChanging(string value);
    partial void OnConditionPaymentChanged();
    partial void OnFromCounteragentIdChanging(System.Nullable<System.Guid> value);
    partial void OnFromCounteragentIdChanged();
    partial void OnToCounteragentIdChanging(System.Nullable<System.Guid> value);
    partial void OnToCounteragentIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnDateFromChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFromChanged();
    partial void OnDateToChanging(System.Nullable<System.DateTime> value);
    partial void OnDateToChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnNumberIdChanging(System.Nullable<int> value);
    partial void OnNumberIdChanged();
    partial void OnExternalIdChanging(System.Nullable<int> value);
    partial void OnExternalIdChanged();
    #endregion
		
		public ContractMoney()
		{
			this._Month = default(EntityRef<Month>);
			this._Contract = default(EntityRef<Contract>);
			this._Counteragent = default(EntityRef<Counteragent>);
			this._Counteragent1 = default(EntityRef<Counteragent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ContractId
		{
			get
			{
				return this._ContractId;
			}
			set
			{
				if ((this._ContractId != value))
				{
					if (this._Contract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIdChanging(value);
					this.SendPropertyChanging();
					this._ContractId = value;
					this.SendPropertyChanged("ContractId");
					this.OnContractIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthId", DbType="TinyInt NOT NULL")]
		public byte MonthId
		{
			get
			{
				return this._MonthId;
			}
			set
			{
				if ((this._MonthId != value))
				{
					if (this._Month.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMonthIdChanging(value);
					this.SendPropertyChanging();
					this._MonthId = value;
					this.SendPropertyChanged("MonthId");
					this.OnMonthIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Money NOT NULL")]
		public decimal Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this.OnSumChanging(value);
					this.SendPropertyChanging();
					this._Sum = value;
					this.SendPropertyChanged("Sum");
					this.OnSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidState", DbType="Bit NOT NULL")]
		public bool PaidState
		{
			get
			{
				return this._PaidState;
			}
			set
			{
				if ((this._PaidState != value))
				{
					this.OnPaidStateChanging(value);
					this.SendPropertyChanging();
					this._PaidState = value;
					this.SendPropertyChanged("PaidState");
					this.OnPaidStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalFromEmployeeId", DbType="Int")]
		public System.Nullable<int> ExternalFromEmployeeId
		{
			get
			{
				return this._ExternalFromEmployeeId;
			}
			set
			{
				if ((this._ExternalFromEmployeeId != value))
				{
					this.OnExternalFromEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalFromEmployeeId = value;
					this.SendPropertyChanged("ExternalFromEmployeeId");
					this.OnExternalFromEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternaToEmployeeId", DbType="Int")]
		public System.Nullable<int> ExternaToEmployeeId
		{
			get
			{
				return this._ExternaToEmployeeId;
			}
			set
			{
				if ((this._ExternaToEmployeeId != value))
				{
					this.OnExternaToEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._ExternaToEmployeeId = value;
					this.SendPropertyChanged("ExternaToEmployeeId");
					this.OnExternaToEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionPayment", DbType="NVarChar(1024)")]
		public string ConditionPayment
		{
			get
			{
				return this._ConditionPayment;
			}
			set
			{
				if ((this._ConditionPayment != value))
				{
					this.OnConditionPaymentChanging(value);
					this.SendPropertyChanging();
					this._ConditionPayment = value;
					this.SendPropertyChanged("ConditionPayment");
					this.OnConditionPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromCounteragentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FromCounteragentId
		{
			get
			{
				return this._FromCounteragentId;
			}
			set
			{
				if ((this._FromCounteragentId != value))
				{
					if (this._Counteragent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromCounteragentIdChanging(value);
					this.SendPropertyChanging();
					this._FromCounteragentId = value;
					this.SendPropertyChanged("FromCounteragentId");
					this.OnFromCounteragentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToCounteragentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ToCounteragentId
		{
			get
			{
				return this._ToCounteragentId;
			}
			set
			{
				if ((this._ToCounteragentId != value))
				{
					if (this._Counteragent1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToCounteragentIdChanging(value);
					this.SendPropertyChanging();
					this._ToCounteragentId = value;
					this.SendPropertyChanged("ToCounteragentId");
					this.OnToCounteragentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateFrom
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this.OnDateFromChanging(value);
					this.SendPropertyChanging();
					this._DateFrom = value;
					this.SendPropertyChanged("DateFrom");
					this.OnDateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTo
		{
			get
			{
				return this._DateTo;
			}
			set
			{
				if ((this._DateTo != value))
				{
					this.OnDateToChanging(value);
					this.SendPropertyChanging();
					this._DateTo = value;
					this.SendPropertyChanged("DateTo");
					this.OnDateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(2048)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberId", DbType="Int")]
		public System.Nullable<int> NumberId
		{
			get
			{
				return this._NumberId;
			}
			set
			{
				if ((this._NumberId != value))
				{
					this.OnNumberIdChanging(value);
					this.SendPropertyChanging();
					this._NumberId = value;
					this.SendPropertyChanged("NumberId");
					this.OnNumberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="Int")]
		public System.Nullable<int> ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Month_ContractMoney", Storage="_Month", ThisKey="MonthId", OtherKey="Id", IsForeignKey=true)]
		public Month Month
		{
			get
			{
				return this._Month.Entity;
			}
			set
			{
				Month previousValue = this._Month.Entity;
				if (((previousValue != value) 
							|| (this._Month.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Month.Entity = null;
						previousValue.ContractMoneys.Remove(this);
					}
					this._Month.Entity = value;
					if ((value != null))
					{
						value.ContractMoneys.Add(this);
						this._MonthId = value.Id;
					}
					else
					{
						this._MonthId = default(byte);
					}
					this.SendPropertyChanged("Month");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_ContractMoney", Storage="_Contract", ThisKey="ContractId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Contract Contract
		{
			get
			{
				return this._Contract.Entity;
			}
			set
			{
				Contract previousValue = this._Contract.Entity;
				if (((previousValue != value) 
							|| (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract.Entity = null;
						previousValue.ContractMoneys.Remove(this);
					}
					this._Contract.Entity = value;
					if ((value != null))
					{
						value.ContractMoneys.Add(this);
						this._ContractId = value.Id;
					}
					else
					{
						this._ContractId = default(System.Guid);
					}
					this.SendPropertyChanged("Contract");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counteragent_ContractMoney", Storage="_Counteragent", ThisKey="FromCounteragentId", OtherKey="Id", IsForeignKey=true)]
		public Counteragent Counteragent
		{
			get
			{
				return this._Counteragent.Entity;
			}
			set
			{
				Counteragent previousValue = this._Counteragent.Entity;
				if (((previousValue != value) 
							|| (this._Counteragent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Counteragent.Entity = null;
						previousValue.ContractMoneys.Remove(this);
					}
					this._Counteragent.Entity = value;
					if ((value != null))
					{
						value.ContractMoneys.Add(this);
						this._FromCounteragentId = value.Id;
					}
					else
					{
						this._FromCounteragentId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Counteragent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counteragent_ContractMoney1", Storage="_Counteragent1", ThisKey="ToCounteragentId", OtherKey="Id", IsForeignKey=true)]
		public Counteragent Counteragent1
		{
			get
			{
				return this._Counteragent1.Entity;
			}
			set
			{
				Counteragent previousValue = this._Counteragent1.Entity;
				if (((previousValue != value) 
							|| (this._Counteragent1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Counteragent1.Entity = null;
						previousValue.ContractMoneys1.Remove(this);
					}
					this._Counteragent1.Entity = value;
					if ((value != null))
					{
						value.ContractMoneys1.Add(this);
						this._ToCounteragentId = value.Id;
					}
					else
					{
						this._ToCounteragentId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Counteragent1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private string _Code;
		
		private System.Guid _BudgetVersionId;
		
		private bool _IsDeleted;
		
		private bool _IsProtected;
		
		private System.Nullable<System.DateTime> _DateOpen;
		
		private System.Nullable<System.DateTime> _DateClosed;
		
		private System.Nullable<byte> _StateId;
		
		private System.Nullable<byte> _TypeId;
		
		private System.Nullable<System.Guid> _ManagerEmployeeId;
		
		private string _CodeVersion;
		
		private string _Manager;
		
		private System.Nullable<System.Guid> _StructDivisionId;
		
		private string _Comment;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<BillDemandAllocation> _BillDemandAllocations;
		
		private EntitySet<Contract> _Contracts;
		
		private EntitySet<Demand> _Demands;
		
		private EntityRef<BudgetVersion> _BudgetVersion;
		
		private EntityRef<Project> _Project1;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee;
		
		private EntityRef<StructDivision> _StructDivision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentIdChanging(System.Nullable<System.Guid> value);
    partial void OnParentIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnBudgetVersionIdChanging(System.Guid value);
    partial void OnBudgetVersionIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnIsProtectedChanging(bool value);
    partial void OnIsProtectedChanged();
    partial void OnDateOpenChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOpenChanged();
    partial void OnDateClosedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateClosedChanged();
    partial void OnStateIdChanging(System.Nullable<byte> value);
    partial void OnStateIdChanged();
    partial void OnTypeIdChanging(System.Nullable<byte> value);
    partial void OnTypeIdChanged();
    partial void OnManagerEmployeeIdChanging(System.Nullable<System.Guid> value);
    partial void OnManagerEmployeeIdChanged();
    partial void OnCodeVersionChanging(string value);
    partial void OnCodeVersionChanged();
    partial void OnManagerChanging(string value);
    partial void OnManagerChanged();
    partial void OnStructDivisionIdChanging(System.Nullable<System.Guid> value);
    partial void OnStructDivisionIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Project()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._BillDemandAllocations = new EntitySet<BillDemandAllocation>(new Action<BillDemandAllocation>(this.attach_BillDemandAllocations), new Action<BillDemandAllocation>(this.detach_BillDemandAllocations));
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._Demands = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands), new Action<Demand>(this.detach_Demands));
			this._BudgetVersion = default(EntityRef<BudgetVersion>);
			this._Project1 = default(EntityRef<Project>);
			this._SecurityTrustee = default(EntityRef<SecurityTrustee>);
			this._StructDivision = default(EntityRef<StructDivision>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._Project1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetVersionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BudgetVersionId
		{
			get
			{
				return this._BudgetVersionId;
			}
			set
			{
				if ((this._BudgetVersionId != value))
				{
					if (this._BudgetVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudgetVersionIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetVersionId = value;
					this.SendPropertyChanged("BudgetVersionId");
					this.OnBudgetVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProtected", DbType="Bit NOT NULL")]
		public bool IsProtected
		{
			get
			{
				return this._IsProtected;
			}
			set
			{
				if ((this._IsProtected != value))
				{
					this.OnIsProtectedChanging(value);
					this.SendPropertyChanging();
					this._IsProtected = value;
					this.SendPropertyChanged("IsProtected");
					this.OnIsProtectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOpen", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOpen
		{
			get
			{
				return this._DateOpen;
			}
			set
			{
				if ((this._DateOpen != value))
				{
					this.OnDateOpenChanging(value);
					this.SendPropertyChanging();
					this._DateOpen = value;
					this.SendPropertyChanged("DateOpen");
					this.OnDateOpenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateClosed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateClosed
		{
			get
			{
				return this._DateClosed;
			}
			set
			{
				if ((this._DateClosed != value))
				{
					this.OnDateClosedChanging(value);
					this.SendPropertyChanging();
					this._DateClosed = value;
					this.SendPropertyChanged("DateClosed");
					this.OnDateClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="TinyInt")]
		public System.Nullable<byte> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="TinyInt")]
		public System.Nullable<byte> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerEmployeeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ManagerEmployeeId
		{
			get
			{
				return this._ManagerEmployeeId;
			}
			set
			{
				if ((this._ManagerEmployeeId != value))
				{
					if (this._SecurityTrustee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagerEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._ManagerEmployeeId = value;
					this.SendPropertyChanged("ManagerEmployeeId");
					this.OnManagerEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeVersion", DbType="NVarChar(255)")]
		public string CodeVersion
		{
			get
			{
				return this._CodeVersion;
			}
			set
			{
				if ((this._CodeVersion != value))
				{
					this.OnCodeVersionChanging(value);
					this.SendPropertyChanging();
					this._CodeVersion = value;
					this.SendPropertyChanged("CodeVersion");
					this.OnCodeVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager", DbType="NVarChar(255)")]
		public string Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					this.OnManagerChanging(value);
					this.SendPropertyChanging();
					this._Manager = value;
					this.SendPropertyChanged("Manager");
					this.OnManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructDivisionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StructDivisionId
		{
			get
			{
				return this._StructDivisionId;
			}
			set
			{
				if ((this._StructDivisionId != value))
				{
					if (this._StructDivision.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStructDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._StructDivisionId = value;
					this.SendPropertyChanged("StructDivisionId");
					this.OnStructDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Project", Storage="_Projects", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_BillDemandAllocation", Storage="_BillDemandAllocations", ThisKey="Id", OtherKey="ProjectId")]
		public EntitySet<BillDemandAllocation> BillDemandAllocations
		{
			get
			{
				return this._BillDemandAllocations;
			}
			set
			{
				this._BillDemandAllocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Contract", Storage="_Contracts", ThisKey="Id", OtherKey="ProjectId")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Demand", Storage="_Demands", ThisKey="Id", OtherKey="ProjectId")]
		public EntitySet<Demand> Demands
		{
			get
			{
				return this._Demands;
			}
			set
			{
				this._Demands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetVersion_Project", Storage="_BudgetVersion", ThisKey="BudgetVersionId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BudgetVersion BudgetVersion
		{
			get
			{
				return this._BudgetVersion.Entity;
			}
			set
			{
				BudgetVersion previousValue = this._BudgetVersion.Entity;
				if (((previousValue != value) 
							|| (this._BudgetVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BudgetVersion.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._BudgetVersion.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._BudgetVersionId = value.Id;
					}
					else
					{
						this._BudgetVersionId = default(System.Guid);
					}
					this.SendPropertyChanged("BudgetVersion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Project", Storage="_Project1", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public Project Project1
		{
			get
			{
				return this._Project1.Entity;
			}
			set
			{
				Project previousValue = this._Project1.Entity;
				if (((previousValue != value) 
							|| (this._Project1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project1.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Project1.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Project1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Project", Storage="_SecurityTrustee", ThisKey="ManagerEmployeeId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee
		{
			get
			{
				return this._SecurityTrustee.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._SecurityTrustee.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._ManagerEmployeeId = value.Id;
					}
					else
					{
						this._ManagerEmployeeId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SecurityTrustee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_Project", Storage="_StructDivision", ThisKey="StructDivisionId", OtherKey="Id", IsForeignKey=true)]
		public StructDivision StructDivision
		{
			get
			{
				return this._StructDivision.Entity;
			}
			set
			{
				StructDivision previousValue = this._StructDivision.Entity;
				if (((previousValue != value) 
							|| (this._StructDivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StructDivision.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._StructDivision.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._StructDivisionId = value.Id;
					}
					else
					{
						this._StructDivisionId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("StructDivision");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Project1 = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Project1 = null;
		}
		
		private void attach_BillDemandAllocations(BillDemandAllocation entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_BillDemandAllocations(BillDemandAllocation entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillDemandAllocation")]
	public partial class BillDemandAllocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _BillDemandId;
		
		private System.Guid _CostArticleId;
		
		private System.Nullable<System.Guid> _GoodsTypeId;
		
		private System.Nullable<System.Guid> _ProjectId;
		
		private decimal _Sum;
		
		private System.Nullable<System.Guid> _GeographicalPositionId;
		
		private System.Guid _CfoId;
		
		private System.Nullable<System.Guid> _CustomerId;
		
		private System.Nullable<System.Guid> _FilialId;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<CFO> _CFO;
		
		private EntityRef<CostArticle> _CostArticle;
		
		private EntityRef<Filial> _Filial;
		
		private EntityRef<BillDemand> _BillDemand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnBillDemandIdChanging(System.Guid value);
    partial void OnBillDemandIdChanged();
    partial void OnCostArticleIdChanging(System.Guid value);
    partial void OnCostArticleIdChanged();
    partial void OnGoodsTypeIdChanging(System.Nullable<System.Guid> value);
    partial void OnGoodsTypeIdChanged();
    partial void OnProjectIdChanging(System.Nullable<System.Guid> value);
    partial void OnProjectIdChanged();
    partial void OnSumChanging(decimal value);
    partial void OnSumChanged();
    partial void OnGeographicalPositionIdChanging(System.Nullable<System.Guid> value);
    partial void OnGeographicalPositionIdChanged();
    partial void OnCfoIdChanging(System.Guid value);
    partial void OnCfoIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<System.Guid> value);
    partial void OnCustomerIdChanged();
    partial void OnFilialIdChanging(System.Nullable<System.Guid> value);
    partial void OnFilialIdChanged();
    #endregion
		
		public BillDemandAllocation()
		{
			this._Project = default(EntityRef<Project>);
			this._CFO = default(EntityRef<CFO>);
			this._CostArticle = default(EntityRef<CostArticle>);
			this._Filial = default(EntityRef<Filial>);
			this._BillDemand = default(EntityRef<BillDemand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDemandId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BillDemandId
		{
			get
			{
				return this._BillDemandId;
			}
			set
			{
				if ((this._BillDemandId != value))
				{
					if (this._BillDemand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillDemandIdChanging(value);
					this.SendPropertyChanging();
					this._BillDemandId = value;
					this.SendPropertyChanged("BillDemandId");
					this.OnBillDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostArticleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CostArticleId
		{
			get
			{
				return this._CostArticleId;
			}
			set
			{
				if ((this._CostArticleId != value))
				{
					if (this._CostArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostArticleIdChanging(value);
					this.SendPropertyChanging();
					this._CostArticleId = value;
					this.SendPropertyChanged("CostArticleId");
					this.OnCostArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsTypeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GoodsTypeId
		{
			get
			{
				return this._GoodsTypeId;
			}
			set
			{
				if ((this._GoodsTypeId != value))
				{
					this.OnGoodsTypeIdChanging(value);
					this.SendPropertyChanging();
					this._GoodsTypeId = value;
					this.SendPropertyChanged("GoodsTypeId");
					this.OnGoodsTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Money NOT NULL")]
		public decimal Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this.OnSumChanging(value);
					this.SendPropertyChanging();
					this._Sum = value;
					this.SendPropertyChanged("Sum");
					this.OnSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeographicalPositionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GeographicalPositionId
		{
			get
			{
				return this._GeographicalPositionId;
			}
			set
			{
				if ((this._GeographicalPositionId != value))
				{
					this.OnGeographicalPositionIdChanging(value);
					this.SendPropertyChanging();
					this._GeographicalPositionId = value;
					this.SendPropertyChanged("GeographicalPositionId");
					this.OnGeographicalPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CfoId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CfoId
		{
			get
			{
				return this._CfoId;
			}
			set
			{
				if ((this._CfoId != value))
				{
					if (this._CFO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCfoIdChanging(value);
					this.SendPropertyChanging();
					this._CfoId = value;
					this.SendPropertyChanged("CfoId");
					this.OnCfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilialId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FilialId
		{
			get
			{
				return this._FilialId;
			}
			set
			{
				if ((this._FilialId != value))
				{
					if (this._Filial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFilialIdChanging(value);
					this.SendPropertyChanging();
					this._FilialId = value;
					this.SendPropertyChanged("FilialId");
					this.OnFilialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_BillDemandAllocation", Storage="_Project", ThisKey="ProjectId", OtherKey="Id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.BillDemandAllocations.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.BillDemandAllocations.Add(this);
						this._ProjectId = value.Id;
					}
					else
					{
						this._ProjectId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CFO_BillDemandAllocation", Storage="_CFO", ThisKey="CfoId", OtherKey="Id", IsForeignKey=true)]
		public CFO CFO
		{
			get
			{
				return this._CFO.Entity;
			}
			set
			{
				CFO previousValue = this._CFO.Entity;
				if (((previousValue != value) 
							|| (this._CFO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CFO.Entity = null;
						previousValue.BillDemandAllocations.Remove(this);
					}
					this._CFO.Entity = value;
					if ((value != null))
					{
						value.BillDemandAllocations.Add(this);
						this._CfoId = value.Id;
					}
					else
					{
						this._CfoId = default(System.Guid);
					}
					this.SendPropertyChanged("CFO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostArticle_BillDemandAllocation", Storage="_CostArticle", ThisKey="CostArticleId", OtherKey="Id", IsForeignKey=true)]
		public CostArticle CostArticle
		{
			get
			{
				return this._CostArticle.Entity;
			}
			set
			{
				CostArticle previousValue = this._CostArticle.Entity;
				if (((previousValue != value) 
							|| (this._CostArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CostArticle.Entity = null;
						previousValue.BillDemandAllocations.Remove(this);
					}
					this._CostArticle.Entity = value;
					if ((value != null))
					{
						value.BillDemandAllocations.Add(this);
						this._CostArticleId = value.Id;
					}
					else
					{
						this._CostArticleId = default(System.Guid);
					}
					this.SendPropertyChanged("CostArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filial_BillDemandAllocation", Storage="_Filial", ThisKey="FilialId", OtherKey="Id", IsForeignKey=true)]
		public Filial Filial
		{
			get
			{
				return this._Filial.Entity;
			}
			set
			{
				Filial previousValue = this._Filial.Entity;
				if (((previousValue != value) 
							|| (this._Filial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Filial.Entity = null;
						previousValue.BillDemandAllocations.Remove(this);
					}
					this._Filial.Entity = value;
					if ((value != null))
					{
						value.BillDemandAllocations.Add(this);
						this._FilialId = value.Id;
					}
					else
					{
						this._FilialId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Filial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemand_BillDemandAllocation", Storage="_BillDemand", ThisKey="BillDemandId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BillDemand BillDemand
		{
			get
			{
				return this._BillDemand.Entity;
			}
			set
			{
				BillDemand previousValue = this._BillDemand.Entity;
				if (((previousValue != value) 
							|| (this._BillDemand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillDemand.Entity = null;
						previousValue.BillDemandAllocations.Remove(this);
					}
					this._BillDemand.Entity = value;
					if ((value != null))
					{
						value.BillDemandAllocations.Add(this);
						this._BillDemandId = value.Id;
					}
					else
					{
						this._BillDemandId = default(System.Guid);
					}
					this.SendPropertyChanged("BillDemand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CFO")]
	public partial class CFO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _Code;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private bool _IsDeleted;
		
		private bool _IsProtected;
		
		private System.Nullable<System.DateTime> _DateOpen;
		
		private System.Nullable<System.DateTime> _DateClosed;
		
		private System.Nullable<System.Guid> _FilialId;
		
		private System.Nullable<System.Guid> _BlockId;
		
		private string _Foundation;
		
		private bool _IsProviding;
		
		private System.Nullable<System.Guid> _OldId;
		
		private System.Guid _BudgetId;
		
		private EntitySet<DemandAllocation> _DemandAllocations;
		
		private EntitySet<BillDemandAllocation> _BillDemandAllocations;
		
		private EntityRef<CFO> _CFO2;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<Demand> _Demands;
		
		private EntitySet<Demand> _Demands1;
		
		private EntitySet<Demand> _Demands2;
		
		private EntityRef<Budget> _Budget;
		
		private EntityRef<CFO> _CFO1;
		
		private EntityRef<Filial> _Filial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnParentIdChanging(System.Nullable<System.Guid> value);
    partial void OnParentIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnIsProtectedChanging(bool value);
    partial void OnIsProtectedChanged();
    partial void OnDateOpenChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOpenChanged();
    partial void OnDateClosedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateClosedChanged();
    partial void OnFilialIdChanging(System.Nullable<System.Guid> value);
    partial void OnFilialIdChanged();
    partial void OnBlockIdChanging(System.Nullable<System.Guid> value);
    partial void OnBlockIdChanged();
    partial void OnFoundationChanging(string value);
    partial void OnFoundationChanged();
    partial void OnIsProvidingChanging(bool value);
    partial void OnIsProvidingChanged();
    partial void OnOldIdChanging(System.Nullable<System.Guid> value);
    partial void OnOldIdChanged();
    partial void OnBudgetIdChanging(System.Guid value);
    partial void OnBudgetIdChanged();
    #endregion
		
		public CFO()
		{
			this._DemandAllocations = new EntitySet<DemandAllocation>(new Action<DemandAllocation>(this.attach_DemandAllocations), new Action<DemandAllocation>(this.detach_DemandAllocations));
			this._BillDemandAllocations = new EntitySet<BillDemandAllocation>(new Action<BillDemandAllocation>(this.attach_BillDemandAllocations), new Action<BillDemandAllocation>(this.detach_BillDemandAllocations));
			this._CFO2 = default(EntityRef<CFO>);
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._Demands = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands), new Action<Demand>(this.detach_Demands));
			this._Demands1 = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands1), new Action<Demand>(this.detach_Demands1));
			this._Demands2 = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands2), new Action<Demand>(this.detach_Demands2));
			this._Budget = default(EntityRef<Budget>);
			this._CFO1 = default(EntityRef<CFO>);
			this._Filial = default(EntityRef<Filial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._CFO1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProtected", DbType="Bit NOT NULL")]
		public bool IsProtected
		{
			get
			{
				return this._IsProtected;
			}
			set
			{
				if ((this._IsProtected != value))
				{
					this.OnIsProtectedChanging(value);
					this.SendPropertyChanging();
					this._IsProtected = value;
					this.SendPropertyChanged("IsProtected");
					this.OnIsProtectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOpen", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOpen
		{
			get
			{
				return this._DateOpen;
			}
			set
			{
				if ((this._DateOpen != value))
				{
					this.OnDateOpenChanging(value);
					this.SendPropertyChanging();
					this._DateOpen = value;
					this.SendPropertyChanged("DateOpen");
					this.OnDateOpenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateClosed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateClosed
		{
			get
			{
				return this._DateClosed;
			}
			set
			{
				if ((this._DateClosed != value))
				{
					this.OnDateClosedChanging(value);
					this.SendPropertyChanging();
					this._DateClosed = value;
					this.SendPropertyChanged("DateClosed");
					this.OnDateClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilialId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FilialId
		{
			get
			{
				return this._FilialId;
			}
			set
			{
				if ((this._FilialId != value))
				{
					if (this._Filial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFilialIdChanging(value);
					this.SendPropertyChanging();
					this._FilialId = value;
					this.SendPropertyChanged("FilialId");
					this.OnFilialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BlockId
		{
			get
			{
				return this._BlockId;
			}
			set
			{
				if ((this._BlockId != value))
				{
					this.OnBlockIdChanging(value);
					this.SendPropertyChanging();
					this._BlockId = value;
					this.SendPropertyChanged("BlockId");
					this.OnBlockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foundation", DbType="NVarChar(MAX)")]
		public string Foundation
		{
			get
			{
				return this._Foundation;
			}
			set
			{
				if ((this._Foundation != value))
				{
					this.OnFoundationChanging(value);
					this.SendPropertyChanging();
					this._Foundation = value;
					this.SendPropertyChanged("Foundation");
					this.OnFoundationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProviding", DbType="Bit NOT NULL")]
		public bool IsProviding
		{
			get
			{
				return this._IsProviding;
			}
			set
			{
				if ((this._IsProviding != value))
				{
					this.OnIsProvidingChanging(value);
					this.SendPropertyChanging();
					this._IsProviding = value;
					this.SendPropertyChanged("IsProviding");
					this.OnIsProvidingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OldId
		{
			get
			{
				return this._OldId;
			}
			set
			{
				if ((this._OldId != value))
				{
					this.OnOldIdChanging(value);
					this.SendPropertyChanging();
					this._OldId = value;
					this.SendPropertyChanged("OldId");
					this.OnOldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BudgetId
		{
			get
			{
				return this._BudgetId;
			}
			set
			{
				if ((this._BudgetId != value))
				{
					if (this._Budget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudgetIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetId = value;
					this.SendPropertyChanged("BudgetId");
					this.OnBudgetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CFO_DemandAllocation", Storage="_DemandAllocations", ThisKey="Id", OtherKey="CfoId")]
		public EntitySet<DemandAllocation> DemandAllocations
		{
			get
			{
				return this._DemandAllocations;
			}
			set
			{
				this._DemandAllocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CFO_BillDemandAllocation", Storage="_BillDemandAllocations", ThisKey="Id", OtherKey="CfoId")]
		public EntitySet<BillDemandAllocation> BillDemandAllocations
		{
			get
			{
				return this._BillDemandAllocations;
			}
			set
			{
				this._BillDemandAllocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CFO_CFO", Storage="_CFO2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public CFO CFO2
		{
			get
			{
				return this._CFO2.Entity;
			}
			set
			{
				CFO previousValue = this._CFO2.Entity;
				if (((previousValue != value) 
							|| (this._CFO2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CFO2.Entity = null;
						previousValue.CFO1 = null;
					}
					this._CFO2.Entity = value;
					if ((value != null))
					{
						value.CFO1 = this;
					}
					this.SendPropertyChanged("CFO2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CFO_Employee", Storage="_Employees", ThisKey="Id", OtherKey="StructDivisionId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CFO_Demand", Storage="_Demands", ThisKey="Id", OtherKey="CustomerCfoId")]
		public EntitySet<Demand> Demands
		{
			get
			{
				return this._Demands;
			}
			set
			{
				this._Demands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CFO_Demand1", Storage="_Demands1", ThisKey="Id", OtherKey="AgreementCfo")]
		public EntitySet<Demand> Demands1
		{
			get
			{
				return this._Demands1;
			}
			set
			{
				this._Demands1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CFO_Demand2", Storage="_Demands2", ThisKey="Id", OtherKey="AuthorStructDivisionId")]
		public EntitySet<Demand> Demands2
		{
			get
			{
				return this._Demands2;
			}
			set
			{
				this._Demands2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_CFO", Storage="_Budget", ThisKey="BudgetId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Budget Budget
		{
			get
			{
				return this._Budget.Entity;
			}
			set
			{
				Budget previousValue = this._Budget.Entity;
				if (((previousValue != value) 
							|| (this._Budget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Budget.Entity = null;
						previousValue.CFOs.Remove(this);
					}
					this._Budget.Entity = value;
					if ((value != null))
					{
						value.CFOs.Add(this);
						this._BudgetId = value.Id;
					}
					else
					{
						this._BudgetId = default(System.Guid);
					}
					this.SendPropertyChanged("Budget");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CFO_CFO", Storage="_CFO1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public CFO CFO1
		{
			get
			{
				return this._CFO1.Entity;
			}
			set
			{
				CFO previousValue = this._CFO1.Entity;
				if (((previousValue != value) 
							|| (this._CFO1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CFO1.Entity = null;
						previousValue.CFO2 = null;
					}
					this._CFO1.Entity = value;
					if ((value != null))
					{
						value.CFO2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(System.Guid);
					}
					this.SendPropertyChanged("CFO1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filial_CFO", Storage="_Filial", ThisKey="FilialId", OtherKey="Id", IsForeignKey=true)]
		public Filial Filial
		{
			get
			{
				return this._Filial.Entity;
			}
			set
			{
				Filial previousValue = this._Filial.Entity;
				if (((previousValue != value) 
							|| (this._Filial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Filial.Entity = null;
						previousValue.CFOs.Remove(this);
					}
					this._Filial.Entity = value;
					if ((value != null))
					{
						value.CFOs.Add(this);
						this._FilialId = value.Id;
					}
					else
					{
						this._FilialId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Filial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DemandAllocations(DemandAllocation entity)
		{
			this.SendPropertyChanging();
			entity.CFO = this;
		}
		
		private void detach_DemandAllocations(DemandAllocation entity)
		{
			this.SendPropertyChanging();
			entity.CFO = null;
		}
		
		private void attach_BillDemandAllocations(BillDemandAllocation entity)
		{
			this.SendPropertyChanging();
			entity.CFO = this;
		}
		
		private void detach_BillDemandAllocations(BillDemandAllocation entity)
		{
			this.SendPropertyChanging();
			entity.CFO = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.CFO = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.CFO = null;
		}
		
		private void attach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.CFO = this;
		}
		
		private void detach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.CFO = null;
		}
		
		private void attach_Demands1(Demand entity)
		{
			this.SendPropertyChanging();
			entity.AgreementCFO = this;
		}
		
		private void detach_Demands1(Demand entity)
		{
			this.SendPropertyChanging();
			entity.AgreementCFO = null;
		}
		
		private void attach_Demands2(Demand entity)
		{
			this.SendPropertyChanging();
			entity.AuthorCFO = this;
		}
		
		private void detach_Demands2(Demand entity)
		{
			this.SendPropertyChanging();
			entity.AuthorCFO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillDemandContractMoney")]
	public partial class BillDemandContractMoney : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private int _Year;
		
		private byte _Month;
		
		private decimal _Sum;
		
		private System.Guid _BillDemandId;
		
		private bool _ToPayment;
		
		private System.Guid _ContractMoneyId;
		
		private EntityRef<Month> _Month1;
		
		private EntityRef<BillDemand> _BillDemand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnSumChanging(decimal value);
    partial void OnSumChanged();
    partial void OnBillDemandIdChanging(System.Guid value);
    partial void OnBillDemandIdChanged();
    partial void OnToPaymentChanging(bool value);
    partial void OnToPaymentChanged();
    partial void OnContractMoneyIdChanging(System.Guid value);
    partial void OnContractMoneyIdChanged();
    #endregion
		
		public BillDemandContractMoney()
		{
			this._Month1 = default(EntityRef<Month>);
			this._BillDemand = default(EntityRef<BillDemand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="TinyInt NOT NULL")]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					if (this._Month1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Money NOT NULL")]
		public decimal Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this.OnSumChanging(value);
					this.SendPropertyChanging();
					this._Sum = value;
					this.SendPropertyChanged("Sum");
					this.OnSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDemandId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BillDemandId
		{
			get
			{
				return this._BillDemandId;
			}
			set
			{
				if ((this._BillDemandId != value))
				{
					if (this._BillDemand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillDemandIdChanging(value);
					this.SendPropertyChanging();
					this._BillDemandId = value;
					this.SendPropertyChanged("BillDemandId");
					this.OnBillDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPayment", DbType="Bit NOT NULL")]
		public bool ToPayment
		{
			get
			{
				return this._ToPayment;
			}
			set
			{
				if ((this._ToPayment != value))
				{
					this.OnToPaymentChanging(value);
					this.SendPropertyChanging();
					this._ToPayment = value;
					this.SendPropertyChanged("ToPayment");
					this.OnToPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractMoneyId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ContractMoneyId
		{
			get
			{
				return this._ContractMoneyId;
			}
			set
			{
				if ((this._ContractMoneyId != value))
				{
					this.OnContractMoneyIdChanging(value);
					this.SendPropertyChanging();
					this._ContractMoneyId = value;
					this.SendPropertyChanged("ContractMoneyId");
					this.OnContractMoneyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Month_BillDemandContractMoney", Storage="_Month1", ThisKey="Month", OtherKey="Id", IsForeignKey=true)]
		public Month Month1
		{
			get
			{
				return this._Month1.Entity;
			}
			set
			{
				Month previousValue = this._Month1.Entity;
				if (((previousValue != value) 
							|| (this._Month1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Month1.Entity = null;
						previousValue.BillDemandContractMoneys.Remove(this);
					}
					this._Month1.Entity = value;
					if ((value != null))
					{
						value.BillDemandContractMoneys.Add(this);
						this._Month = value.Id;
					}
					else
					{
						this._Month = default(byte);
					}
					this.SendPropertyChanged("Month1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemand_BillDemandContractMoney", Storage="_BillDemand", ThisKey="BillDemandId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BillDemand BillDemand
		{
			get
			{
				return this._BillDemand.Entity;
			}
			set
			{
				BillDemand previousValue = this._BillDemand.Entity;
				if (((previousValue != value) 
							|| (this._BillDemand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillDemand.Entity = null;
						previousValue.BillDemandContractMoneys.Remove(this);
					}
					this._BillDemand.Entity = value;
					if ((value != null))
					{
						value.BillDemandContractMoneys.Add(this);
						this._BillDemandId = value.Id;
					}
					else
					{
						this._BillDemandId = default(System.Guid);
					}
					this.SendPropertyChanged("BillDemand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DemandPermission")]
	public partial class DemandPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _CreateDate;
		
		private System.Guid _Id;
		
		private System.Guid _AuthorId;
		
		private System.Guid _AuthorStructDivisionId;
		
		private System.Guid _UserId;
		
		private System.Guid _UserStructDivisionId;
		
		private System.Guid _DemandId;
		
		private System.Nullable<System.DateTime> _EndPermissionDate;
		
		private bool _IsRestricted;
		
		private bool _IsConstantPermission;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee1;
		
		private EntityRef<StructDivision> _StructDivision;
		
		private EntityRef<StructDivision> _StructDivision1;
		
		private EntityRef<Demand> _Demand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnAuthorIdChanging(System.Guid value);
    partial void OnAuthorIdChanged();
    partial void OnAuthorStructDivisionIdChanging(System.Guid value);
    partial void OnAuthorStructDivisionIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserStructDivisionIdChanging(System.Guid value);
    partial void OnUserStructDivisionIdChanged();
    partial void OnDemandIdChanging(System.Guid value);
    partial void OnDemandIdChanged();
    partial void OnEndPermissionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndPermissionDateChanged();
    partial void OnIsRestrictedChanging(bool value);
    partial void OnIsRestrictedChanged();
    partial void OnIsConstantPermissionChanging(bool value);
    partial void OnIsConstantPermissionChanged();
    #endregion
		
		public DemandPermission()
		{
			this._SecurityTrustee = default(EntityRef<SecurityTrustee>);
			this._SecurityTrustee1 = default(EntityRef<SecurityTrustee>);
			this._StructDivision = default(EntityRef<StructDivision>);
			this._StructDivision1 = default(EntityRef<StructDivision>);
			this._Demand = default(EntityRef<Demand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AuthorId
		{
			get
			{
				return this._AuthorId;
			}
			set
			{
				if ((this._AuthorId != value))
				{
					if (this._SecurityTrustee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorId = value;
					this.SendPropertyChanged("AuthorId");
					this.OnAuthorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorStructDivisionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AuthorStructDivisionId
		{
			get
			{
				return this._AuthorStructDivisionId;
			}
			set
			{
				if ((this._AuthorStructDivisionId != value))
				{
					if (this._StructDivision.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorStructDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorStructDivisionId = value;
					this.SendPropertyChanged("AuthorStructDivisionId");
					this.OnAuthorStructDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._SecurityTrustee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStructDivisionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserStructDivisionId
		{
			get
			{
				return this._UserStructDivisionId;
			}
			set
			{
				if ((this._UserStructDivisionId != value))
				{
					if (this._StructDivision1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserStructDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._UserStructDivisionId = value;
					this.SendPropertyChanged("UserStructDivisionId");
					this.OnUserStructDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DemandId
		{
			get
			{
				return this._DemandId;
			}
			set
			{
				if ((this._DemandId != value))
				{
					if (this._Demand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIdChanging(value);
					this.SendPropertyChanging();
					this._DemandId = value;
					this.SendPropertyChanged("DemandId");
					this.OnDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndPermissionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndPermissionDate
		{
			get
			{
				return this._EndPermissionDate;
			}
			set
			{
				if ((this._EndPermissionDate != value))
				{
					this.OnEndPermissionDateChanging(value);
					this.SendPropertyChanging();
					this._EndPermissionDate = value;
					this.SendPropertyChanged("EndPermissionDate");
					this.OnEndPermissionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRestricted", DbType="Bit NOT NULL")]
		public bool IsRestricted
		{
			get
			{
				return this._IsRestricted;
			}
			set
			{
				if ((this._IsRestricted != value))
				{
					this.OnIsRestrictedChanging(value);
					this.SendPropertyChanging();
					this._IsRestricted = value;
					this.SendPropertyChanged("IsRestricted");
					this.OnIsRestrictedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConstantPermission", DbType="Bit NOT NULL")]
		public bool IsConstantPermission
		{
			get
			{
				return this._IsConstantPermission;
			}
			set
			{
				if ((this._IsConstantPermission != value))
				{
					this.OnIsConstantPermissionChanging(value);
					this.SendPropertyChanging();
					this._IsConstantPermission = value;
					this.SendPropertyChanged("IsConstantPermission");
					this.OnIsConstantPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_DemandPermission", Storage="_SecurityTrustee", ThisKey="AuthorId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee
		{
			get
			{
				return this._SecurityTrustee.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee.Entity = null;
						previousValue.DemandPermissions.Remove(this);
					}
					this._SecurityTrustee.Entity = value;
					if ((value != null))
					{
						value.DemandPermissions.Add(this);
						this._AuthorId = value.Id;
					}
					else
					{
						this._AuthorId = default(System.Guid);
					}
					this.SendPropertyChanged("SecurityTrustee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_DemandPermission1", Storage="_SecurityTrustee1", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee1
		{
			get
			{
				return this._SecurityTrustee1.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee1.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee1.Entity = null;
						previousValue.DemandPermissions1.Remove(this);
					}
					this._SecurityTrustee1.Entity = value;
					if ((value != null))
					{
						value.DemandPermissions1.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("SecurityTrustee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_DemandPermission", Storage="_StructDivision", ThisKey="AuthorStructDivisionId", OtherKey="Id", IsForeignKey=true)]
		public StructDivision StructDivision
		{
			get
			{
				return this._StructDivision.Entity;
			}
			set
			{
				StructDivision previousValue = this._StructDivision.Entity;
				if (((previousValue != value) 
							|| (this._StructDivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StructDivision.Entity = null;
						previousValue.DemandPermissions.Remove(this);
					}
					this._StructDivision.Entity = value;
					if ((value != null))
					{
						value.DemandPermissions.Add(this);
						this._AuthorStructDivisionId = value.Id;
					}
					else
					{
						this._AuthorStructDivisionId = default(System.Guid);
					}
					this.SendPropertyChanged("StructDivision");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_DemandPermission1", Storage="_StructDivision1", ThisKey="UserStructDivisionId", OtherKey="Id", IsForeignKey=true)]
		public StructDivision StructDivision1
		{
			get
			{
				return this._StructDivision1.Entity;
			}
			set
			{
				StructDivision previousValue = this._StructDivision1.Entity;
				if (((previousValue != value) 
							|| (this._StructDivision1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StructDivision1.Entity = null;
						previousValue.DemandPermissions1.Remove(this);
					}
					this._StructDivision1.Entity = value;
					if ((value != null))
					{
						value.DemandPermissions1.Add(this);
						this._UserStructDivisionId = value.Id;
					}
					else
					{
						this._UserStructDivisionId = default(System.Guid);
					}
					this.SendPropertyChanged("StructDivision1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_DemandPermission", Storage="_Demand", ThisKey="DemandId", OtherKey="Id", IsForeignKey=true)]
		public Demand Demand
		{
			get
			{
				return this._Demand.Entity;
			}
			set
			{
				Demand previousValue = this._Demand.Entity;
				if (((previousValue != value) 
							|| (this._Demand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Demand.Entity = null;
						previousValue.DemandPermissions.Remove(this);
					}
					this._Demand.Entity = value;
					if ((value != null))
					{
						value.DemandPermissions.Add(this);
						this._DemandId = value.Id;
					}
					else
					{
						this._DemandId = default(System.Guid);
					}
					this.SendPropertyChanged("Demand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DemandTransitionHistory")]
	public partial class DemandTransitionHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.DateTime> _TransitionTime;
		
		private string _Comment;
		
		private System.Nullable<System.Guid> _TransitionInitiatorId;
		
		private byte _InitialStateId;
		
		private byte _DestinationStateId;
		
		private System.Guid _DemandId;
		
		private System.Nullable<System.Guid> _CommandId;
		
		private System.Nullable<System.Guid> _TransitionExpectedInitiatorId;
		
		private string _Description;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee1;
		
		private EntityRef<DemandStatusInternal> _InitialState;
		
		private EntityRef<DemandStatusInternal> _DemandStatusInternal1;
		
		private EntityRef<Demand> _Demand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnTransitionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTransitionTimeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnTransitionInitiatorIdChanging(System.Nullable<System.Guid> value);
    partial void OnTransitionInitiatorIdChanged();
    partial void OnInitialStateIdChanging(byte value);
    partial void OnInitialStateIdChanged();
    partial void OnDestinationStateIdChanging(byte value);
    partial void OnDestinationStateIdChanged();
    partial void OnDemandIdChanging(System.Guid value);
    partial void OnDemandIdChanged();
    partial void OnCommandIdChanging(System.Nullable<System.Guid> value);
    partial void OnCommandIdChanged();
    partial void OnTransitionExpectedInitiatorIdChanging(System.Nullable<System.Guid> value);
    partial void OnTransitionExpectedInitiatorIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public DemandTransitionHistory()
		{
			this._SecurityTrustee = default(EntityRef<SecurityTrustee>);
			this._SecurityTrustee1 = default(EntityRef<SecurityTrustee>);
			this._InitialState = default(EntityRef<DemandStatusInternal>);
			this._DemandStatusInternal1 = default(EntityRef<DemandStatusInternal>);
			this._Demand = default(EntityRef<Demand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransitionTime
		{
			get
			{
				return this._TransitionTime;
			}
			set
			{
				if ((this._TransitionTime != value))
				{
					this.OnTransitionTimeChanging(value);
					this.SendPropertyChanging();
					this._TransitionTime = value;
					this.SendPropertyChanged("TransitionTime");
					this.OnTransitionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitionInitiatorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TransitionInitiatorId
		{
			get
			{
				return this._TransitionInitiatorId;
			}
			set
			{
				if ((this._TransitionInitiatorId != value))
				{
					if (this._SecurityTrustee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransitionInitiatorIdChanging(value);
					this.SendPropertyChanging();
					this._TransitionInitiatorId = value;
					this.SendPropertyChanged("TransitionInitiatorId");
					this.OnTransitionInitiatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialStateId", DbType="TinyInt NOT NULL")]
		public byte InitialStateId
		{
			get
			{
				return this._InitialStateId;
			}
			set
			{
				if ((this._InitialStateId != value))
				{
					if (this._InitialState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInitialStateIdChanging(value);
					this.SendPropertyChanging();
					this._InitialStateId = value;
					this.SendPropertyChanged("InitialStateId");
					this.OnInitialStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationStateId", DbType="TinyInt NOT NULL")]
		public byte DestinationStateId
		{
			get
			{
				return this._DestinationStateId;
			}
			set
			{
				if ((this._DestinationStateId != value))
				{
					if (this._DemandStatusInternal1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDestinationStateIdChanging(value);
					this.SendPropertyChanging();
					this._DestinationStateId = value;
					this.SendPropertyChanged("DestinationStateId");
					this.OnDestinationStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DemandId
		{
			get
			{
				return this._DemandId;
			}
			set
			{
				if ((this._DemandId != value))
				{
					if (this._Demand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIdChanging(value);
					this.SendPropertyChanging();
					this._DemandId = value;
					this.SendPropertyChanged("DemandId");
					this.OnDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CommandId
		{
			get
			{
				return this._CommandId;
			}
			set
			{
				if ((this._CommandId != value))
				{
					this.OnCommandIdChanging(value);
					this.SendPropertyChanging();
					this._CommandId = value;
					this.SendPropertyChanged("CommandId");
					this.OnCommandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitionExpectedInitiatorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TransitionExpectedInitiatorId
		{
			get
			{
				return this._TransitionExpectedInitiatorId;
			}
			set
			{
				if ((this._TransitionExpectedInitiatorId != value))
				{
					if (this._SecurityTrustee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransitionExpectedInitiatorIdChanging(value);
					this.SendPropertyChanging();
					this._TransitionExpectedInitiatorId = value;
					this.SendPropertyChanged("TransitionExpectedInitiatorId");
					this.OnTransitionExpectedInitiatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_DemandTransitionHistory", Storage="_SecurityTrustee", ThisKey="TransitionInitiatorId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee
		{
			get
			{
				return this._SecurityTrustee.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee.Entity = null;
						previousValue.DemandTransitionHistories.Remove(this);
					}
					this._SecurityTrustee.Entity = value;
					if ((value != null))
					{
						value.DemandTransitionHistories.Add(this);
						this._TransitionInitiatorId = value.Id;
					}
					else
					{
						this._TransitionInitiatorId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SecurityTrustee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_DemandTransitionHistory1", Storage="_SecurityTrustee1", ThisKey="TransitionExpectedInitiatorId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee1
		{
			get
			{
				return this._SecurityTrustee1.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee1.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee1.Entity = null;
						previousValue.DemandTransitionHistories1.Remove(this);
					}
					this._SecurityTrustee1.Entity = value;
					if ((value != null))
					{
						value.DemandTransitionHistories1.Add(this);
						this._TransitionExpectedInitiatorId = value.Id;
					}
					else
					{
						this._TransitionExpectedInitiatorId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SecurityTrustee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DemandStatusInternal_DemandTransitionHistory", Storage="_InitialState", ThisKey="InitialStateId", OtherKey="Id", IsForeignKey=true)]
		public DemandStatusInternal InitialState
		{
			get
			{
				return this._InitialState.Entity;
			}
			set
			{
				DemandStatusInternal previousValue = this._InitialState.Entity;
				if (((previousValue != value) 
							|| (this._InitialState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InitialState.Entity = null;
						previousValue.DemandTransitionHistories.Remove(this);
					}
					this._InitialState.Entity = value;
					if ((value != null))
					{
						value.DemandTransitionHistories.Add(this);
						this._InitialStateId = value.Id;
					}
					else
					{
						this._InitialStateId = default(byte);
					}
					this.SendPropertyChanged("InitialState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DemandStatusInternal_DemandTransitionHistory1", Storage="_DemandStatusInternal1", ThisKey="DestinationStateId", OtherKey="Id", IsForeignKey=true)]
		public DemandStatusInternal DemandStatusInternal1
		{
			get
			{
				return this._DemandStatusInternal1.Entity;
			}
			set
			{
				DemandStatusInternal previousValue = this._DemandStatusInternal1.Entity;
				if (((previousValue != value) 
							|| (this._DemandStatusInternal1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DemandStatusInternal1.Entity = null;
						previousValue.DemandTransitionHistories1.Remove(this);
					}
					this._DemandStatusInternal1.Entity = value;
					if ((value != null))
					{
						value.DemandTransitionHistories1.Add(this);
						this._DestinationStateId = value.Id;
					}
					else
					{
						this._DestinationStateId = default(byte);
					}
					this.SendPropertyChanged("DemandStatusInternal1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_DemandTransitionHistory", Storage="_Demand", ThisKey="DemandId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Demand Demand
		{
			get
			{
				return this._Demand.Entity;
			}
			set
			{
				Demand previousValue = this._Demand.Entity;
				if (((previousValue != value) 
							|| (this._Demand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Demand.Entity = null;
						previousValue.DemandTransitionHistories.Remove(this);
					}
					this._Demand.Entity = value;
					if ((value != null))
					{
						value.DemandTransitionHistories.Add(this);
						this._DemandId = value.Id;
					}
					else
					{
						this._DemandId = default(System.Guid);
					}
					this.SendPropertyChanged("Demand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DemandAdjustmentTransitionHistory")]
	public partial class DemandAdjustmentTransitionHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.DateTime> _TransitionTime;
		
		private string _Comment;
		
		private System.Nullable<System.Guid> _TransitionInitiatorId;
		
		private byte _InitialStateId;
		
		private byte _DestinationStateId;
		
		private System.Guid _DemandAdjustmentId;
		
		private System.Nullable<System.Guid> _CommandId;
		
		private System.Nullable<System.Guid> _TransitionExpectedInitiatorId;
		
		private string _Description;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee1;
		
		private EntityRef<DemandAdjustment> _DemandAdjustment;
		
		private EntityRef<DemandAdjustmentState> _InitialState;
		
		private EntityRef<DemandAdjustmentState> _DemandAdjustmentState1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnTransitionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTransitionTimeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnTransitionInitiatorIdChanging(System.Nullable<System.Guid> value);
    partial void OnTransitionInitiatorIdChanged();
    partial void OnInitialStateIdChanging(byte value);
    partial void OnInitialStateIdChanged();
    partial void OnDestinationStateIdChanging(byte value);
    partial void OnDestinationStateIdChanged();
    partial void OnDemandAdjustmentIdChanging(System.Guid value);
    partial void OnDemandAdjustmentIdChanged();
    partial void OnCommandIdChanging(System.Nullable<System.Guid> value);
    partial void OnCommandIdChanged();
    partial void OnTransitionExpectedInitiatorIdChanging(System.Nullable<System.Guid> value);
    partial void OnTransitionExpectedInitiatorIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public DemandAdjustmentTransitionHistory()
		{
			this._SecurityTrustee = default(EntityRef<SecurityTrustee>);
			this._SecurityTrustee1 = default(EntityRef<SecurityTrustee>);
			this._DemandAdjustment = default(EntityRef<DemandAdjustment>);
			this._InitialState = default(EntityRef<DemandAdjustmentState>);
			this._DemandAdjustmentState1 = default(EntityRef<DemandAdjustmentState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransitionTime
		{
			get
			{
				return this._TransitionTime;
			}
			set
			{
				if ((this._TransitionTime != value))
				{
					this.OnTransitionTimeChanging(value);
					this.SendPropertyChanging();
					this._TransitionTime = value;
					this.SendPropertyChanged("TransitionTime");
					this.OnTransitionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitionInitiatorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TransitionInitiatorId
		{
			get
			{
				return this._TransitionInitiatorId;
			}
			set
			{
				if ((this._TransitionInitiatorId != value))
				{
					if (this._SecurityTrustee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransitionInitiatorIdChanging(value);
					this.SendPropertyChanging();
					this._TransitionInitiatorId = value;
					this.SendPropertyChanged("TransitionInitiatorId");
					this.OnTransitionInitiatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialStateId", DbType="TinyInt NOT NULL")]
		public byte InitialStateId
		{
			get
			{
				return this._InitialStateId;
			}
			set
			{
				if ((this._InitialStateId != value))
				{
					if (this._InitialState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInitialStateIdChanging(value);
					this.SendPropertyChanging();
					this._InitialStateId = value;
					this.SendPropertyChanged("InitialStateId");
					this.OnInitialStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationStateId", DbType="TinyInt NOT NULL")]
		public byte DestinationStateId
		{
			get
			{
				return this._DestinationStateId;
			}
			set
			{
				if ((this._DestinationStateId != value))
				{
					if (this._DemandAdjustmentState1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDestinationStateIdChanging(value);
					this.SendPropertyChanging();
					this._DestinationStateId = value;
					this.SendPropertyChanged("DestinationStateId");
					this.OnDestinationStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandAdjustmentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DemandAdjustmentId
		{
			get
			{
				return this._DemandAdjustmentId;
			}
			set
			{
				if ((this._DemandAdjustmentId != value))
				{
					if (this._DemandAdjustment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandAdjustmentIdChanging(value);
					this.SendPropertyChanging();
					this._DemandAdjustmentId = value;
					this.SendPropertyChanged("DemandAdjustmentId");
					this.OnDemandAdjustmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CommandId
		{
			get
			{
				return this._CommandId;
			}
			set
			{
				if ((this._CommandId != value))
				{
					this.OnCommandIdChanging(value);
					this.SendPropertyChanging();
					this._CommandId = value;
					this.SendPropertyChanged("CommandId");
					this.OnCommandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitionExpectedInitiatorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TransitionExpectedInitiatorId
		{
			get
			{
				return this._TransitionExpectedInitiatorId;
			}
			set
			{
				if ((this._TransitionExpectedInitiatorId != value))
				{
					if (this._SecurityTrustee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransitionExpectedInitiatorIdChanging(value);
					this.SendPropertyChanging();
					this._TransitionExpectedInitiatorId = value;
					this.SendPropertyChanged("TransitionExpectedInitiatorId");
					this.OnTransitionExpectedInitiatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_DemandAdjustmentTransitionHistory", Storage="_SecurityTrustee", ThisKey="TransitionInitiatorId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee
		{
			get
			{
				return this._SecurityTrustee.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee.Entity = null;
						previousValue.DemandAdjustmentTransitionHistories.Remove(this);
					}
					this._SecurityTrustee.Entity = value;
					if ((value != null))
					{
						value.DemandAdjustmentTransitionHistories.Add(this);
						this._TransitionInitiatorId = value.Id;
					}
					else
					{
						this._TransitionInitiatorId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SecurityTrustee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_DemandAdjustmentTransitionHistory1", Storage="_SecurityTrustee1", ThisKey="TransitionExpectedInitiatorId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee1
		{
			get
			{
				return this._SecurityTrustee1.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee1.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee1.Entity = null;
						previousValue.DemandAdjustmentTransitionHistories1.Remove(this);
					}
					this._SecurityTrustee1.Entity = value;
					if ((value != null))
					{
						value.DemandAdjustmentTransitionHistories1.Add(this);
						this._TransitionExpectedInitiatorId = value.Id;
					}
					else
					{
						this._TransitionExpectedInitiatorId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SecurityTrustee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DemandAdjustment_DemandAdjustmentTransitionHistory", Storage="_DemandAdjustment", ThisKey="DemandAdjustmentId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DemandAdjustment DemandAdjustment
		{
			get
			{
				return this._DemandAdjustment.Entity;
			}
			set
			{
				DemandAdjustment previousValue = this._DemandAdjustment.Entity;
				if (((previousValue != value) 
							|| (this._DemandAdjustment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DemandAdjustment.Entity = null;
						previousValue.DemandAdjustmentTransitionHistories.Remove(this);
					}
					this._DemandAdjustment.Entity = value;
					if ((value != null))
					{
						value.DemandAdjustmentTransitionHistories.Add(this);
						this._DemandAdjustmentId = value.Id;
					}
					else
					{
						this._DemandAdjustmentId = default(System.Guid);
					}
					this.SendPropertyChanged("DemandAdjustment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DemandAdjustmentState_DemandAdjustmentTransitionHistory", Storage="_InitialState", ThisKey="InitialStateId", OtherKey="Id", IsForeignKey=true)]
		public DemandAdjustmentState InitialState
		{
			get
			{
				return this._InitialState.Entity;
			}
			set
			{
				DemandAdjustmentState previousValue = this._InitialState.Entity;
				if (((previousValue != value) 
							|| (this._InitialState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InitialState.Entity = null;
						previousValue.DemandAdjustmentTransitionHistories.Remove(this);
					}
					this._InitialState.Entity = value;
					if ((value != null))
					{
						value.DemandAdjustmentTransitionHistories.Add(this);
						this._InitialStateId = value.Id;
					}
					else
					{
						this._InitialStateId = default(byte);
					}
					this.SendPropertyChanged("InitialState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DemandAdjustmentState_DemandAdjustmentTransitionHistory1", Storage="_DemandAdjustmentState1", ThisKey="DestinationStateId", OtherKey="Id", IsForeignKey=true)]
		public DemandAdjustmentState DemandAdjustmentState1
		{
			get
			{
				return this._DemandAdjustmentState1.Entity;
			}
			set
			{
				DemandAdjustmentState previousValue = this._DemandAdjustmentState1.Entity;
				if (((previousValue != value) 
							|| (this._DemandAdjustmentState1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DemandAdjustmentState1.Entity = null;
						previousValue.DemandAdjustmentTransitionHistories1.Remove(this);
					}
					this._DemandAdjustmentState1.Entity = value;
					if ((value != null))
					{
						value.DemandAdjustmentTransitionHistories1.Add(this);
						this._DestinationStateId = value.Id;
					}
					else
					{
						this._DestinationStateId = default(byte);
					}
					this.SendPropertyChanged("DemandAdjustmentState1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contract")]
	public partial class Contract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Number;
		
		private string _Subject;
		
		private System.Guid _BudgetVersionId;
		
		private System.Nullable<System.Guid> _CostArticleId;
		
		private System.Nullable<System.Guid> _ProjectId;
		
		private System.Nullable<System.Guid> _GoodsTypeId;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<System.Guid> _InitiatorStructId;
		
		private System.Nullable<System.Guid> _ExecutorStructId;
		
		private System.Nullable<System.Guid> _BusinessBlockId;
		
		private System.Nullable<byte> _StatusId;
		
		private System.Nullable<System.Guid> _DefenderId;
		
		private bool _IsDeleted;
		
		private System.Nullable<decimal> _Summ;
		
		private System.Nullable<bool> _IsComplex;
		
		private System.Nullable<System.DateTime> _DateFrom;
		
		private System.Nullable<System.DateTime> _DateTo;
		
		private System.Nullable<System.Guid> _SolutionId;
		
		private System.Nullable<System.Guid> _AuthorId;
		
		private System.Nullable<System.Guid> _CurrencyId;
		
		private System.Nullable<decimal> _CurrencySum;
		
		private string _ConditionPayment;
		
		private System.Nullable<System.Guid> _BankId;
		
		private long _NumberId;
		
		private System.Nullable<int> _UnpaidMonth;
		
		private System.Nullable<System.Guid> _CustomerId;
		
		private System.Nullable<System.DateTime> _DistributionDate;
		
		private System.Nullable<double> _NDS;
		
		private System.Nullable<double> _CurrencyRate;
		
		private System.Nullable<double> _CurrencyRateCBPercents;
		
		private System.Nullable<byte> _CurrencyRateTypeId;
		
		private string _ExternalId;
		
		private System.Nullable<int> _ExternalCustomerId;
		
		private System.Nullable<int> _ExternalExecutorId;
		
		private string _ExternalCustomerDetails;
		
		private string _ExternalExecutorDetails;
		
		private string _ExternalManager;
		
		private System.Nullable<System.Guid> _CustomerCounteragentId;
		
		private System.Nullable<System.Guid> _ExecutorCounteragentId;
		
		private System.Nullable<System.Guid> _AuthorStructDivisionId;
		
		private string _Name;
		
		private System.Nullable<System.Guid> _CounteragentId;
		
		private System.Nullable<bool> _HasDemand;
		
		private System.Nullable<decimal> _SumWithoutNDS;
		
		private bool _IsProtected;
		
		private System.Nullable<System.Guid> _FilialId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.Guid> _ChangedByID;
		
		private System.Nullable<System.DateTime> _ChangeDate;
		
		private bool _IsPotential;
		
		private EntitySet<ContractMoney> _ContractMoneys;
		
		private EntitySet<Contract> _Contracts;
		
		private EntitySet<BillDemand> _BillDemands;
		
		private EntityRef<BudgetVersion> _BudgetVersion;
		
		private EntityRef<Contract> _Contract1;
		
		private EntityRef<ContractStatus> _ContractStatus;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee;
		
		private EntityRef<StructDivision> _StructDivision;
		
		private EntityRef<StructDivision> _StructDivision1;
		
		private EntityRef<Counteragent> _CustomerCounteragent;
		
		private EntityRef<Counteragent> _Counteragent1;
		
		private EntityRef<Filial> _Filial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnParentIdChanging(System.Nullable<System.Guid> value);
    partial void OnParentIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBudgetVersionIdChanging(System.Guid value);
    partial void OnBudgetVersionIdChanged();
    partial void OnCostArticleIdChanging(System.Nullable<System.Guid> value);
    partial void OnCostArticleIdChanged();
    partial void OnProjectIdChanging(System.Nullable<System.Guid> value);
    partial void OnProjectIdChanged();
    partial void OnGoodsTypeIdChanging(System.Nullable<System.Guid> value);
    partial void OnGoodsTypeIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnInitiatorStructIdChanging(System.Nullable<System.Guid> value);
    partial void OnInitiatorStructIdChanged();
    partial void OnExecutorStructIdChanging(System.Nullable<System.Guid> value);
    partial void OnExecutorStructIdChanged();
    partial void OnBusinessBlockIdChanging(System.Nullable<System.Guid> value);
    partial void OnBusinessBlockIdChanged();
    partial void OnStatusIdChanging(System.Nullable<byte> value);
    partial void OnStatusIdChanged();
    partial void OnDefenderIdChanging(System.Nullable<System.Guid> value);
    partial void OnDefenderIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnSummChanging(System.Nullable<decimal> value);
    partial void OnSummChanged();
    partial void OnIsComplexChanging(System.Nullable<bool> value);
    partial void OnIsComplexChanged();
    partial void OnDateFromChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFromChanged();
    partial void OnDateToChanging(System.Nullable<System.DateTime> value);
    partial void OnDateToChanged();
    partial void OnSolutionIdChanging(System.Nullable<System.Guid> value);
    partial void OnSolutionIdChanged();
    partial void OnAuthorIdChanging(System.Nullable<System.Guid> value);
    partial void OnAuthorIdChanged();
    partial void OnCurrencyIdChanging(System.Nullable<System.Guid> value);
    partial void OnCurrencyIdChanged();
    partial void OnCurrencySumChanging(System.Nullable<decimal> value);
    partial void OnCurrencySumChanged();
    partial void OnConditionPaymentChanging(string value);
    partial void OnConditionPaymentChanged();
    partial void OnBankIdChanging(System.Nullable<System.Guid> value);
    partial void OnBankIdChanged();
    partial void OnNumberIdChanging(long value);
    partial void OnNumberIdChanged();
    partial void OnUnpaidMonthChanging(System.Nullable<int> value);
    partial void OnUnpaidMonthChanged();
    partial void OnCustomerIdChanging(System.Nullable<System.Guid> value);
    partial void OnCustomerIdChanged();
    partial void OnDistributionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDistributionDateChanged();
    partial void OnNDSChanging(System.Nullable<double> value);
    partial void OnNDSChanged();
    partial void OnCurrencyRateChanging(System.Nullable<double> value);
    partial void OnCurrencyRateChanged();
    partial void OnCurrencyRateCBPercentsChanging(System.Nullable<double> value);
    partial void OnCurrencyRateCBPercentsChanged();
    partial void OnCurrencyRateTypeIdChanging(System.Nullable<byte> value);
    partial void OnCurrencyRateTypeIdChanged();
    partial void OnExternalIdChanging(string value);
    partial void OnExternalIdChanged();
    partial void OnExternalCustomerIdChanging(System.Nullable<int> value);
    partial void OnExternalCustomerIdChanged();
    partial void OnExternalExecutorIdChanging(System.Nullable<int> value);
    partial void OnExternalExecutorIdChanged();
    partial void OnExternalCustomerDetailsChanging(string value);
    partial void OnExternalCustomerDetailsChanged();
    partial void OnExternalExecutorDetailsChanging(string value);
    partial void OnExternalExecutorDetailsChanged();
    partial void OnExternalManagerChanging(string value);
    partial void OnExternalManagerChanged();
    partial void OnCustomerCounteragentIdChanging(System.Nullable<System.Guid> value);
    partial void OnCustomerCounteragentIdChanged();
    partial void OnExecutorCounteragentIdChanging(System.Nullable<System.Guid> value);
    partial void OnExecutorCounteragentIdChanged();
    partial void OnAuthorStructDivisionIdChanging(System.Nullable<System.Guid> value);
    partial void OnAuthorStructDivisionIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCounteragentIdChanging(System.Nullable<System.Guid> value);
    partial void OnCounteragentIdChanged();
    partial void OnHasDemandChanging(System.Nullable<bool> value);
    partial void OnHasDemandChanged();
    partial void OnSumWithoutNDSChanging(System.Nullable<decimal> value);
    partial void OnSumWithoutNDSChanged();
    partial void OnIsProtectedChanging(bool value);
    partial void OnIsProtectedChanged();
    partial void OnFilialIdChanging(System.Nullable<System.Guid> value);
    partial void OnFilialIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnChangedByIDChanging(System.Nullable<System.Guid> value);
    partial void OnChangedByIDChanged();
    partial void OnChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeDateChanged();
    partial void OnIsPotentialChanging(bool value);
    partial void OnIsPotentialChanged();
    #endregion
		
		public Contract()
		{
			this._ContractMoneys = new EntitySet<ContractMoney>(new Action<ContractMoney>(this.attach_ContractMoneys), new Action<ContractMoney>(this.detach_ContractMoneys));
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._BillDemands = new EntitySet<BillDemand>(new Action<BillDemand>(this.attach_BillDemands), new Action<BillDemand>(this.detach_BillDemands));
			this._BudgetVersion = default(EntityRef<BudgetVersion>);
			this._Contract1 = default(EntityRef<Contract>);
			this._ContractStatus = default(EntityRef<ContractStatus>);
			this._Currency = default(EntityRef<Currency>);
			this._Project = default(EntityRef<Project>);
			this._SecurityTrustee = default(EntityRef<SecurityTrustee>);
			this._StructDivision = default(EntityRef<StructDivision>);
			this._StructDivision1 = default(EntityRef<StructDivision>);
			this._CustomerCounteragent = default(EntityRef<Counteragent>);
			this._Counteragent1 = default(EntityRef<Counteragent>);
			this._Filial = default(EntityRef<Filial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._Contract1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(1024)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetVersionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BudgetVersionId
		{
			get
			{
				return this._BudgetVersionId;
			}
			set
			{
				if ((this._BudgetVersionId != value))
				{
					if (this._BudgetVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudgetVersionIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetVersionId = value;
					this.SendPropertyChanged("BudgetVersionId");
					this.OnBudgetVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostArticleId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CostArticleId
		{
			get
			{
				return this._CostArticleId;
			}
			set
			{
				if ((this._CostArticleId != value))
				{
					this.OnCostArticleIdChanging(value);
					this.SendPropertyChanging();
					this._CostArticleId = value;
					this.SendPropertyChanged("CostArticleId");
					this.OnCostArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsTypeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GoodsTypeId
		{
			get
			{
				return this._GoodsTypeId;
			}
			set
			{
				if ((this._GoodsTypeId != value))
				{
					this.OnGoodsTypeIdChanging(value);
					this.SendPropertyChanging();
					this._GoodsTypeId = value;
					this.SendPropertyChanged("GoodsTypeId");
					this.OnGoodsTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitiatorStructId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> InitiatorStructId
		{
			get
			{
				return this._InitiatorStructId;
			}
			set
			{
				if ((this._InitiatorStructId != value))
				{
					this.OnInitiatorStructIdChanging(value);
					this.SendPropertyChanging();
					this._InitiatorStructId = value;
					this.SendPropertyChanged("InitiatorStructId");
					this.OnInitiatorStructIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutorStructId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ExecutorStructId
		{
			get
			{
				return this._ExecutorStructId;
			}
			set
			{
				if ((this._ExecutorStructId != value))
				{
					if (this._StructDivision1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExecutorStructIdChanging(value);
					this.SendPropertyChanging();
					this._ExecutorStructId = value;
					this.SendPropertyChanged("ExecutorStructId");
					this.OnExecutorStructIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessBlockId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BusinessBlockId
		{
			get
			{
				return this._BusinessBlockId;
			}
			set
			{
				if ((this._BusinessBlockId != value))
				{
					this.OnBusinessBlockIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessBlockId = value;
					this.SendPropertyChanged("BusinessBlockId");
					this.OnBusinessBlockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="TinyInt")]
		public System.Nullable<byte> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._ContractStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefenderId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DefenderId
		{
			get
			{
				return this._DefenderId;
			}
			set
			{
				if ((this._DefenderId != value))
				{
					this.OnDefenderIdChanging(value);
					this.SendPropertyChanging();
					this._DefenderId = value;
					this.SendPropertyChanged("DefenderId");
					this.OnDefenderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summ", DbType="Money")]
		public System.Nullable<decimal> Summ
		{
			get
			{
				return this._Summ;
			}
			set
			{
				if ((this._Summ != value))
				{
					this.OnSummChanging(value);
					this.SendPropertyChanging();
					this._Summ = value;
					this.SendPropertyChanged("Summ");
					this.OnSummChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsComplex", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsComplex
		{
			get
			{
				return this._IsComplex;
			}
			set
			{
				if ((this._IsComplex != value))
				{
					this.OnIsComplexChanging(value);
					this.SendPropertyChanging();
					this._IsComplex = value;
					this.SendPropertyChanged("IsComplex");
					this.OnIsComplexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateFrom
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this.OnDateFromChanging(value);
					this.SendPropertyChanging();
					this._DateFrom = value;
					this.SendPropertyChanged("DateFrom");
					this.OnDateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTo
		{
			get
			{
				return this._DateTo;
			}
			set
			{
				if ((this._DateTo != value))
				{
					this.OnDateToChanging(value);
					this.SendPropertyChanging();
					this._DateTo = value;
					this.SendPropertyChanged("DateTo");
					this.OnDateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this._SolutionId;
			}
			set
			{
				if ((this._SolutionId != value))
				{
					this.OnSolutionIdChanging(value);
					this.SendPropertyChanging();
					this._SolutionId = value;
					this.SendPropertyChanged("SolutionId");
					this.OnSolutionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AuthorId
		{
			get
			{
				return this._AuthorId;
			}
			set
			{
				if ((this._AuthorId != value))
				{
					if (this._SecurityTrustee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorId = value;
					this.SendPropertyChanged("AuthorId");
					this.OnAuthorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencySum", DbType="Money")]
		public System.Nullable<decimal> CurrencySum
		{
			get
			{
				return this._CurrencySum;
			}
			set
			{
				if ((this._CurrencySum != value))
				{
					this.OnCurrencySumChanging(value);
					this.SendPropertyChanging();
					this._CurrencySum = value;
					this.SendPropertyChanged("CurrencySum");
					this.OnCurrencySumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionPayment", DbType="NVarChar(1024)")]
		public string ConditionPayment
		{
			get
			{
				return this._ConditionPayment;
			}
			set
			{
				if ((this._ConditionPayment != value))
				{
					this.OnConditionPaymentChanging(value);
					this.SendPropertyChanging();
					this._ConditionPayment = value;
					this.SendPropertyChanged("ConditionPayment");
					this.OnConditionPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					this.OnBankIdChanging(value);
					this.SendPropertyChanging();
					this._BankId = value;
					this.SendPropertyChanged("BankId");
					this.OnBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberId", DbType="BigInt NOT NULL")]
		public long NumberId
		{
			get
			{
				return this._NumberId;
			}
			set
			{
				if ((this._NumberId != value))
				{
					this.OnNumberIdChanging(value);
					this.SendPropertyChanging();
					this._NumberId = value;
					this.SendPropertyChanged("NumberId");
					this.OnNumberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnpaidMonth", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> UnpaidMonth
		{
			get
			{
				return this._UnpaidMonth;
			}
			set
			{
				if ((this._UnpaidMonth != value))
				{
					this.OnUnpaidMonthChanging(value);
					this.SendPropertyChanging();
					this._UnpaidMonth = value;
					this.SendPropertyChanged("UnpaidMonth");
					this.OnUnpaidMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistributionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DistributionDate
		{
			get
			{
				return this._DistributionDate;
			}
			set
			{
				if ((this._DistributionDate != value))
				{
					this.OnDistributionDateChanging(value);
					this.SendPropertyChanging();
					this._DistributionDate = value;
					this.SendPropertyChanged("DistributionDate");
					this.OnDistributionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDS", DbType="Float")]
		public System.Nullable<double> NDS
		{
			get
			{
				return this._NDS;
			}
			set
			{
				if ((this._NDS != value))
				{
					this.OnNDSChanging(value);
					this.SendPropertyChanging();
					this._NDS = value;
					this.SendPropertyChanged("NDS");
					this.OnNDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRate", DbType="Float")]
		public System.Nullable<double> CurrencyRate
		{
			get
			{
				return this._CurrencyRate;
			}
			set
			{
				if ((this._CurrencyRate != value))
				{
					this.OnCurrencyRateChanging(value);
					this.SendPropertyChanging();
					this._CurrencyRate = value;
					this.SendPropertyChanged("CurrencyRate");
					this.OnCurrencyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRateCBPercents", DbType="Float")]
		public System.Nullable<double> CurrencyRateCBPercents
		{
			get
			{
				return this._CurrencyRateCBPercents;
			}
			set
			{
				if ((this._CurrencyRateCBPercents != value))
				{
					this.OnCurrencyRateCBPercentsChanging(value);
					this.SendPropertyChanging();
					this._CurrencyRateCBPercents = value;
					this.SendPropertyChanged("CurrencyRateCBPercents");
					this.OnCurrencyRateCBPercentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRateTypeId", DbType="TinyInt")]
		public System.Nullable<byte> CurrencyRateTypeId
		{
			get
			{
				return this._CurrencyRateTypeId;
			}
			set
			{
				if ((this._CurrencyRateTypeId != value))
				{
					this.OnCurrencyRateTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyRateTypeId = value;
					this.SendPropertyChanged("CurrencyRateTypeId");
					this.OnCurrencyRateTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="NVarChar(50)")]
		public string ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalCustomerId", DbType="Int")]
		public System.Nullable<int> ExternalCustomerId
		{
			get
			{
				return this._ExternalCustomerId;
			}
			set
			{
				if ((this._ExternalCustomerId != value))
				{
					this.OnExternalCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalCustomerId = value;
					this.SendPropertyChanged("ExternalCustomerId");
					this.OnExternalCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalExecutorId", DbType="Int")]
		public System.Nullable<int> ExternalExecutorId
		{
			get
			{
				return this._ExternalExecutorId;
			}
			set
			{
				if ((this._ExternalExecutorId != value))
				{
					this.OnExternalExecutorIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalExecutorId = value;
					this.SendPropertyChanged("ExternalExecutorId");
					this.OnExternalExecutorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalCustomerDetails", DbType="NVarChar(MAX)")]
		public string ExternalCustomerDetails
		{
			get
			{
				return this._ExternalCustomerDetails;
			}
			set
			{
				if ((this._ExternalCustomerDetails != value))
				{
					this.OnExternalCustomerDetailsChanging(value);
					this.SendPropertyChanging();
					this._ExternalCustomerDetails = value;
					this.SendPropertyChanged("ExternalCustomerDetails");
					this.OnExternalCustomerDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalExecutorDetails", DbType="NVarChar(MAX)")]
		public string ExternalExecutorDetails
		{
			get
			{
				return this._ExternalExecutorDetails;
			}
			set
			{
				if ((this._ExternalExecutorDetails != value))
				{
					this.OnExternalExecutorDetailsChanging(value);
					this.SendPropertyChanging();
					this._ExternalExecutorDetails = value;
					this.SendPropertyChanged("ExternalExecutorDetails");
					this.OnExternalExecutorDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalManager", DbType="NVarChar(128)")]
		public string ExternalManager
		{
			get
			{
				return this._ExternalManager;
			}
			set
			{
				if ((this._ExternalManager != value))
				{
					this.OnExternalManagerChanging(value);
					this.SendPropertyChanging();
					this._ExternalManager = value;
					this.SendPropertyChanged("ExternalManager");
					this.OnExternalManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCounteragentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CustomerCounteragentId
		{
			get
			{
				return this._CustomerCounteragentId;
			}
			set
			{
				if ((this._CustomerCounteragentId != value))
				{
					if (this._CustomerCounteragent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerCounteragentIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerCounteragentId = value;
					this.SendPropertyChanged("CustomerCounteragentId");
					this.OnCustomerCounteragentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutorCounteragentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ExecutorCounteragentId
		{
			get
			{
				return this._ExecutorCounteragentId;
			}
			set
			{
				if ((this._ExecutorCounteragentId != value))
				{
					if (this._Counteragent1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExecutorCounteragentIdChanging(value);
					this.SendPropertyChanging();
					this._ExecutorCounteragentId = value;
					this.SendPropertyChanged("ExecutorCounteragentId");
					this.OnExecutorCounteragentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorStructDivisionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AuthorStructDivisionId
		{
			get
			{
				return this._AuthorStructDivisionId;
			}
			set
			{
				if ((this._AuthorStructDivisionId != value))
				{
					if (this._StructDivision.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorStructDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorStructDivisionId = value;
					this.SendPropertyChanged("AuthorStructDivisionId");
					this.OnAuthorStructDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", AutoSync=AutoSync.Always, DbType="NVarChar(2000)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounteragentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CounteragentId
		{
			get
			{
				return this._CounteragentId;
			}
			set
			{
				if ((this._CounteragentId != value))
				{
					this.OnCounteragentIdChanging(value);
					this.SendPropertyChanging();
					this._CounteragentId = value;
					this.SendPropertyChanged("CounteragentId");
					this.OnCounteragentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDemand", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> HasDemand
		{
			get
			{
				return this._HasDemand;
			}
			set
			{
				if ((this._HasDemand != value))
				{
					this.OnHasDemandChanging(value);
					this.SendPropertyChanging();
					this._HasDemand = value;
					this.SendPropertyChanged("HasDemand");
					this.OnHasDemandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumWithoutNDS", AutoSync=AutoSync.Always, DbType="Money", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> SumWithoutNDS
		{
			get
			{
				return this._SumWithoutNDS;
			}
			set
			{
				if ((this._SumWithoutNDS != value))
				{
					this.OnSumWithoutNDSChanging(value);
					this.SendPropertyChanging();
					this._SumWithoutNDS = value;
					this.SendPropertyChanged("SumWithoutNDS");
					this.OnSumWithoutNDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProtected", DbType="Bit NOT NULL")]
		public bool IsProtected
		{
			get
			{
				return this._IsProtected;
			}
			set
			{
				if ((this._IsProtected != value))
				{
					this.OnIsProtectedChanging(value);
					this.SendPropertyChanging();
					this._IsProtected = value;
					this.SendPropertyChanged("IsProtected");
					this.OnIsProtectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilialId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FilialId
		{
			get
			{
				return this._FilialId;
			}
			set
			{
				if ((this._FilialId != value))
				{
					if (this._Filial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFilialIdChanging(value);
					this.SendPropertyChanging();
					this._FilialId = value;
					this.SendPropertyChanged("FilialId");
					this.OnFilialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedByID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ChangedByID
		{
			get
			{
				return this._ChangedByID;
			}
			set
			{
				if ((this._ChangedByID != value))
				{
					this.OnChangedByIDChanging(value);
					this.SendPropertyChanging();
					this._ChangedByID = value;
					this.SendPropertyChanged("ChangedByID");
					this.OnChangedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPotential", DbType="Bit NOT NULL")]
		public bool IsPotential
		{
			get
			{
				return this._IsPotential;
			}
			set
			{
				if ((this._IsPotential != value))
				{
					this.OnIsPotentialChanging(value);
					this.SendPropertyChanging();
					this._IsPotential = value;
					this.SendPropertyChanged("IsPotential");
					this.OnIsPotentialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_ContractMoney", Storage="_ContractMoneys", ThisKey="Id", OtherKey="ContractId")]
		public EntitySet<ContractMoney> ContractMoneys
		{
			get
			{
				return this._ContractMoneys;
			}
			set
			{
				this._ContractMoneys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_Contract", Storage="_Contracts", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_BillDemand", Storage="_BillDemands", ThisKey="Id", OtherKey="ContractId")]
		public EntitySet<BillDemand> BillDemands
		{
			get
			{
				return this._BillDemands;
			}
			set
			{
				this._BillDemands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetVersion_Contract", Storage="_BudgetVersion", ThisKey="BudgetVersionId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BudgetVersion BudgetVersion
		{
			get
			{
				return this._BudgetVersion.Entity;
			}
			set
			{
				BudgetVersion previousValue = this._BudgetVersion.Entity;
				if (((previousValue != value) 
							|| (this._BudgetVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BudgetVersion.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._BudgetVersion.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._BudgetVersionId = value.Id;
					}
					else
					{
						this._BudgetVersionId = default(System.Guid);
					}
					this.SendPropertyChanged("BudgetVersion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_Contract", Storage="_Contract1", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public Contract Contract1
		{
			get
			{
				return this._Contract1.Entity;
			}
			set
			{
				Contract previousValue = this._Contract1.Entity;
				if (((previousValue != value) 
							|| (this._Contract1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract1.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._Contract1.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Contract1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractStatus_Contract", Storage="_ContractStatus", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
		public ContractStatus ContractStatus
		{
			get
			{
				return this._ContractStatus.Entity;
			}
			set
			{
				ContractStatus previousValue = this._ContractStatus.Entity;
				if (((previousValue != value) 
							|| (this._ContractStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContractStatus.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._ContractStatus.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._StatusId = value.Id;
					}
					else
					{
						this._StatusId = default(Nullable<byte>);
					}
					this.SendPropertyChanged("ContractStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Contract", Storage="_Currency", ThisKey="CurrencyId", OtherKey="Id", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._CurrencyId = value.Id;
					}
					else
					{
						this._CurrencyId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Contract", Storage="_Project", ThisKey="ProjectId", OtherKey="Id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._ProjectId = value.Id;
					}
					else
					{
						this._ProjectId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Contract", Storage="_SecurityTrustee", ThisKey="AuthorId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee
		{
			get
			{
				return this._SecurityTrustee.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._SecurityTrustee.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._AuthorId = value.Id;
					}
					else
					{
						this._AuthorId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SecurityTrustee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_Contract", Storage="_StructDivision", ThisKey="AuthorStructDivisionId", OtherKey="Id", IsForeignKey=true)]
		public StructDivision StructDivision
		{
			get
			{
				return this._StructDivision.Entity;
			}
			set
			{
				StructDivision previousValue = this._StructDivision.Entity;
				if (((previousValue != value) 
							|| (this._StructDivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StructDivision.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._StructDivision.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._AuthorStructDivisionId = value.Id;
					}
					else
					{
						this._AuthorStructDivisionId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("StructDivision");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_Contract1", Storage="_StructDivision1", ThisKey="ExecutorStructId", OtherKey="Id", IsForeignKey=true)]
		public StructDivision StructDivision1
		{
			get
			{
				return this._StructDivision1.Entity;
			}
			set
			{
				StructDivision previousValue = this._StructDivision1.Entity;
				if (((previousValue != value) 
							|| (this._StructDivision1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StructDivision1.Entity = null;
						previousValue.Contracts1.Remove(this);
					}
					this._StructDivision1.Entity = value;
					if ((value != null))
					{
						value.Contracts1.Add(this);
						this._ExecutorStructId = value.Id;
					}
					else
					{
						this._ExecutorStructId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("StructDivision1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counteragent_Contract", Storage="_CustomerCounteragent", ThisKey="CustomerCounteragentId", OtherKey="Id", IsForeignKey=true)]
		public Counteragent CustomerCounteragent
		{
			get
			{
				return this._CustomerCounteragent.Entity;
			}
			set
			{
				Counteragent previousValue = this._CustomerCounteragent.Entity;
				if (((previousValue != value) 
							|| (this._CustomerCounteragent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerCounteragent.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._CustomerCounteragent.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._CustomerCounteragentId = value.Id;
					}
					else
					{
						this._CustomerCounteragentId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("CustomerCounteragent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counteragent_Contract1", Storage="_Counteragent1", ThisKey="ExecutorCounteragentId", OtherKey="Id", IsForeignKey=true)]
		public Counteragent Counteragent1
		{
			get
			{
				return this._Counteragent1.Entity;
			}
			set
			{
				Counteragent previousValue = this._Counteragent1.Entity;
				if (((previousValue != value) 
							|| (this._Counteragent1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Counteragent1.Entity = null;
						previousValue.Contracts1.Remove(this);
					}
					this._Counteragent1.Entity = value;
					if ((value != null))
					{
						value.Contracts1.Add(this);
						this._ExecutorCounteragentId = value.Id;
					}
					else
					{
						this._ExecutorCounteragentId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Counteragent1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filial_Contract", Storage="_Filial", ThisKey="FilialId", OtherKey="Id", IsForeignKey=true)]
		public Filial Filial
		{
			get
			{
				return this._Filial.Entity;
			}
			set
			{
				Filial previousValue = this._Filial.Entity;
				if (((previousValue != value) 
							|| (this._Filial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Filial.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._Filial.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._FilialId = value.Id;
					}
					else
					{
						this._FilialId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Filial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractMoneys(ContractMoney entity)
		{
			this.SendPropertyChanging();
			entity.Contract = this;
		}
		
		private void detach_ContractMoneys(ContractMoney entity)
		{
			this.SendPropertyChanging();
			entity.Contract = null;
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Contract1 = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Contract1 = null;
		}
		
		private void attach_BillDemands(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.Contract = this;
		}
		
		private void detach_BillDemands(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.Contract = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Counteragent")]
	public partial class Counteragent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private string _Name;
		
		private System.Guid _BudgetVersionId;
		
		private bool _IsDeleted;
		
		private long _Number;
		
		private string _Address;
		
		private bool _IsProtected;
		
		private System.Nullable<bool> _ConfidentialAgreement;
		
		private System.Nullable<System.DateTime> _AgreementDate;
		
		private string _INN;
		
		private string _PersonalAccount;
		
		private string _KPP;
		
		private string _ContactInfo;
		
		private string _Director;
		
		private string _BankName;
		
		private string _BankBIC;
		
		private System.Nullable<System.Guid> _CurrencyId;
		
		private string _CodeVersion;
		
		private bool _IsPotential;
		
		private System.Nullable<System.Guid> _FilialId;
		
		private string _IdCft;
		
		private System.Nullable<System.Guid> _AuthorID;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.Guid> _ChangedByID;
		
		private System.Nullable<System.DateTime> _ChangeDate;
		
		private EntitySet<Contact> _Contacts;
		
		private EntitySet<ContractMoney> _ContractMoneys;
		
		private EntitySet<ContractMoney> _ContractMoneys1;
		
		private EntitySet<Contract> _Contracts;
		
		private EntitySet<Contract> _Contracts1;
		
		private EntitySet<Counteragent> _Counteragents;
		
		private EntitySet<Demand> _Demands;
		
		private EntitySet<BillDemand> _BillDemands;
		
		private EntityRef<BudgetVersion> _BudgetVersion;
		
		private EntityRef<Counteragent> _Counteragent1;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Filial> _Filial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnParentIdChanging(System.Nullable<System.Guid> value);
    partial void OnParentIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBudgetVersionIdChanging(System.Guid value);
    partial void OnBudgetVersionIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnNumberChanging(long value);
    partial void OnNumberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIsProtectedChanging(bool value);
    partial void OnIsProtectedChanged();
    partial void OnConfidentialAgreementChanging(System.Nullable<bool> value);
    partial void OnConfidentialAgreementChanged();
    partial void OnAgreementDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAgreementDateChanged();
    partial void OnINNChanging(string value);
    partial void OnINNChanged();
    partial void OnPersonalAccountChanging(string value);
    partial void OnPersonalAccountChanged();
    partial void OnKPPChanging(string value);
    partial void OnKPPChanged();
    partial void OnContactInfoChanging(string value);
    partial void OnContactInfoChanged();
    partial void OnDirectorChanging(string value);
    partial void OnDirectorChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankBICChanging(string value);
    partial void OnBankBICChanged();
    partial void OnCurrencyIdChanging(System.Nullable<System.Guid> value);
    partial void OnCurrencyIdChanged();
    partial void OnCodeVersionChanging(string value);
    partial void OnCodeVersionChanged();
    partial void OnIsPotentialChanging(bool value);
    partial void OnIsPotentialChanged();
    partial void OnFilialIdChanging(System.Nullable<System.Guid> value);
    partial void OnFilialIdChanged();
    partial void OnIdCftChanging(string value);
    partial void OnIdCftChanged();
    partial void OnAuthorIDChanging(System.Nullable<System.Guid> value);
    partial void OnAuthorIDChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnChangedByIDChanging(System.Nullable<System.Guid> value);
    partial void OnChangedByIDChanged();
    partial void OnChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeDateChanged();
    #endregion
		
		public Counteragent()
		{
			this._Contacts = new EntitySet<Contact>(new Action<Contact>(this.attach_Contacts), new Action<Contact>(this.detach_Contacts));
			this._ContractMoneys = new EntitySet<ContractMoney>(new Action<ContractMoney>(this.attach_ContractMoneys), new Action<ContractMoney>(this.detach_ContractMoneys));
			this._ContractMoneys1 = new EntitySet<ContractMoney>(new Action<ContractMoney>(this.attach_ContractMoneys1), new Action<ContractMoney>(this.detach_ContractMoneys1));
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._Contracts1 = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts1), new Action<Contract>(this.detach_Contracts1));
			this._Counteragents = new EntitySet<Counteragent>(new Action<Counteragent>(this.attach_Counteragents), new Action<Counteragent>(this.detach_Counteragents));
			this._Demands = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands), new Action<Demand>(this.detach_Demands));
			this._BillDemands = new EntitySet<BillDemand>(new Action<BillDemand>(this.attach_BillDemands), new Action<BillDemand>(this.detach_BillDemands));
			this._BudgetVersion = default(EntityRef<BudgetVersion>);
			this._Counteragent1 = default(EntityRef<Counteragent>);
			this._Currency = default(EntityRef<Currency>);
			this._Filial = default(EntityRef<Filial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._Counteragent1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetVersionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BudgetVersionId
		{
			get
			{
				return this._BudgetVersionId;
			}
			set
			{
				if ((this._BudgetVersionId != value))
				{
					if (this._BudgetVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudgetVersionIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetVersionId = value;
					this.SendPropertyChanged("BudgetVersionId");
					this.OnBudgetVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="BigInt NOT NULL")]
		public long Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(2048)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProtected", DbType="Bit NOT NULL")]
		public bool IsProtected
		{
			get
			{
				return this._IsProtected;
			}
			set
			{
				if ((this._IsProtected != value))
				{
					this.OnIsProtectedChanging(value);
					this.SendPropertyChanging();
					this._IsProtected = value;
					this.SendPropertyChanged("IsProtected");
					this.OnIsProtectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfidentialAgreement", DbType="Bit")]
		public System.Nullable<bool> ConfidentialAgreement
		{
			get
			{
				return this._ConfidentialAgreement;
			}
			set
			{
				if ((this._ConfidentialAgreement != value))
				{
					this.OnConfidentialAgreementChanging(value);
					this.SendPropertyChanging();
					this._ConfidentialAgreement = value;
					this.SendPropertyChanged("ConfidentialAgreement");
					this.OnConfidentialAgreementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AgreementDate
		{
			get
			{
				return this._AgreementDate;
			}
			set
			{
				if ((this._AgreementDate != value))
				{
					this.OnAgreementDateChanging(value);
					this.SendPropertyChanging();
					this._AgreementDate = value;
					this.SendPropertyChanged("AgreementDate");
					this.OnAgreementDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INN", DbType="NVarChar(12)")]
		public string INN
		{
			get
			{
				return this._INN;
			}
			set
			{
				if ((this._INN != value))
				{
					this.OnINNChanging(value);
					this.SendPropertyChanging();
					this._INN = value;
					this.SendPropertyChanged("INN");
					this.OnINNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalAccount", DbType="NVarChar(255)")]
		public string PersonalAccount
		{
			get
			{
				return this._PersonalAccount;
			}
			set
			{
				if ((this._PersonalAccount != value))
				{
					this.OnPersonalAccountChanging(value);
					this.SendPropertyChanging();
					this._PersonalAccount = value;
					this.SendPropertyChanged("PersonalAccount");
					this.OnPersonalAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPP", DbType="NVarChar(10)")]
		public string KPP
		{
			get
			{
				return this._KPP;
			}
			set
			{
				if ((this._KPP != value))
				{
					this.OnKPPChanging(value);
					this.SendPropertyChanging();
					this._KPP = value;
					this.SendPropertyChanged("KPP");
					this.OnKPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactInfo", DbType="NVarChar(MAX)")]
		public string ContactInfo
		{
			get
			{
				return this._ContactInfo;
			}
			set
			{
				if ((this._ContactInfo != value))
				{
					this.OnContactInfoChanging(value);
					this.SendPropertyChanging();
					this._ContactInfo = value;
					this.SendPropertyChanged("ContactInfo");
					this.OnContactInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Director", DbType="NVarChar(256)")]
		public string Director
		{
			get
			{
				return this._Director;
			}
			set
			{
				if ((this._Director != value))
				{
					this.OnDirectorChanging(value);
					this.SendPropertyChanging();
					this._Director = value;
					this.SendPropertyChanged("Director");
					this.OnDirectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(256)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankBIC", DbType="NVarChar(256)")]
		public string BankBIC
		{
			get
			{
				return this._BankBIC;
			}
			set
			{
				if ((this._BankBIC != value))
				{
					this.OnBankBICChanging(value);
					this.SendPropertyChanging();
					this._BankBIC = value;
					this.SendPropertyChanged("BankBIC");
					this.OnBankBICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeVersion", DbType="NVarChar(255)")]
		public string CodeVersion
		{
			get
			{
				return this._CodeVersion;
			}
			set
			{
				if ((this._CodeVersion != value))
				{
					this.OnCodeVersionChanging(value);
					this.SendPropertyChanging();
					this._CodeVersion = value;
					this.SendPropertyChanged("CodeVersion");
					this.OnCodeVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPotential", DbType="Bit NOT NULL")]
		public bool IsPotential
		{
			get
			{
				return this._IsPotential;
			}
			set
			{
				if ((this._IsPotential != value))
				{
					this.OnIsPotentialChanging(value);
					this.SendPropertyChanging();
					this._IsPotential = value;
					this.SendPropertyChanged("IsPotential");
					this.OnIsPotentialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilialId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FilialId
		{
			get
			{
				return this._FilialId;
			}
			set
			{
				if ((this._FilialId != value))
				{
					if (this._Filial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFilialIdChanging(value);
					this.SendPropertyChanging();
					this._FilialId = value;
					this.SendPropertyChanged("FilialId");
					this.OnFilialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCft", DbType="NVarChar(50)")]
		public string IdCft
		{
			get
			{
				return this._IdCft;
			}
			set
			{
				if ((this._IdCft != value))
				{
					this.OnIdCftChanging(value);
					this.SendPropertyChanging();
					this._IdCft = value;
					this.SendPropertyChanged("IdCft");
					this.OnIdCftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AuthorID
		{
			get
			{
				return this._AuthorID;
			}
			set
			{
				if ((this._AuthorID != value))
				{
					this.OnAuthorIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorID = value;
					this.SendPropertyChanged("AuthorID");
					this.OnAuthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedByID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ChangedByID
		{
			get
			{
				return this._ChangedByID;
			}
			set
			{
				if ((this._ChangedByID != value))
				{
					this.OnChangedByIDChanging(value);
					this.SendPropertyChanging();
					this._ChangedByID = value;
					this.SendPropertyChanged("ChangedByID");
					this.OnChangedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counteragent_Contact", Storage="_Contacts", ThisKey="Id", OtherKey="CountragentId")]
		public EntitySet<Contact> Contacts
		{
			get
			{
				return this._Contacts;
			}
			set
			{
				this._Contacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counteragent_ContractMoney", Storage="_ContractMoneys", ThisKey="Id", OtherKey="FromCounteragentId")]
		public EntitySet<ContractMoney> ContractMoneys
		{
			get
			{
				return this._ContractMoneys;
			}
			set
			{
				this._ContractMoneys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counteragent_ContractMoney1", Storage="_ContractMoneys1", ThisKey="Id", OtherKey="ToCounteragentId")]
		public EntitySet<ContractMoney> ContractMoneys1
		{
			get
			{
				return this._ContractMoneys1;
			}
			set
			{
				this._ContractMoneys1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counteragent_Contract", Storage="_Contracts", ThisKey="Id", OtherKey="CustomerCounteragentId")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counteragent_Contract1", Storage="_Contracts1", ThisKey="Id", OtherKey="ExecutorCounteragentId")]
		public EntitySet<Contract> Contracts1
		{
			get
			{
				return this._Contracts1;
			}
			set
			{
				this._Contracts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counteragent_Counteragent", Storage="_Counteragents", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<Counteragent> Counteragents
		{
			get
			{
				return this._Counteragents;
			}
			set
			{
				this._Counteragents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counteragent_Demand", Storage="_Demands", ThisKey="Id", OtherKey="CounteragentId")]
		public EntitySet<Demand> Demands
		{
			get
			{
				return this._Demands;
			}
			set
			{
				this._Demands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counteragent_BillDemand", Storage="_BillDemands", ThisKey="Id", OtherKey="CounteragentId")]
		public EntitySet<BillDemand> BillDemands
		{
			get
			{
				return this._BillDemands;
			}
			set
			{
				this._BillDemands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetVersion_Counteragent", Storage="_BudgetVersion", ThisKey="BudgetVersionId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BudgetVersion BudgetVersion
		{
			get
			{
				return this._BudgetVersion.Entity;
			}
			set
			{
				BudgetVersion previousValue = this._BudgetVersion.Entity;
				if (((previousValue != value) 
							|| (this._BudgetVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BudgetVersion.Entity = null;
						previousValue.Counteragents.Remove(this);
					}
					this._BudgetVersion.Entity = value;
					if ((value != null))
					{
						value.Counteragents.Add(this);
						this._BudgetVersionId = value.Id;
					}
					else
					{
						this._BudgetVersionId = default(System.Guid);
					}
					this.SendPropertyChanged("BudgetVersion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counteragent_Counteragent", Storage="_Counteragent1", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public Counteragent Counteragent1
		{
			get
			{
				return this._Counteragent1.Entity;
			}
			set
			{
				Counteragent previousValue = this._Counteragent1.Entity;
				if (((previousValue != value) 
							|| (this._Counteragent1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Counteragent1.Entity = null;
						previousValue.Counteragents.Remove(this);
					}
					this._Counteragent1.Entity = value;
					if ((value != null))
					{
						value.Counteragents.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Counteragent1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Counteragent", Storage="_Currency", ThisKey="CurrencyId", OtherKey="Id", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.Counteragents.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.Counteragents.Add(this);
						this._CurrencyId = value.Id;
					}
					else
					{
						this._CurrencyId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filial_Counteragent", Storage="_Filial", ThisKey="FilialId", OtherKey="Id", IsForeignKey=true)]
		public Filial Filial
		{
			get
			{
				return this._Filial.Entity;
			}
			set
			{
				Filial previousValue = this._Filial.Entity;
				if (((previousValue != value) 
							|| (this._Filial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Filial.Entity = null;
						previousValue.Counteragents.Remove(this);
					}
					this._Filial.Entity = value;
					if ((value != null))
					{
						value.Counteragents.Add(this);
						this._FilialId = value.Id;
					}
					else
					{
						this._FilialId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Filial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Counteragent = this;
		}
		
		private void detach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Counteragent = null;
		}
		
		private void attach_ContractMoneys(ContractMoney entity)
		{
			this.SendPropertyChanging();
			entity.Counteragent = this;
		}
		
		private void detach_ContractMoneys(ContractMoney entity)
		{
			this.SendPropertyChanging();
			entity.Counteragent = null;
		}
		
		private void attach_ContractMoneys1(ContractMoney entity)
		{
			this.SendPropertyChanging();
			entity.Counteragent1 = this;
		}
		
		private void detach_ContractMoneys1(ContractMoney entity)
		{
			this.SendPropertyChanging();
			entity.Counteragent1 = null;
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.CustomerCounteragent = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.CustomerCounteragent = null;
		}
		
		private void attach_Contracts1(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Counteragent1 = this;
		}
		
		private void detach_Contracts1(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Counteragent1 = null;
		}
		
		private void attach_Counteragents(Counteragent entity)
		{
			this.SendPropertyChanging();
			entity.Counteragent1 = this;
		}
		
		private void detach_Counteragents(Counteragent entity)
		{
			this.SendPropertyChanging();
			entity.Counteragent1 = null;
		}
		
		private void attach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.Counteragent = this;
		}
		
		private void detach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.Counteragent = null;
		}
		
		private void attach_BillDemands(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.Counteragent = this;
		}
		
		private void detach_BillDemands(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.Counteragent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_Report_BillDemand")]
	public partial class V_Report_BillDemand
	{
		
		private System.Guid _Id;
		
		private long _IdNumber;
		
		private string _StateName;
		
		private string _ContractNumber;
		
		private System.Nullable<System.DateTime> _ContractDate;
		
		private string _ContractName;
		
		private string _Number;
		
		private int _BudgetName;
		
		private System.Nullable<System.DateTime> _AccountDate;
		
		private decimal _Sum;
		
		private System.Nullable<double> _NDS;
		
		private System.Nullable<decimal> _NDSValue;
		
		private System.Nullable<decimal> _SumWithoutNDS;
		
		private string _CurrencyName;
		
		private System.Nullable<decimal> _CurrencySum;
		
		private System.Nullable<double> _CurrencyRate;
		
		private System.Nullable<double> _CurrencyRateCBPercents;
		
		private System.Nullable<byte> _CurrencyRateTypeId;
		
		private string _AuthorName;
		
		private System.Nullable<System.DateTime> _DateOfPerformance;
		
		private string _AccountNumber;
		
		private string _PaymentKindName;
		
		private string _CounteragentName;
		
		private string _PaymentFilialName;
		
		private string _INN;
		
		private string _KPP;
		
		private string _PersonalAccount;
		
		private string _BankName;
		
		private string _BankBIC;
		
		private string _Substance;
		
		private string _DocKindName;
		
		private bool _IsCompensation;
		
		private string _Comment;
		
		private string _CurrencyRateTypeParam;
		
		private System.Nullable<double> _CurrencyRateTypeParamValue;
		
		private string _PaymentCurrency;
		
		public V_Report_BillDemand()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNumber", DbType="BigInt NOT NULL")]
		public long IdNumber
		{
			get
			{
				return this._IdNumber;
			}
			set
			{
				if ((this._IdNumber != value))
				{
					this._IdNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="NVarChar(1024)")]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this._StateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNumber", DbType="NVarChar(50)")]
		public string ContractNumber
		{
			get
			{
				return this._ContractNumber;
			}
			set
			{
				if ((this._ContractNumber != value))
				{
					this._ContractNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ContractDate
		{
			get
			{
				return this._ContractDate;
			}
			set
			{
				if ((this._ContractDate != value))
				{
					this._ContractDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractName", DbType="NVarChar(2000)")]
		public string ContractName
		{
			get
			{
				return this._ContractName;
			}
			set
			{
				if ((this._ContractName != value))
				{
					this._ContractName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(255)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetName", DbType="Int NOT NULL")]
		public int BudgetName
		{
			get
			{
				return this._BudgetName;
			}
			set
			{
				if ((this._BudgetName != value))
				{
					this._BudgetName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AccountDate
		{
			get
			{
				return this._AccountDate;
			}
			set
			{
				if ((this._AccountDate != value))
				{
					this._AccountDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Money NOT NULL")]
		public decimal Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this._Sum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDS", DbType="Float")]
		public System.Nullable<double> NDS
		{
			get
			{
				return this._NDS;
			}
			set
			{
				if ((this._NDS != value))
				{
					this._NDS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDSValue", DbType="Money")]
		public System.Nullable<decimal> NDSValue
		{
			get
			{
				return this._NDSValue;
			}
			set
			{
				if ((this._NDSValue != value))
				{
					this._NDSValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumWithoutNDS", DbType="Money")]
		public System.Nullable<decimal> SumWithoutNDS
		{
			get
			{
				return this._SumWithoutNDS;
			}
			set
			{
				if ((this._SumWithoutNDS != value))
				{
					this._SumWithoutNDS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="NVarChar(256)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencySum", DbType="Money")]
		public System.Nullable<decimal> CurrencySum
		{
			get
			{
				return this._CurrencySum;
			}
			set
			{
				if ((this._CurrencySum != value))
				{
					this._CurrencySum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRate", DbType="Float")]
		public System.Nullable<double> CurrencyRate
		{
			get
			{
				return this._CurrencyRate;
			}
			set
			{
				if ((this._CurrencyRate != value))
				{
					this._CurrencyRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRateCBPercents", DbType="Float")]
		public System.Nullable<double> CurrencyRateCBPercents
		{
			get
			{
				return this._CurrencyRateCBPercents;
			}
			set
			{
				if ((this._CurrencyRateCBPercents != value))
				{
					this._CurrencyRateCBPercents = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRateTypeId", DbType="TinyInt")]
		public System.Nullable<byte> CurrencyRateTypeId
		{
			get
			{
				return this._CurrencyRateTypeId;
			}
			set
			{
				if ((this._CurrencyRateTypeId != value))
				{
					this._CurrencyRateTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorName", DbType="NVarChar(128)")]
		public string AuthorName
		{
			get
			{
				return this._AuthorName;
			}
			set
			{
				if ((this._AuthorName != value))
				{
					this._AuthorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfPerformance", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfPerformance
		{
			get
			{
				return this._DateOfPerformance;
			}
			set
			{
				if ((this._DateOfPerformance != value))
				{
					this._DateOfPerformance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentKindName", DbType="NVarChar(50)")]
		public string PaymentKindName
		{
			get
			{
				return this._PaymentKindName;
			}
			set
			{
				if ((this._PaymentKindName != value))
				{
					this._PaymentKindName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounteragentName", DbType="NVarChar(1024)")]
		public string CounteragentName
		{
			get
			{
				return this._CounteragentName;
			}
			set
			{
				if ((this._CounteragentName != value))
				{
					this._CounteragentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentFilialName", DbType="NVarChar(1024)")]
		public string PaymentFilialName
		{
			get
			{
				return this._PaymentFilialName;
			}
			set
			{
				if ((this._PaymentFilialName != value))
				{
					this._PaymentFilialName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INN", DbType="NVarChar(12)")]
		public string INN
		{
			get
			{
				return this._INN;
			}
			set
			{
				if ((this._INN != value))
				{
					this._INN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPP", DbType="NVarChar(10)")]
		public string KPP
		{
			get
			{
				return this._KPP;
			}
			set
			{
				if ((this._KPP != value))
				{
					this._KPP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalAccount", DbType="NVarChar(255)")]
		public string PersonalAccount
		{
			get
			{
				return this._PersonalAccount;
			}
			set
			{
				if ((this._PersonalAccount != value))
				{
					this._PersonalAccount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(256)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankBIC", DbType="NVarChar(256)")]
		public string BankBIC
		{
			get
			{
				return this._BankBIC;
			}
			set
			{
				if ((this._BankBIC != value))
				{
					this._BankBIC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Substance", DbType="NVarChar(2048)")]
		public string Substance
		{
			get
			{
				return this._Substance;
			}
			set
			{
				if ((this._Substance != value))
				{
					this._Substance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocKindName", DbType="NVarChar(50)")]
		public string DocKindName
		{
			get
			{
				return this._DocKindName;
			}
			set
			{
				if ((this._DocKindName != value))
				{
					this._DocKindName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompensation", DbType="Bit NOT NULL")]
		public bool IsCompensation
		{
			get
			{
				return this._IsCompensation;
			}
			set
			{
				if ((this._IsCompensation != value))
				{
					this._IsCompensation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(1024)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRateTypeParam", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string CurrencyRateTypeParam
		{
			get
			{
				return this._CurrencyRateTypeParam;
			}
			set
			{
				if ((this._CurrencyRateTypeParam != value))
				{
					this._CurrencyRateTypeParam = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRateTypeParamValue", DbType="Float")]
		public System.Nullable<double> CurrencyRateTypeParamValue
		{
			get
			{
				return this._CurrencyRateTypeParamValue;
			}
			set
			{
				if ((this._CurrencyRateTypeParamValue != value))
				{
					this._CurrencyRateTypeParamValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCurrency", DbType="NVarChar(256)")]
		public string PaymentCurrency
		{
			get
			{
				return this._PaymentCurrency;
			}
			set
			{
				if ((this._PaymentCurrency != value))
				{
					this._PaymentCurrency = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_Report_BillDemandTransitionHistory")]
	public partial class V_Report_BillDemandTransitionHistory
	{
		
		private System.Guid _Id;
		
		private System.Guid _BillDemandId;
		
		private string _EmployeeName;
		
		private System.Nullable<System.DateTime> _TransitionTime;
		
		private string _CommandName;
		
		private string _Comment;
		
		private bool _IsPlanTransition;
		
		public V_Report_BillDemandTransitionHistory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDemandId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BillDemandId
		{
			get
			{
				return this._BillDemandId;
			}
			set
			{
				if ((this._BillDemandId != value))
				{
					this._BillDemandId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(128)")]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransitionTime
		{
			get
			{
				return this._TransitionTime;
			}
			set
			{
				if ((this._TransitionTime != value))
				{
					this._TransitionTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandName", DbType="NVarChar(1024)")]
		public string CommandName
		{
			get
			{
				return this._CommandName;
			}
			set
			{
				if ((this._CommandName != value))
				{
					this._CommandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPlanTransition", DbType="Bit NOT NULL")]
		public bool IsPlanTransition
		{
			get
			{
				return this._IsPlanTransition;
			}
			set
			{
				if ((this._IsPlanTransition != value))
				{
					this._IsPlanTransition = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_Report_BillDemandAllocation")]
	public partial class V_Report_BillDemandAllocation
	{
		
		private System.Guid _Id;
		
		private System.Guid _BilldemandId;
		
		private string _CostArticleCode;
		
		private string _CostArticleName;
		
		private string _CfoCode;
		
		private string _CfoName;
		
		private string _FilialName;
		
		private decimal _Sum;
		
		public V_Report_BillDemandAllocation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BilldemandId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BilldemandId
		{
			get
			{
				return this._BilldemandId;
			}
			set
			{
				if ((this._BilldemandId != value))
				{
					this._BilldemandId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostArticleCode", DbType="NVarChar(255)")]
		public string CostArticleCode
		{
			get
			{
				return this._CostArticleCode;
			}
			set
			{
				if ((this._CostArticleCode != value))
				{
					this._CostArticleCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostArticleName", DbType="NVarChar(1024)")]
		public string CostArticleName
		{
			get
			{
				return this._CostArticleName;
			}
			set
			{
				if ((this._CostArticleName != value))
				{
					this._CostArticleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CfoCode", DbType="NVarChar(255)")]
		public string CfoCode
		{
			get
			{
				return this._CfoCode;
			}
			set
			{
				if ((this._CfoCode != value))
				{
					this._CfoCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CfoName", DbType="NVarChar(1024)")]
		public string CfoName
		{
			get
			{
				return this._CfoName;
			}
			set
			{
				if ((this._CfoName != value))
				{
					this._CfoName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilialName", DbType="NVarChar(1024)")]
		public string FilialName
		{
			get
			{
				return this._FilialName;
			}
			set
			{
				if ((this._FilialName != value))
				{
					this._FilialName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Money NOT NULL")]
		public decimal Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this._Sum = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_Report_BillDemandDistribution")]
	public partial class V_Report_BillDemandDistribution
	{
		
		private System.Guid _Id;
		
		private System.Guid _BillDemandId;
		
		private System.Nullable<long> _Number;
		
		private string _CostArticleCode;
		
		private string _CostArticleName;
		
		private string _OPCode;
		
		private string _OPName;
		
		private string _ProjectCode;
		
		private string _ProjectName;
		
		private decimal _Sum;
		
		public V_Report_BillDemandDistribution()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDemandId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BillDemandId
		{
			get
			{
				return this._BillDemandId;
			}
			set
			{
				if ((this._BillDemandId != value))
				{
					this._BillDemandId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="BigInt")]
		public System.Nullable<long> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostArticleCode", DbType="NVarChar(255)")]
		public string CostArticleCode
		{
			get
			{
				return this._CostArticleCode;
			}
			set
			{
				if ((this._CostArticleCode != value))
				{
					this._CostArticleCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostArticleName", DbType="NVarChar(1024)")]
		public string CostArticleName
		{
			get
			{
				return this._CostArticleName;
			}
			set
			{
				if ((this._CostArticleName != value))
				{
					this._CostArticleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPCode", DbType="NVarChar(255)")]
		public string OPCode
		{
			get
			{
				return this._OPCode;
			}
			set
			{
				if ((this._OPCode != value))
				{
					this._OPCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPName", DbType="NVarChar(1024)")]
		public string OPName
		{
			get
			{
				return this._OPName;
			}
			set
			{
				if ((this._OPName != value))
				{
					this._OPName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCode", DbType="NVarChar(255)")]
		public string ProjectCode
		{
			get
			{
				return this._ProjectCode;
			}
			set
			{
				if ((this._ProjectCode != value))
				{
					this._ProjectCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(1024)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this._ProjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Money NOT NULL")]
		public decimal Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this._Sum = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _SecurityTrusteeId;
		
		private System.Nullable<System.Guid> _StructDivisionId;
		
		private System.Guid _BudgetId;
		
		private string _EMail;
		
		private bool _IsDeleted;
		
		private bool _IsProtected;
		
		private bool _IsSendWorkflowNotification;
		
		private EntityRef<Budget> _Budget;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee;
		
		private EntityRef<CFO> _CFO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnSecurityTrusteeIdChanging(System.Nullable<System.Guid> value);
    partial void OnSecurityTrusteeIdChanged();
    partial void OnStructDivisionIdChanging(System.Nullable<System.Guid> value);
    partial void OnStructDivisionIdChanged();
    partial void OnBudgetIdChanging(System.Guid value);
    partial void OnBudgetIdChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnIsProtectedChanging(bool value);
    partial void OnIsProtectedChanged();
    partial void OnIsSendWorkflowNotificationChanging(bool value);
    partial void OnIsSendWorkflowNotificationChanged();
    #endregion
		
		public Employee()
		{
			this._Budget = default(EntityRef<Budget>);
			this._SecurityTrustee = default(EntityRef<SecurityTrustee>);
			this._CFO = default(EntityRef<CFO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityTrusteeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SecurityTrusteeId
		{
			get
			{
				return this._SecurityTrusteeId;
			}
			set
			{
				if ((this._SecurityTrusteeId != value))
				{
					if (this._SecurityTrustee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecurityTrusteeIdChanging(value);
					this.SendPropertyChanging();
					this._SecurityTrusteeId = value;
					this.SendPropertyChanged("SecurityTrusteeId");
					this.OnSecurityTrusteeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructDivisionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StructDivisionId
		{
			get
			{
				return this._StructDivisionId;
			}
			set
			{
				if ((this._StructDivisionId != value))
				{
					if (this._CFO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStructDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._StructDivisionId = value;
					this.SendPropertyChanged("StructDivisionId");
					this.OnStructDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BudgetId
		{
			get
			{
				return this._BudgetId;
			}
			set
			{
				if ((this._BudgetId != value))
				{
					if (this._Budget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudgetIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetId = value;
					this.SendPropertyChanged("BudgetId");
					this.OnBudgetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(255)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProtected", DbType="Bit NOT NULL")]
		public bool IsProtected
		{
			get
			{
				return this._IsProtected;
			}
			set
			{
				if ((this._IsProtected != value))
				{
					this.OnIsProtectedChanging(value);
					this.SendPropertyChanging();
					this._IsProtected = value;
					this.SendPropertyChanged("IsProtected");
					this.OnIsProtectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSendWorkflowNotification", DbType="Bit NOT NULL")]
		public bool IsSendWorkflowNotification
		{
			get
			{
				return this._IsSendWorkflowNotification;
			}
			set
			{
				if ((this._IsSendWorkflowNotification != value))
				{
					this.OnIsSendWorkflowNotificationChanging(value);
					this.SendPropertyChanging();
					this._IsSendWorkflowNotification = value;
					this.SendPropertyChanged("IsSendWorkflowNotification");
					this.OnIsSendWorkflowNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_Employee", Storage="_Budget", ThisKey="BudgetId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Budget Budget
		{
			get
			{
				return this._Budget.Entity;
			}
			set
			{
				Budget previousValue = this._Budget.Entity;
				if (((previousValue != value) 
							|| (this._Budget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Budget.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Budget.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._BudgetId = value.Id;
					}
					else
					{
						this._BudgetId = default(System.Guid);
					}
					this.SendPropertyChanged("Budget");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Employee", Storage="_SecurityTrustee", ThisKey="SecurityTrusteeId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee
		{
			get
			{
				return this._SecurityTrustee.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._SecurityTrustee.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._SecurityTrusteeId = value.Id;
					}
					else
					{
						this._SecurityTrusteeId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SecurityTrustee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CFO_Employee", Storage="_CFO", ThisKey="StructDivisionId", OtherKey="Id", IsForeignKey=true)]
		public CFO CFO
		{
			get
			{
				return this._CFO.Entity;
			}
			set
			{
				CFO previousValue = this._CFO.Entity;
				if (((previousValue != value) 
							|| (this._CFO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CFO.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._CFO.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._StructDivisionId = value.Id;
					}
					else
					{
						this._StructDivisionId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("CFO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowTickets")]
	public partial class WorkflowTicket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _EntityId;
		
		private System.Guid _IdentityId;
		
		private string _ValidStateName;
		
		private bool _IsUsed;
		
		private System.DateTime _ValidUntil;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnEntityIdChanging(System.Guid value);
    partial void OnEntityIdChanged();
    partial void OnIdentityIdChanging(System.Guid value);
    partial void OnIdentityIdChanged();
    partial void OnValidStateNameChanging(string value);
    partial void OnValidStateNameChanged();
    partial void OnIsUsedChanging(bool value);
    partial void OnIsUsedChanged();
    partial void OnValidUntilChanging(System.DateTime value);
    partial void OnValidUntilChanged();
    #endregion
		
		public WorkflowTicket()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					this.OnEntityIdChanging(value);
					this.SendPropertyChanging();
					this._EntityId = value;
					this.SendPropertyChanged("EntityId");
					this.OnEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid IdentityId
		{
			get
			{
				return this._IdentityId;
			}
			set
			{
				if ((this._IdentityId != value))
				{
					this.OnIdentityIdChanging(value);
					this.SendPropertyChanging();
					this._IdentityId = value;
					this.SendPropertyChanged("IdentityId");
					this.OnIdentityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidStateName", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string ValidStateName
		{
			get
			{
				return this._ValidStateName;
			}
			set
			{
				if ((this._ValidStateName != value))
				{
					this.OnValidStateNameChanging(value);
					this.SendPropertyChanging();
					this._ValidStateName = value;
					this.SendPropertyChanged("ValidStateName");
					this.OnValidStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit NOT NULL")]
		public bool IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidUntil", DbType="DateTime NOT NULL")]
		public System.DateTime ValidUntil
		{
			get
			{
				return this._ValidUntil;
			}
			set
			{
				if ((this._ValidUntil != value))
				{
					this.OnValidUntilChanging(value);
					this.SendPropertyChanging();
					this._ValidUntil = value;
					this.SendPropertyChanged("ValidUntil");
					this.OnValidUntilChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecurityRoleRecord")]
	public partial class SecurityRoleRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RoleId;
		
		private System.Guid _PermissionId;
		
		private byte _RecordType;
		
		private EntityRef<SecurityRole> _SecurityRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnPermissionIdChanging(System.Guid value);
    partial void OnPermissionIdChanged();
    partial void OnRecordTypeChanging(byte value);
    partial void OnRecordTypeChanged();
    #endregion
		
		public SecurityRoleRecord()
		{
			this._SecurityRole = default(EntityRef<SecurityRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._SecurityRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordType", DbType="TinyInt NOT NULL")]
		public byte RecordType
		{
			get
			{
				return this._RecordType;
			}
			set
			{
				if ((this._RecordType != value))
				{
					this.OnRecordTypeChanging(value);
					this.SendPropertyChanging();
					this._RecordType = value;
					this.SendPropertyChanged("RecordType");
					this.OnRecordTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityRole_SecurityRoleRecord", Storage="_SecurityRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SecurityRole SecurityRole
		{
			get
			{
				return this._SecurityRole.Entity;
			}
			set
			{
				SecurityRole previousValue = this._SecurityRole.Entity;
				if (((previousValue != value) 
							|| (this._SecurityRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityRole.Entity = null;
						previousValue.SecurityRoleRecords.Remove(this);
					}
					this._SecurityRole.Entity = value;
					if ((value != null))
					{
						value.SecurityRoleRecords.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("SecurityRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkflowSighting")]
	public partial class WorkflowSighting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _EntityId;
		
		private System.Guid _SighterId;
		
		private System.DateTime _SightingTime;
		
		private byte _SightingType;
		
		private System.Guid _ItemId;
		
		private System.Guid _InitiatorId;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnEntityIdChanging(System.Guid value);
    partial void OnEntityIdChanged();
    partial void OnSighterIdChanging(System.Guid value);
    partial void OnSighterIdChanged();
    partial void OnSightingTimeChanging(System.DateTime value);
    partial void OnSightingTimeChanged();
    partial void OnSightingTypeChanging(byte value);
    partial void OnSightingTypeChanged();
    partial void OnItemIdChanging(System.Guid value);
    partial void OnItemIdChanged();
    partial void OnInitiatorIdChanging(System.Guid value);
    partial void OnInitiatorIdChanged();
    #endregion
		
		public WorkflowSighting()
		{
			this._SecurityTrustee = default(EntityRef<SecurityTrustee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					this.OnEntityIdChanging(value);
					this.SendPropertyChanging();
					this._EntityId = value;
					this.SendPropertyChanged("EntityId");
					this.OnEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SighterId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SighterId
		{
			get
			{
				return this._SighterId;
			}
			set
			{
				if ((this._SighterId != value))
				{
					if (this._SecurityTrustee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSighterIdChanging(value);
					this.SendPropertyChanging();
					this._SighterId = value;
					this.SendPropertyChanged("SighterId");
					this.OnSighterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SightingTime", DbType="DateTime NOT NULL")]
		public System.DateTime SightingTime
		{
			get
			{
				return this._SightingTime;
			}
			set
			{
				if ((this._SightingTime != value))
				{
					this.OnSightingTimeChanging(value);
					this.SendPropertyChanging();
					this._SightingTime = value;
					this.SendPropertyChanged("SightingTime");
					this.OnSightingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SightingType", DbType="TinyInt NOT NULL")]
		public byte SightingType
		{
			get
			{
				return this._SightingType;
			}
			set
			{
				if ((this._SightingType != value))
				{
					this.OnSightingTypeChanging(value);
					this.SendPropertyChanging();
					this._SightingType = value;
					this.SendPropertyChanged("SightingType");
					this.OnSightingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitiatorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid InitiatorId
		{
			get
			{
				return this._InitiatorId;
			}
			set
			{
				if ((this._InitiatorId != value))
				{
					this.OnInitiatorIdChanging(value);
					this.SendPropertyChanging();
					this._InitiatorId = value;
					this.SendPropertyChanged("InitiatorId");
					this.OnInitiatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_WorkflowSighting", Storage="_SecurityTrustee", ThisKey="SighterId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee
		{
			get
			{
				return this._SecurityTrustee.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee.Entity = null;
						previousValue.WorkflowSightings.Remove(this);
					}
					this._SecurityTrustee.Entity = value;
					if ((value != null))
					{
						value.WorkflowSightings.Add(this);
						this._SighterId = value.Id;
					}
					else
					{
						this._SighterId = default(System.Guid);
					}
					this.SendPropertyChanged("SecurityTrustee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DemandAdjustment")]
	public partial class DemandAdjustment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _BudgetId;
		
		private long _IDNumber;
		
		private byte _Kind;
		
		private string _Reason;
		
		private System.Guid _CreatorId;
		
		private byte _State;
		
		private System.Nullable<bool> _IsWork;
		
		private System.Nullable<System.Guid> _SourceDemandId;
		
		private System.Nullable<System.Guid> _TargetDemandId;
		
		private decimal _Sum;
		
		private System.Nullable<System.Guid> _BillDemandId;
		
		private System.Nullable<System.Guid> _AuthorStructDivisionId;
		
		private bool _IsPlanValue;
		
		private byte _TypeId;
		
		private System.Nullable<long> _IdNumberAuto;
		
		private System.Nullable<System.DateTime> _TransferDate;
		
		private System.Nullable<System.DateTime> _AgreedDate;
		
		private int _OperationNumber;
		
		private EntitySet<DemandAdjustmentTransitionHistory> _DemandAdjustmentTransitionHistories;
		
		private EntityRef<Demand> _SourceDemand;
		
		private EntityRef<Demand> _TargetDemand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnBudgetIdChanging(System.Nullable<System.Guid> value);
    partial void OnBudgetIdChanged();
    partial void OnIDNumberChanging(long value);
    partial void OnIDNumberChanged();
    partial void OnKindChanging(byte value);
    partial void OnKindChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnCreatorIdChanging(System.Guid value);
    partial void OnCreatorIdChanged();
    partial void OnStateChanging(byte value);
    partial void OnStateChanged();
    partial void OnIsWorkChanging(System.Nullable<bool> value);
    partial void OnIsWorkChanged();
    partial void OnSourceDemandIdChanging(System.Nullable<System.Guid> value);
    partial void OnSourceDemandIdChanged();
    partial void OnTargetDemandIdChanging(System.Nullable<System.Guid> value);
    partial void OnTargetDemandIdChanged();
    partial void OnSumChanging(decimal value);
    partial void OnSumChanged();
    partial void OnBillDemandIdChanging(System.Nullable<System.Guid> value);
    partial void OnBillDemandIdChanged();
    partial void OnAuthorStructDivisionIdChanging(System.Nullable<System.Guid> value);
    partial void OnAuthorStructDivisionIdChanged();
    partial void OnIsPlanValueChanging(bool value);
    partial void OnIsPlanValueChanged();
    partial void OnTypeIdChanging(byte value);
    partial void OnTypeIdChanged();
    partial void OnIdNumberAutoChanging(System.Nullable<long> value);
    partial void OnIdNumberAutoChanged();
    partial void OnTransferDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransferDateChanged();
    partial void OnAgreedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAgreedDateChanged();
    partial void OnOperationNumberChanging(int value);
    partial void OnOperationNumberChanged();
    #endregion
		
		public DemandAdjustment()
		{
			this._DemandAdjustmentTransitionHistories = new EntitySet<DemandAdjustmentTransitionHistory>(new Action<DemandAdjustmentTransitionHistory>(this.attach_DemandAdjustmentTransitionHistories), new Action<DemandAdjustmentTransitionHistory>(this.detach_DemandAdjustmentTransitionHistories));
			this._SourceDemand = default(EntityRef<Demand>);
			this._TargetDemand = default(EntityRef<Demand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BudgetId
		{
			get
			{
				return this._BudgetId;
			}
			set
			{
				if ((this._BudgetId != value))
				{
					this.OnBudgetIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetId = value;
					this.SendPropertyChanged("BudgetId");
					this.OnBudgetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNumber", DbType="BigInt NOT NULL")]
		public long IDNumber
		{
			get
			{
				return this._IDNumber;
			}
			set
			{
				if ((this._IDNumber != value))
				{
					this.OnIDNumberChanging(value);
					this.SendPropertyChanging();
					this._IDNumber = value;
					this.SendPropertyChanged("IDNumber");
					this.OnIDNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="TinyInt NOT NULL")]
		public byte Kind
		{
			get
			{
				return this._Kind;
			}
			set
			{
				if ((this._Kind != value))
				{
					this.OnKindChanging(value);
					this.SendPropertyChanging();
					this._Kind = value;
					this.SendPropertyChanged("Kind");
					this.OnKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(1024)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatorId
		{
			get
			{
				return this._CreatorId;
			}
			set
			{
				if ((this._CreatorId != value))
				{
					this.OnCreatorIdChanging(value);
					this.SendPropertyChanging();
					this._CreatorId = value;
					this.SendPropertyChanged("CreatorId");
					this.OnCreatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="TinyInt NOT NULL")]
		public byte State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWork", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsWork
		{
			get
			{
				return this._IsWork;
			}
			set
			{
				if ((this._IsWork != value))
				{
					this.OnIsWorkChanging(value);
					this.SendPropertyChanging();
					this._IsWork = value;
					this.SendPropertyChanged("IsWork");
					this.OnIsWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceDemandId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SourceDemandId
		{
			get
			{
				return this._SourceDemandId;
			}
			set
			{
				if ((this._SourceDemandId != value))
				{
					if (this._SourceDemand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceDemandIdChanging(value);
					this.SendPropertyChanging();
					this._SourceDemandId = value;
					this.SendPropertyChanged("SourceDemandId");
					this.OnSourceDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDemandId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TargetDemandId
		{
			get
			{
				return this._TargetDemandId;
			}
			set
			{
				if ((this._TargetDemandId != value))
				{
					if (this._TargetDemand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetDemandIdChanging(value);
					this.SendPropertyChanging();
					this._TargetDemandId = value;
					this.SendPropertyChanged("TargetDemandId");
					this.OnTargetDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Money NOT NULL")]
		public decimal Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this.OnSumChanging(value);
					this.SendPropertyChanging();
					this._Sum = value;
					this.SendPropertyChanged("Sum");
					this.OnSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDemandId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BillDemandId
		{
			get
			{
				return this._BillDemandId;
			}
			set
			{
				if ((this._BillDemandId != value))
				{
					this.OnBillDemandIdChanging(value);
					this.SendPropertyChanging();
					this._BillDemandId = value;
					this.SendPropertyChanged("BillDemandId");
					this.OnBillDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorStructDivisionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AuthorStructDivisionId
		{
			get
			{
				return this._AuthorStructDivisionId;
			}
			set
			{
				if ((this._AuthorStructDivisionId != value))
				{
					this.OnAuthorStructDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorStructDivisionId = value;
					this.SendPropertyChanged("AuthorStructDivisionId");
					this.OnAuthorStructDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPlanValue", DbType="Bit NOT NULL")]
		public bool IsPlanValue
		{
			get
			{
				return this._IsPlanValue;
			}
			set
			{
				if ((this._IsPlanValue != value))
				{
					this.OnIsPlanValueChanging(value);
					this.SendPropertyChanging();
					this._IsPlanValue = value;
					this.SendPropertyChanged("IsPlanValue");
					this.OnIsPlanValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="TinyInt NOT NULL")]
		public byte TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNumberAuto", DbType="BigInt")]
		public System.Nullable<long> IdNumberAuto
		{
			get
			{
				return this._IdNumberAuto;
			}
			set
			{
				if ((this._IdNumberAuto != value))
				{
					this.OnIdNumberAutoChanging(value);
					this.SendPropertyChanging();
					this._IdNumberAuto = value;
					this.SendPropertyChanged("IdNumberAuto");
					this.OnIdNumberAutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransferDate
		{
			get
			{
				return this._TransferDate;
			}
			set
			{
				if ((this._TransferDate != value))
				{
					this.OnTransferDateChanging(value);
					this.SendPropertyChanging();
					this._TransferDate = value;
					this.SendPropertyChanged("TransferDate");
					this.OnTransferDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AgreedDate
		{
			get
			{
				return this._AgreedDate;
			}
			set
			{
				if ((this._AgreedDate != value))
				{
					this.OnAgreedDateChanging(value);
					this.SendPropertyChanging();
					this._AgreedDate = value;
					this.SendPropertyChanged("AgreedDate");
					this.OnAgreedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationNumber", DbType="Int NOT NULL")]
		public int OperationNumber
		{
			get
			{
				return this._OperationNumber;
			}
			set
			{
				if ((this._OperationNumber != value))
				{
					this.OnOperationNumberChanging(value);
					this.SendPropertyChanging();
					this._OperationNumber = value;
					this.SendPropertyChanged("OperationNumber");
					this.OnOperationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DemandAdjustment_DemandAdjustmentTransitionHistory", Storage="_DemandAdjustmentTransitionHistories", ThisKey="Id", OtherKey="DemandAdjustmentId")]
		public EntitySet<DemandAdjustmentTransitionHistory> DemandAdjustmentTransitionHistories
		{
			get
			{
				return this._DemandAdjustmentTransitionHistories;
			}
			set
			{
				this._DemandAdjustmentTransitionHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_DemandAdjustment", Storage="_SourceDemand", ThisKey="SourceDemandId", OtherKey="Id", IsForeignKey=true)]
		public Demand SourceDemand
		{
			get
			{
				return this._SourceDemand.Entity;
			}
			set
			{
				Demand previousValue = this._SourceDemand.Entity;
				if (((previousValue != value) 
							|| (this._SourceDemand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SourceDemand.Entity = null;
						previousValue.DemandAdjustments.Remove(this);
					}
					this._SourceDemand.Entity = value;
					if ((value != null))
					{
						value.DemandAdjustments.Add(this);
						this._SourceDemandId = value.Id;
					}
					else
					{
						this._SourceDemandId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SourceDemand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_DemandAdjustment1", Storage="_TargetDemand", ThisKey="TargetDemandId", OtherKey="Id", IsForeignKey=true)]
		public Demand TargetDemand
		{
			get
			{
				return this._TargetDemand.Entity;
			}
			set
			{
				Demand previousValue = this._TargetDemand.Entity;
				if (((previousValue != value) 
							|| (this._TargetDemand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TargetDemand.Entity = null;
						previousValue.DemandAdjustments1.Remove(this);
					}
					this._TargetDemand.Entity = value;
					if ((value != null))
					{
						value.DemandAdjustments1.Add(this);
						this._TargetDemandId = value.Id;
					}
					else
					{
						this._TargetDemandId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("TargetDemand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DemandAdjustmentTransitionHistories(DemandAdjustmentTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.DemandAdjustment = this;
		}
		
		private void detach_DemandAdjustmentTransitionHistories(DemandAdjustmentTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.DemandAdjustment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillDemandTransitionHistory")]
	public partial class BillDemandTransitionHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private byte _InitialStateId;
		
		private byte _DestinationStateId;
		
		private System.Guid _BillDemandId;
		
		private System.Nullable<System.Guid> _CommandId;
		
		private System.Nullable<System.Guid> _TransitionInitiatorId;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _TransitionTime;
		
		private System.Nullable<System.Guid> _TransitionInitiatorStructDivisionId;
		
		private System.Nullable<System.Guid> _TransitionExpectedInitiatorId;
		
		private bool _IsPlanTransition;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _TransitionTimeForSort;
		
		private System.Nullable<System.DateTime> _SightingTime;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee1;
		
		private EntityRef<StructDivision> _StructDivision;
		
		private EntityRef<BillDemandState> _InitialState;
		
		private EntityRef<BillDemandState> _BillDemandState1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnInitialStateIdChanging(byte value);
    partial void OnInitialStateIdChanged();
    partial void OnDestinationStateIdChanging(byte value);
    partial void OnDestinationStateIdChanged();
    partial void OnBillDemandIdChanging(System.Guid value);
    partial void OnBillDemandIdChanged();
    partial void OnCommandIdChanging(System.Nullable<System.Guid> value);
    partial void OnCommandIdChanged();
    partial void OnTransitionInitiatorIdChanging(System.Nullable<System.Guid> value);
    partial void OnTransitionInitiatorIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnTransitionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTransitionTimeChanged();
    partial void OnTransitionInitiatorStructDivisionIdChanging(System.Nullable<System.Guid> value);
    partial void OnTransitionInitiatorStructDivisionIdChanged();
    partial void OnTransitionExpectedInitiatorIdChanging(System.Nullable<System.Guid> value);
    partial void OnTransitionExpectedInitiatorIdChanged();
    partial void OnIsPlanTransitionChanging(bool value);
    partial void OnIsPlanTransitionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTransitionTimeForSortChanging(System.Nullable<System.DateTime> value);
    partial void OnTransitionTimeForSortChanged();
    partial void OnSightingTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSightingTimeChanged();
    #endregion
		
		public BillDemandTransitionHistory()
		{
			this._SecurityTrustee = default(EntityRef<SecurityTrustee>);
			this._SecurityTrustee1 = default(EntityRef<SecurityTrustee>);
			this._StructDivision = default(EntityRef<StructDivision>);
			this._InitialState = default(EntityRef<BillDemandState>);
			this._BillDemandState1 = default(EntityRef<BillDemandState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialStateId", DbType="TinyInt NOT NULL")]
		public byte InitialStateId
		{
			get
			{
				return this._InitialStateId;
			}
			set
			{
				if ((this._InitialStateId != value))
				{
					if (this._InitialState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInitialStateIdChanging(value);
					this.SendPropertyChanging();
					this._InitialStateId = value;
					this.SendPropertyChanged("InitialStateId");
					this.OnInitialStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationStateId", DbType="TinyInt NOT NULL")]
		public byte DestinationStateId
		{
			get
			{
				return this._DestinationStateId;
			}
			set
			{
				if ((this._DestinationStateId != value))
				{
					if (this._BillDemandState1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDestinationStateIdChanging(value);
					this.SendPropertyChanging();
					this._DestinationStateId = value;
					this.SendPropertyChanged("DestinationStateId");
					this.OnDestinationStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDemandId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BillDemandId
		{
			get
			{
				return this._BillDemandId;
			}
			set
			{
				if ((this._BillDemandId != value))
				{
					this.OnBillDemandIdChanging(value);
					this.SendPropertyChanging();
					this._BillDemandId = value;
					this.SendPropertyChanged("BillDemandId");
					this.OnBillDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CommandId
		{
			get
			{
				return this._CommandId;
			}
			set
			{
				if ((this._CommandId != value))
				{
					this.OnCommandIdChanging(value);
					this.SendPropertyChanging();
					this._CommandId = value;
					this.SendPropertyChanged("CommandId");
					this.OnCommandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitionInitiatorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TransitionInitiatorId
		{
			get
			{
				return this._TransitionInitiatorId;
			}
			set
			{
				if ((this._TransitionInitiatorId != value))
				{
					if (this._SecurityTrustee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransitionInitiatorIdChanging(value);
					this.SendPropertyChanging();
					this._TransitionInitiatorId = value;
					this.SendPropertyChanged("TransitionInitiatorId");
					this.OnTransitionInitiatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransitionTime
		{
			get
			{
				return this._TransitionTime;
			}
			set
			{
				if ((this._TransitionTime != value))
				{
					this.OnTransitionTimeChanging(value);
					this.SendPropertyChanging();
					this._TransitionTime = value;
					this.SendPropertyChanged("TransitionTime");
					this.OnTransitionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitionInitiatorStructDivisionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TransitionInitiatorStructDivisionId
		{
			get
			{
				return this._TransitionInitiatorStructDivisionId;
			}
			set
			{
				if ((this._TransitionInitiatorStructDivisionId != value))
				{
					if (this._StructDivision.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransitionInitiatorStructDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._TransitionInitiatorStructDivisionId = value;
					this.SendPropertyChanged("TransitionInitiatorStructDivisionId");
					this.OnTransitionInitiatorStructDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitionExpectedInitiatorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TransitionExpectedInitiatorId
		{
			get
			{
				return this._TransitionExpectedInitiatorId;
			}
			set
			{
				if ((this._TransitionExpectedInitiatorId != value))
				{
					if (this._SecurityTrustee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransitionExpectedInitiatorIdChanging(value);
					this.SendPropertyChanging();
					this._TransitionExpectedInitiatorId = value;
					this.SendPropertyChanged("TransitionExpectedInitiatorId");
					this.OnTransitionExpectedInitiatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPlanTransition", DbType="Bit NOT NULL")]
		public bool IsPlanTransition
		{
			get
			{
				return this._IsPlanTransition;
			}
			set
			{
				if ((this._IsPlanTransition != value))
				{
					this.OnIsPlanTransitionChanging(value);
					this.SendPropertyChanging();
					this._IsPlanTransition = value;
					this.SendPropertyChanged("IsPlanTransition");
					this.OnIsPlanTransitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitionTimeForSort", AutoSync=AutoSync.Always, DbType="DateTime", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TransitionTimeForSort
		{
			get
			{
				return this._TransitionTimeForSort;
			}
			set
			{
				if ((this._TransitionTimeForSort != value))
				{
					this.OnTransitionTimeForSortChanging(value);
					this.SendPropertyChanging();
					this._TransitionTimeForSort = value;
					this.SendPropertyChanged("TransitionTimeForSort");
					this.OnTransitionTimeForSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SightingTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SightingTime
		{
			get
			{
				return this._SightingTime;
			}
			set
			{
				if ((this._SightingTime != value))
				{
					this.OnSightingTimeChanging(value);
					this.SendPropertyChanging();
					this._SightingTime = value;
					this.SendPropertyChanged("SightingTime");
					this.OnSightingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_BillDemandTransitionHistory", Storage="_SecurityTrustee", ThisKey="TransitionInitiatorId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee
		{
			get
			{
				return this._SecurityTrustee.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee.Entity = null;
						previousValue.BillDemandTransitionHistories.Remove(this);
					}
					this._SecurityTrustee.Entity = value;
					if ((value != null))
					{
						value.BillDemandTransitionHistories.Add(this);
						this._TransitionInitiatorId = value.Id;
					}
					else
					{
						this._TransitionInitiatorId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SecurityTrustee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_BillDemandTransitionHistory1", Storage="_SecurityTrustee1", ThisKey="TransitionExpectedInitiatorId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee1
		{
			get
			{
				return this._SecurityTrustee1.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee1.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee1.Entity = null;
						previousValue.BillDemandTransitionHistories1.Remove(this);
					}
					this._SecurityTrustee1.Entity = value;
					if ((value != null))
					{
						value.BillDemandTransitionHistories1.Add(this);
						this._TransitionExpectedInitiatorId = value.Id;
					}
					else
					{
						this._TransitionExpectedInitiatorId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SecurityTrustee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_BillDemandTransitionHistory", Storage="_StructDivision", ThisKey="TransitionInitiatorStructDivisionId", OtherKey="Id", IsForeignKey=true)]
		public StructDivision StructDivision
		{
			get
			{
				return this._StructDivision.Entity;
			}
			set
			{
				StructDivision previousValue = this._StructDivision.Entity;
				if (((previousValue != value) 
							|| (this._StructDivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StructDivision.Entity = null;
						previousValue.BillDemandTransitionHistories.Remove(this);
					}
					this._StructDivision.Entity = value;
					if ((value != null))
					{
						value.BillDemandTransitionHistories.Add(this);
						this._TransitionInitiatorStructDivisionId = value.Id;
					}
					else
					{
						this._TransitionInitiatorStructDivisionId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("StructDivision");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemandState_BillDemandTransitionHistory", Storage="_InitialState", ThisKey="InitialStateId", OtherKey="Id", IsForeignKey=true)]
		public BillDemandState InitialState
		{
			get
			{
				return this._InitialState.Entity;
			}
			set
			{
				BillDemandState previousValue = this._InitialState.Entity;
				if (((previousValue != value) 
							|| (this._InitialState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InitialState.Entity = null;
						previousValue.BillDemandTransitionHistories.Remove(this);
					}
					this._InitialState.Entity = value;
					if ((value != null))
					{
						value.BillDemandTransitionHistories.Add(this);
						this._InitialStateId = value.Id;
					}
					else
					{
						this._InitialStateId = default(byte);
					}
					this.SendPropertyChanged("InitialState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemandState_BillDemandTransitionHistory1", Storage="_BillDemandState1", ThisKey="DestinationStateId", OtherKey="Id", IsForeignKey=true)]
		public BillDemandState BillDemandState1
		{
			get
			{
				return this._BillDemandState1.Entity;
			}
			set
			{
				BillDemandState previousValue = this._BillDemandState1.Entity;
				if (((previousValue != value) 
							|| (this._BillDemandState1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillDemandState1.Entity = null;
						previousValue.BillDemandTransitionHistories1.Remove(this);
					}
					this._BillDemandState1.Entity = value;
					if ((value != null))
					{
						value.BillDemandTransitionHistories1.Add(this);
						this._DestinationStateId = value.Id;
					}
					else
					{
						this._DestinationStateId = default(byte);
					}
					this.SendPropertyChanged("BillDemandState1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DemandStatusInternal")]
	public partial class DemandStatusInternal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Id;
		
		private string _Name;
		
		private byte _Order;
		
		private EntitySet<DemandTransitionHistory> _DemandTransitionHistories;
		
		private EntitySet<DemandTransitionHistory> _DemandTransitionHistories1;
		
		private EntitySet<Demand> _Demands;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(byte value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOrderChanging(byte value);
    partial void OnOrderChanged();
    #endregion
		
		public DemandStatusInternal()
		{
			this._DemandTransitionHistories = new EntitySet<DemandTransitionHistory>(new Action<DemandTransitionHistory>(this.attach_DemandTransitionHistories), new Action<DemandTransitionHistory>(this.detach_DemandTransitionHistories));
			this._DemandTransitionHistories1 = new EntitySet<DemandTransitionHistory>(new Action<DemandTransitionHistory>(this.attach_DemandTransitionHistories1), new Action<DemandTransitionHistory>(this.detach_DemandTransitionHistories1));
			this._Demands = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands), new Action<Demand>(this.detach_Demands));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="TinyInt NOT NULL")]
		public byte Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DemandStatusInternal_DemandTransitionHistory", Storage="_DemandTransitionHistories", ThisKey="Id", OtherKey="InitialStateId")]
		public EntitySet<DemandTransitionHistory> DemandTransitionHistories
		{
			get
			{
				return this._DemandTransitionHistories;
			}
			set
			{
				this._DemandTransitionHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DemandStatusInternal_DemandTransitionHistory1", Storage="_DemandTransitionHistories1", ThisKey="Id", OtherKey="DestinationStateId")]
		public EntitySet<DemandTransitionHistory> DemandTransitionHistories1
		{
			get
			{
				return this._DemandTransitionHistories1;
			}
			set
			{
				this._DemandTransitionHistories1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DemandStatusInternal_Demand", Storage="_Demands", ThisKey="Id", OtherKey="InternalStatusId")]
		public EntitySet<Demand> Demands
		{
			get
			{
				return this._Demands;
			}
			set
			{
				this._Demands.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DemandTransitionHistories(DemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.InitialState = this;
		}
		
		private void detach_DemandTransitionHistories(DemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.InitialState = null;
		}
		
		private void attach_DemandTransitionHistories1(DemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.DemandStatusInternal1 = this;
		}
		
		private void detach_DemandTransitionHistories1(DemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.DemandStatusInternal1 = null;
		}
		
		private void attach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.DemandStatusInternal = this;
		}
		
		private void detach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.DemandStatusInternal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillDemandState")]
	public partial class BillDemandState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Id;
		
		private string _Name;
		
		private byte _Order;
		
		private EntitySet<BillDemandTransitionHistory> _BillDemandTransitionHistories;
		
		private EntitySet<BillDemandTransitionHistory> _BillDemandTransitionHistories1;
		
		private EntitySet<BillDemand> _BillDemands;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(byte value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOrderChanging(byte value);
    partial void OnOrderChanged();
    #endregion
		
		public BillDemandState()
		{
			this._BillDemandTransitionHistories = new EntitySet<BillDemandTransitionHistory>(new Action<BillDemandTransitionHistory>(this.attach_BillDemandTransitionHistories), new Action<BillDemandTransitionHistory>(this.detach_BillDemandTransitionHistories));
			this._BillDemandTransitionHistories1 = new EntitySet<BillDemandTransitionHistory>(new Action<BillDemandTransitionHistory>(this.attach_BillDemandTransitionHistories1), new Action<BillDemandTransitionHistory>(this.detach_BillDemandTransitionHistories1));
			this._BillDemands = new EntitySet<BillDemand>(new Action<BillDemand>(this.attach_BillDemands), new Action<BillDemand>(this.detach_BillDemands));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="TinyInt NOT NULL")]
		public byte Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemandState_BillDemandTransitionHistory", Storage="_BillDemandTransitionHistories", ThisKey="Id", OtherKey="InitialStateId")]
		public EntitySet<BillDemandTransitionHistory> BillDemandTransitionHistories
		{
			get
			{
				return this._BillDemandTransitionHistories;
			}
			set
			{
				this._BillDemandTransitionHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemandState_BillDemandTransitionHistory1", Storage="_BillDemandTransitionHistories1", ThisKey="Id", OtherKey="DestinationStateId")]
		public EntitySet<BillDemandTransitionHistory> BillDemandTransitionHistories1
		{
			get
			{
				return this._BillDemandTransitionHistories1;
			}
			set
			{
				this._BillDemandTransitionHistories1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemandState_BillDemand", Storage="_BillDemands", ThisKey="Id", OtherKey="BillDemandStateId")]
		public EntitySet<BillDemand> BillDemands
		{
			get
			{
				return this._BillDemands;
			}
			set
			{
				this._BillDemands.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillDemandTransitionHistories(BillDemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.InitialState = this;
		}
		
		private void detach_BillDemandTransitionHistories(BillDemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.InitialState = null;
		}
		
		private void attach_BillDemandTransitionHistories1(BillDemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.BillDemandState1 = this;
		}
		
		private void detach_BillDemandTransitionHistories1(BillDemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.BillDemandState1 = null;
		}
		
		private void attach_BillDemands(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.BillDemandState = this;
		}
		
		private void detach_BillDemands(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.BillDemandState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DemandAdjustmentState")]
	public partial class DemandAdjustmentState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Id;
		
		private string _Name;
		
		private byte _Order;
		
		private EntitySet<DemandAdjustmentTransitionHistory> _DemandAdjustmentTransitionHistories;
		
		private EntitySet<DemandAdjustmentTransitionHistory> _DemandAdjustmentTransitionHistories1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(byte value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOrderChanging(byte value);
    partial void OnOrderChanged();
    #endregion
		
		public DemandAdjustmentState()
		{
			this._DemandAdjustmentTransitionHistories = new EntitySet<DemandAdjustmentTransitionHistory>(new Action<DemandAdjustmentTransitionHistory>(this.attach_DemandAdjustmentTransitionHistories), new Action<DemandAdjustmentTransitionHistory>(this.detach_DemandAdjustmentTransitionHistories));
			this._DemandAdjustmentTransitionHistories1 = new EntitySet<DemandAdjustmentTransitionHistory>(new Action<DemandAdjustmentTransitionHistory>(this.attach_DemandAdjustmentTransitionHistories1), new Action<DemandAdjustmentTransitionHistory>(this.detach_DemandAdjustmentTransitionHistories1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="TinyInt NOT NULL")]
		public byte Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DemandAdjustmentState_DemandAdjustmentTransitionHistory", Storage="_DemandAdjustmentTransitionHistories", ThisKey="Id", OtherKey="InitialStateId")]
		public EntitySet<DemandAdjustmentTransitionHistory> DemandAdjustmentTransitionHistories
		{
			get
			{
				return this._DemandAdjustmentTransitionHistories;
			}
			set
			{
				this._DemandAdjustmentTransitionHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DemandAdjustmentState_DemandAdjustmentTransitionHistory1", Storage="_DemandAdjustmentTransitionHistories1", ThisKey="Id", OtherKey="DestinationStateId")]
		public EntitySet<DemandAdjustmentTransitionHistory> DemandAdjustmentTransitionHistories1
		{
			get
			{
				return this._DemandAdjustmentTransitionHistories1;
			}
			set
			{
				this._DemandAdjustmentTransitionHistories1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DemandAdjustmentTransitionHistories(DemandAdjustmentTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.InitialState = this;
		}
		
		private void detach_DemandAdjustmentTransitionHistories(DemandAdjustmentTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.InitialState = null;
		}
		
		private void attach_DemandAdjustmentTransitionHistories1(DemandAdjustmentTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.DemandAdjustmentState1 = this;
		}
		
		private void detach_DemandAdjustmentTransitionHistories1(DemandAdjustmentTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.DemandAdjustmentState1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostArticle")]
	public partial class CostArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private string _Name;
		
		private string _Code;
		
		private System.Guid _BudgetVersionId;
		
		private string _CodeVersion;
		
		private bool _IsDeleted;
		
		private System.Nullable<char> _Balance;
		
		private string _GroupCode;
		
		private string _GroupName;
		
		private string _B_KIND;
		
		private string _KIND;
		
		private bool _IsProtected;
		
		private string _POS;
		
		private string _CapOp;
		
		private string _Comment;
		
		private System.Nullable<System.Guid> _ExecutorId;
		
		private System.Nullable<System.Guid> _ManagerId;
		
		private System.Nullable<System.Guid> _ModifiedEmployeeId;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<System.Guid> _LimitId;
		
		private bool _AlwaysConfirmInGO;
		
		private bool _AllowPlaningForPP;
		
		private bool _AllowPlaningForFilial;
		
		private bool _AllowPlaningForOP;
		
		private bool _AllowPlaningForBusinessBlock;
		
		private bool _AllowPlaningForChildCompany;
		
		private bool _AlwaysConfirmInGOOnNormative;
		
		private EntitySet<ExpertCostArticle> _ExpertCostArticles;
		
		private EntitySet<BillDemandAllocation> _BillDemandAllocations;
		
		private EntitySet<CostArticle> _CostArticles;
		
		private EntitySet<Demand> _Demands;
		
		private EntityRef<BudgetVersion> _BudgetVersion;
		
		private EntityRef<CostArticle> _CostArticle1;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee;
		
		private EntityRef<Limit> _Limit;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee1;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnParentIdChanging(System.Nullable<System.Guid> value);
    partial void OnParentIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnBudgetVersionIdChanging(System.Guid value);
    partial void OnBudgetVersionIdChanged();
    partial void OnCodeVersionChanging(string value);
    partial void OnCodeVersionChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnBalanceChanging(System.Nullable<char> value);
    partial void OnBalanceChanged();
    partial void OnGroupCodeChanging(string value);
    partial void OnGroupCodeChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnB_KINDChanging(string value);
    partial void OnB_KINDChanged();
    partial void OnKINDChanging(string value);
    partial void OnKINDChanged();
    partial void OnIsProtectedChanging(bool value);
    partial void OnIsProtectedChanged();
    partial void OnPOSChanging(string value);
    partial void OnPOSChanged();
    partial void OnCapOpChanging(string value);
    partial void OnCapOpChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnExecutorIdChanging(System.Nullable<System.Guid> value);
    partial void OnExecutorIdChanged();
    partial void OnManagerIdChanging(System.Nullable<System.Guid> value);
    partial void OnManagerIdChanged();
    partial void OnModifiedEmployeeIdChanging(System.Nullable<System.Guid> value);
    partial void OnModifiedEmployeeIdChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnLimitIdChanging(System.Nullable<System.Guid> value);
    partial void OnLimitIdChanged();
    partial void OnAlwaysConfirmInGOChanging(bool value);
    partial void OnAlwaysConfirmInGOChanged();
    partial void OnAllowPlaningForPPChanging(bool value);
    partial void OnAllowPlaningForPPChanged();
    partial void OnAllowPlaningForFilialChanging(bool value);
    partial void OnAllowPlaningForFilialChanged();
    partial void OnAllowPlaningForOPChanging(bool value);
    partial void OnAllowPlaningForOPChanged();
    partial void OnAllowPlaningForBusinessBlockChanging(bool value);
    partial void OnAllowPlaningForBusinessBlockChanged();
    partial void OnAllowPlaningForChildCompanyChanging(bool value);
    partial void OnAllowPlaningForChildCompanyChanged();
    partial void OnAlwaysConfirmInGOOnNormativeChanging(bool value);
    partial void OnAlwaysConfirmInGOOnNormativeChanged();
    #endregion
		
		public CostArticle()
		{
			this._ExpertCostArticles = new EntitySet<ExpertCostArticle>(new Action<ExpertCostArticle>(this.attach_ExpertCostArticles), new Action<ExpertCostArticle>(this.detach_ExpertCostArticles));
			this._BillDemandAllocations = new EntitySet<BillDemandAllocation>(new Action<BillDemandAllocation>(this.attach_BillDemandAllocations), new Action<BillDemandAllocation>(this.detach_BillDemandAllocations));
			this._CostArticles = new EntitySet<CostArticle>(new Action<CostArticle>(this.attach_CostArticles), new Action<CostArticle>(this.detach_CostArticles));
			this._Demands = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands), new Action<Demand>(this.detach_Demands));
			this._BudgetVersion = default(EntityRef<BudgetVersion>);
			this._CostArticle1 = default(EntityRef<CostArticle>);
			this._SecurityTrustee = default(EntityRef<SecurityTrustee>);
			this._Limit = default(EntityRef<Limit>);
			this._SecurityTrustee1 = default(EntityRef<SecurityTrustee>);
			this._SecurityTrustee2 = default(EntityRef<SecurityTrustee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._CostArticle1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetVersionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BudgetVersionId
		{
			get
			{
				return this._BudgetVersionId;
			}
			set
			{
				if ((this._BudgetVersionId != value))
				{
					if (this._BudgetVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudgetVersionIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetVersionId = value;
					this.SendPropertyChanged("BudgetVersionId");
					this.OnBudgetVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeVersion", DbType="NVarChar(255)")]
		public string CodeVersion
		{
			get
			{
				return this._CodeVersion;
			}
			set
			{
				if ((this._CodeVersion != value))
				{
					this.OnCodeVersionChanging(value);
					this.SendPropertyChanging();
					this._CodeVersion = value;
					this.SendPropertyChanged("CodeVersion");
					this.OnCodeVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Char(1)")]
		public System.Nullable<char> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupCode", DbType="NVarChar(255)")]
		public string GroupCode
		{
			get
			{
				return this._GroupCode;
			}
			set
			{
				if ((this._GroupCode != value))
				{
					this.OnGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._GroupCode = value;
					this.SendPropertyChanged("GroupCode");
					this.OnGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(1024)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_KIND", DbType="NVarChar(255)")]
		public string B_KIND
		{
			get
			{
				return this._B_KIND;
			}
			set
			{
				if ((this._B_KIND != value))
				{
					this.OnB_KINDChanging(value);
					this.SendPropertyChanging();
					this._B_KIND = value;
					this.SendPropertyChanged("B_KIND");
					this.OnB_KINDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KIND", DbType="NVarChar(255)")]
		public string KIND
		{
			get
			{
				return this._KIND;
			}
			set
			{
				if ((this._KIND != value))
				{
					this.OnKINDChanging(value);
					this.SendPropertyChanging();
					this._KIND = value;
					this.SendPropertyChanged("KIND");
					this.OnKINDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProtected", DbType="Bit NOT NULL")]
		public bool IsProtected
		{
			get
			{
				return this._IsProtected;
			}
			set
			{
				if ((this._IsProtected != value))
				{
					this.OnIsProtectedChanging(value);
					this.SendPropertyChanging();
					this._IsProtected = value;
					this.SendPropertyChanged("IsProtected");
					this.OnIsProtectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POS", DbType="NVarChar(255)")]
		public string POS
		{
			get
			{
				return this._POS;
			}
			set
			{
				if ((this._POS != value))
				{
					this.OnPOSChanging(value);
					this.SendPropertyChanging();
					this._POS = value;
					this.SendPropertyChanged("POS");
					this.OnPOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapOp", DbType="NVarChar(10)")]
		public string CapOp
		{
			get
			{
				return this._CapOp;
			}
			set
			{
				if ((this._CapOp != value))
				{
					this.OnCapOpChanging(value);
					this.SendPropertyChanging();
					this._CapOp = value;
					this.SendPropertyChanged("CapOp");
					this.OnCapOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ExecutorId
		{
			get
			{
				return this._ExecutorId;
			}
			set
			{
				if ((this._ExecutorId != value))
				{
					if (this._SecurityTrustee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExecutorIdChanging(value);
					this.SendPropertyChanging();
					this._ExecutorId = value;
					this.SendPropertyChanged("ExecutorId");
					this.OnExecutorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ManagerId
		{
			get
			{
				return this._ManagerId;
			}
			set
			{
				if ((this._ManagerId != value))
				{
					if (this._SecurityTrustee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ManagerId = value;
					this.SendPropertyChanged("ManagerId");
					this.OnManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedEmployeeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ModifiedEmployeeId
		{
			get
			{
				return this._ModifiedEmployeeId;
			}
			set
			{
				if ((this._ModifiedEmployeeId != value))
				{
					if (this._SecurityTrustee2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModifiedEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._ModifiedEmployeeId = value;
					this.SendPropertyChanged("ModifiedEmployeeId");
					this.OnModifiedEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> LimitId
		{
			get
			{
				return this._LimitId;
			}
			set
			{
				if ((this._LimitId != value))
				{
					if (this._Limit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLimitIdChanging(value);
					this.SendPropertyChanging();
					this._LimitId = value;
					this.SendPropertyChanged("LimitId");
					this.OnLimitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlwaysConfirmInGO", DbType="Bit NOT NULL")]
		public bool AlwaysConfirmInGO
		{
			get
			{
				return this._AlwaysConfirmInGO;
			}
			set
			{
				if ((this._AlwaysConfirmInGO != value))
				{
					this.OnAlwaysConfirmInGOChanging(value);
					this.SendPropertyChanging();
					this._AlwaysConfirmInGO = value;
					this.SendPropertyChanged("AlwaysConfirmInGO");
					this.OnAlwaysConfirmInGOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowPlaningForPP", DbType="Bit NOT NULL")]
		public bool AllowPlaningForPP
		{
			get
			{
				return this._AllowPlaningForPP;
			}
			set
			{
				if ((this._AllowPlaningForPP != value))
				{
					this.OnAllowPlaningForPPChanging(value);
					this.SendPropertyChanging();
					this._AllowPlaningForPP = value;
					this.SendPropertyChanged("AllowPlaningForPP");
					this.OnAllowPlaningForPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowPlaningForFilial", DbType="Bit NOT NULL")]
		public bool AllowPlaningForFilial
		{
			get
			{
				return this._AllowPlaningForFilial;
			}
			set
			{
				if ((this._AllowPlaningForFilial != value))
				{
					this.OnAllowPlaningForFilialChanging(value);
					this.SendPropertyChanging();
					this._AllowPlaningForFilial = value;
					this.SendPropertyChanged("AllowPlaningForFilial");
					this.OnAllowPlaningForFilialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowPlaningForOP", DbType="Bit NOT NULL")]
		public bool AllowPlaningForOP
		{
			get
			{
				return this._AllowPlaningForOP;
			}
			set
			{
				if ((this._AllowPlaningForOP != value))
				{
					this.OnAllowPlaningForOPChanging(value);
					this.SendPropertyChanging();
					this._AllowPlaningForOP = value;
					this.SendPropertyChanged("AllowPlaningForOP");
					this.OnAllowPlaningForOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowPlaningForBusinessBlock", DbType="Bit NOT NULL")]
		public bool AllowPlaningForBusinessBlock
		{
			get
			{
				return this._AllowPlaningForBusinessBlock;
			}
			set
			{
				if ((this._AllowPlaningForBusinessBlock != value))
				{
					this.OnAllowPlaningForBusinessBlockChanging(value);
					this.SendPropertyChanging();
					this._AllowPlaningForBusinessBlock = value;
					this.SendPropertyChanged("AllowPlaningForBusinessBlock");
					this.OnAllowPlaningForBusinessBlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowPlaningForChildCompany", DbType="Bit NOT NULL")]
		public bool AllowPlaningForChildCompany
		{
			get
			{
				return this._AllowPlaningForChildCompany;
			}
			set
			{
				if ((this._AllowPlaningForChildCompany != value))
				{
					this.OnAllowPlaningForChildCompanyChanging(value);
					this.SendPropertyChanging();
					this._AllowPlaningForChildCompany = value;
					this.SendPropertyChanged("AllowPlaningForChildCompany");
					this.OnAllowPlaningForChildCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlwaysConfirmInGOOnNormative", DbType="Bit NOT NULL")]
		public bool AlwaysConfirmInGOOnNormative
		{
			get
			{
				return this._AlwaysConfirmInGOOnNormative;
			}
			set
			{
				if ((this._AlwaysConfirmInGOOnNormative != value))
				{
					this.OnAlwaysConfirmInGOOnNormativeChanging(value);
					this.SendPropertyChanging();
					this._AlwaysConfirmInGOOnNormative = value;
					this.SendPropertyChanged("AlwaysConfirmInGOOnNormative");
					this.OnAlwaysConfirmInGOOnNormativeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostArticle_ExpertCostArticle", Storage="_ExpertCostArticles", ThisKey="Id", OtherKey="CostArticleId")]
		public EntitySet<ExpertCostArticle> ExpertCostArticles
		{
			get
			{
				return this._ExpertCostArticles;
			}
			set
			{
				this._ExpertCostArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostArticle_BillDemandAllocation", Storage="_BillDemandAllocations", ThisKey="Id", OtherKey="CostArticleId")]
		public EntitySet<BillDemandAllocation> BillDemandAllocations
		{
			get
			{
				return this._BillDemandAllocations;
			}
			set
			{
				this._BillDemandAllocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostArticle_CostArticle", Storage="_CostArticles", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<CostArticle> CostArticles
		{
			get
			{
				return this._CostArticles;
			}
			set
			{
				this._CostArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostArticle_Demand", Storage="_Demands", ThisKey="Id", OtherKey="CostArticleId")]
		public EntitySet<Demand> Demands
		{
			get
			{
				return this._Demands;
			}
			set
			{
				this._Demands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetVersion_CostArticle", Storage="_BudgetVersion", ThisKey="BudgetVersionId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BudgetVersion BudgetVersion
		{
			get
			{
				return this._BudgetVersion.Entity;
			}
			set
			{
				BudgetVersion previousValue = this._BudgetVersion.Entity;
				if (((previousValue != value) 
							|| (this._BudgetVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BudgetVersion.Entity = null;
						previousValue.CostArticles.Remove(this);
					}
					this._BudgetVersion.Entity = value;
					if ((value != null))
					{
						value.CostArticles.Add(this);
						this._BudgetVersionId = value.Id;
					}
					else
					{
						this._BudgetVersionId = default(System.Guid);
					}
					this.SendPropertyChanged("BudgetVersion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostArticle_CostArticle", Storage="_CostArticle1", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public CostArticle CostArticle1
		{
			get
			{
				return this._CostArticle1.Entity;
			}
			set
			{
				CostArticle previousValue = this._CostArticle1.Entity;
				if (((previousValue != value) 
							|| (this._CostArticle1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CostArticle1.Entity = null;
						previousValue.CostArticles.Remove(this);
					}
					this._CostArticle1.Entity = value;
					if ((value != null))
					{
						value.CostArticles.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("CostArticle1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_CostArticle", Storage="_SecurityTrustee", ThisKey="ExecutorId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee
		{
			get
			{
				return this._SecurityTrustee.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee.Entity = null;
						previousValue.CostArticles.Remove(this);
					}
					this._SecurityTrustee.Entity = value;
					if ((value != null))
					{
						value.CostArticles.Add(this);
						this._ExecutorId = value.Id;
					}
					else
					{
						this._ExecutorId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SecurityTrustee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Limit_CostArticle", Storage="_Limit", ThisKey="LimitId", OtherKey="Id", IsForeignKey=true)]
		public Limit Limit
		{
			get
			{
				return this._Limit.Entity;
			}
			set
			{
				Limit previousValue = this._Limit.Entity;
				if (((previousValue != value) 
							|| (this._Limit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Limit.Entity = null;
						previousValue.CostArticles.Remove(this);
					}
					this._Limit.Entity = value;
					if ((value != null))
					{
						value.CostArticles.Add(this);
						this._LimitId = value.Id;
					}
					else
					{
						this._LimitId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Limit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_CostArticle1", Storage="_SecurityTrustee1", ThisKey="ManagerId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee1
		{
			get
			{
				return this._SecurityTrustee1.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee1.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee1.Entity = null;
						previousValue.CostArticles1.Remove(this);
					}
					this._SecurityTrustee1.Entity = value;
					if ((value != null))
					{
						value.CostArticles1.Add(this);
						this._ManagerId = value.Id;
					}
					else
					{
						this._ManagerId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SecurityTrustee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_CostArticle2", Storage="_SecurityTrustee2", ThisKey="ModifiedEmployeeId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee2
		{
			get
			{
				return this._SecurityTrustee2.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee2.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee2.Entity = null;
						previousValue.CostArticles2.Remove(this);
					}
					this._SecurityTrustee2.Entity = value;
					if ((value != null))
					{
						value.CostArticles2.Add(this);
						this._ModifiedEmployeeId = value.Id;
					}
					else
					{
						this._ModifiedEmployeeId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SecurityTrustee2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExpertCostArticles(ExpertCostArticle entity)
		{
			this.SendPropertyChanging();
			entity.CostArticle = this;
		}
		
		private void detach_ExpertCostArticles(ExpertCostArticle entity)
		{
			this.SendPropertyChanging();
			entity.CostArticle = null;
		}
		
		private void attach_BillDemandAllocations(BillDemandAllocation entity)
		{
			this.SendPropertyChanging();
			entity.CostArticle = this;
		}
		
		private void detach_BillDemandAllocations(BillDemandAllocation entity)
		{
			this.SendPropertyChanging();
			entity.CostArticle = null;
		}
		
		private void attach_CostArticles(CostArticle entity)
		{
			this.SendPropertyChanging();
			entity.CostArticle1 = this;
		}
		
		private void detach_CostArticles(CostArticle entity)
		{
			this.SendPropertyChanging();
			entity.CostArticle1 = null;
		}
		
		private void attach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.CostArticle = this;
		}
		
		private void detach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.CostArticle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Demand")]
	public partial class Demand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Description;
		
		private System.Nullable<System.Guid> _CostArticleId;
		
		private System.Nullable<System.Guid> _ProjectId;
		
		private System.Nullable<System.Guid> _CounteragentId;
		
		private System.Nullable<System.Guid> _GoodsTypeId;
		
		private System.Nullable<System.Guid> _ExecutorId;
		
		private System.Nullable<System.Guid> _DefenderId;
		
		private bool _IsActive;
		
		private System.Nullable<System.Guid> _InitiatorStructId;
		
		private System.Nullable<System.Guid> _ExecutorStructId;
		
		private System.Nullable<System.Guid> _BusinessBlockId;
		
		private System.Nullable<System.Guid> _AuthorId;
		
		private long _Number;
		
		private System.Nullable<System.Guid> _WorkflowPositionId;
		
		private System.Nullable<System.Guid> _NegativeEmployeeId;
		
		private string _NegativeComment;
		
		private System.Guid _BudgetVersionId;
		
		private System.Nullable<System.Guid> _BeginDivisionId;
		
		private bool _IsFrozen;
		
		private byte _Direction;
		
		private System.Nullable<bool> _ContractBased;
		
		private bool _IsDeleted;
		
		private System.Nullable<System.Guid> _ITSystemId;
		
		private string _Comment;
		
		private string _CodeVersion;
		
		private System.Nullable<System.Guid> _ManagerId;
		
		private int _Generation;
		
		private System.Nullable<System.Guid> _ActorId;
		
		private bool _IsPrincipal;
		
		private byte _LeasingStatus;
		
		private bool _IsPlanned;
		
		private byte _InternalStatusId;
		
		private byte _ExternalStatusId;
		
		private System.Nullable<int> _Evolution;
		
		private string _Name;
		
		private System.Nullable<bool> _HasAllocation;
		
		private System.Nullable<System.Guid> _CustomerId;
		
		private System.Nullable<System.Guid> _BankId;
		
		private System.Nullable<double> _NDS;
		
		private System.Nullable<System.Guid> _AuthorStructDivisionId;
		
		private System.Nullable<System.Guid> _LimitId;
		
		private System.Nullable<System.Guid> _CategoryExpensesId;
		
		private System.Nullable<byte> _DocKindId;
		
		private bool _IsUnionDemand;
		
		private System.Nullable<System.Guid> _UnionDemandId;
		
		private System.Nullable<bool> _IsNegative;
		
		private System.Nullable<decimal> _SumWithoutNDS;
		
		private System.Nullable<System.Guid> _CustomerCfoId;
		
		private bool _IsBlockCustomerCfo;
		
		private string _MultiAllocationName;
		
		private string _MultiAllocationCode;
		
		private decimal _DiscountQ1;
		
		private decimal _DiscountQ2;
		
		private decimal _DiscountQ3;
		
		private decimal _DiscountQ4;
		
		private System.Nullable<System.Guid> _StaffNormativeId;
		
		private System.Nullable<System.Guid> _PayerFilialId;
		
		private byte _PlanningTypeId;
		
		private System.Nullable<int> _StaffNormativeVersion;
		
		private System.Nullable<System.Guid> _AgreementCfo;
		
		private int _Version;
		
		private decimal _MarginQ1;
		
		private decimal _MarginQ2;
		
		private decimal _MarginQ3;
		
		private decimal _MarginQ4;
		
		private EntitySet<BillDemandDistribution> _BillDemandDistributions;
		
		private EntitySet<BillDemandDistributionReserve> _BillDemandDistributionReserves;
		
		private EntitySet<DemandMoney> _DemandMoneys;
		
		private EntitySet<DemandAllocation> _DemandAllocations;
		
		private EntitySet<DemandPermission> _DemandPermissions;
		
		private EntitySet<DemandTransitionHistory> _DemandTransitionHistories;
		
		private EntitySet<DemandAdjustment> _DemandAdjustments;
		
		private EntitySet<DemandAdjustment> _DemandAdjustments1;
		
		private EntityRef<BudgetVersion> _BudgetVersion;
		
		private EntityRef<CFO> _CFO;
		
		private EntityRef<CFO> _AgreementCFO;
		
		private EntityRef<Counteragent> _Counteragent;
		
		private EntityRef<DemandStatusInternal> _DemandStatusInternal;
		
		private EntityRef<Limit> _Limit;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<SecurityTrustee> _Author;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee1;
		
		private EntityRef<StructDivision> _AuthorStructDivision;
		
		private EntityRef<StructDivision> _ExecutorStructDivision;
		
		private EntityRef<StructDivision> _StructDivision2;
		
		private EntityRef<CostArticle> _CostArticle;
		
		private EntityRef<CFO> _AuthorCFO;
		
		private EntityRef<Filial> _Filial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCostArticleIdChanging(System.Nullable<System.Guid> value);
    partial void OnCostArticleIdChanged();
    partial void OnProjectIdChanging(System.Nullable<System.Guid> value);
    partial void OnProjectIdChanged();
    partial void OnCounteragentIdChanging(System.Nullable<System.Guid> value);
    partial void OnCounteragentIdChanged();
    partial void OnGoodsTypeIdChanging(System.Nullable<System.Guid> value);
    partial void OnGoodsTypeIdChanged();
    partial void OnExecutorIdChanging(System.Nullable<System.Guid> value);
    partial void OnExecutorIdChanged();
    partial void OnDefenderIdChanging(System.Nullable<System.Guid> value);
    partial void OnDefenderIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnInitiatorStructIdChanging(System.Nullable<System.Guid> value);
    partial void OnInitiatorStructIdChanged();
    partial void OnExecutorStructIdChanging(System.Nullable<System.Guid> value);
    partial void OnExecutorStructIdChanged();
    partial void OnBusinessBlockIdChanging(System.Nullable<System.Guid> value);
    partial void OnBusinessBlockIdChanged();
    partial void OnAuthorIdChanging(System.Nullable<System.Guid> value);
    partial void OnAuthorIdChanged();
    partial void OnNumberChanging(long value);
    partial void OnNumberChanged();
    partial void OnWorkflowPositionIdChanging(System.Nullable<System.Guid> value);
    partial void OnWorkflowPositionIdChanged();
    partial void OnNegativeEmployeeIdChanging(System.Nullable<System.Guid> value);
    partial void OnNegativeEmployeeIdChanged();
    partial void OnNegativeCommentChanging(string value);
    partial void OnNegativeCommentChanged();
    partial void OnBudgetVersionIdChanging(System.Guid value);
    partial void OnBudgetVersionIdChanged();
    partial void OnBeginDivisionIdChanging(System.Nullable<System.Guid> value);
    partial void OnBeginDivisionIdChanged();
    partial void OnIsFrozenChanging(bool value);
    partial void OnIsFrozenChanged();
    partial void OnDirectionChanging(byte value);
    partial void OnDirectionChanged();
    partial void OnContractBasedChanging(System.Nullable<bool> value);
    partial void OnContractBasedChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnITSystemIdChanging(System.Nullable<System.Guid> value);
    partial void OnITSystemIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCodeVersionChanging(string value);
    partial void OnCodeVersionChanged();
    partial void OnManagerIdChanging(System.Nullable<System.Guid> value);
    partial void OnManagerIdChanged();
    partial void OnGenerationChanging(int value);
    partial void OnGenerationChanged();
    partial void OnActorIdChanging(System.Nullable<System.Guid> value);
    partial void OnActorIdChanged();
    partial void OnIsPrincipalChanging(bool value);
    partial void OnIsPrincipalChanged();
    partial void OnLeasingStatusChanging(byte value);
    partial void OnLeasingStatusChanged();
    partial void OnIsPlannedChanging(bool value);
    partial void OnIsPlannedChanged();
    partial void OnInternalStatusIdChanging(byte value);
    partial void OnInternalStatusIdChanged();
    partial void OnExternalStatusIdChanging(byte value);
    partial void OnExternalStatusIdChanged();
    partial void OnEvolutionChanging(System.Nullable<int> value);
    partial void OnEvolutionChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHasAllocationChanging(System.Nullable<bool> value);
    partial void OnHasAllocationChanged();
    partial void OnCustomerIdChanging(System.Nullable<System.Guid> value);
    partial void OnCustomerIdChanged();
    partial void OnBankIdChanging(System.Nullable<System.Guid> value);
    partial void OnBankIdChanged();
    partial void OnNDSChanging(System.Nullable<double> value);
    partial void OnNDSChanged();
    partial void OnAuthorStructDivisionIdChanging(System.Nullable<System.Guid> value);
    partial void OnAuthorStructDivisionIdChanged();
    partial void OnLimitIdChanging(System.Nullable<System.Guid> value);
    partial void OnLimitIdChanged();
    partial void OnCategoryExpensesIdChanging(System.Nullable<System.Guid> value);
    partial void OnCategoryExpensesIdChanged();
    partial void OnDocKindIdChanging(System.Nullable<byte> value);
    partial void OnDocKindIdChanged();
    partial void OnIsUnionDemandChanging(bool value);
    partial void OnIsUnionDemandChanged();
    partial void OnUnionDemandIdChanging(System.Nullable<System.Guid> value);
    partial void OnUnionDemandIdChanged();
    partial void OnIsNegativeChanging(System.Nullable<bool> value);
    partial void OnIsNegativeChanged();
    partial void OnSumWithoutNDSChanging(System.Nullable<decimal> value);
    partial void OnSumWithoutNDSChanged();
    partial void OnCustomerCfoIdChanging(System.Nullable<System.Guid> value);
    partial void OnCustomerCfoIdChanged();
    partial void OnIsBlockCustomerCfoChanging(bool value);
    partial void OnIsBlockCustomerCfoChanged();
    partial void OnMultiAllocationNameChanging(string value);
    partial void OnMultiAllocationNameChanged();
    partial void OnMultiAllocationCodeChanging(string value);
    partial void OnMultiAllocationCodeChanged();
    partial void OnDiscountQ1Changing(decimal value);
    partial void OnDiscountQ1Changed();
    partial void OnDiscountQ2Changing(decimal value);
    partial void OnDiscountQ2Changed();
    partial void OnDiscountQ3Changing(decimal value);
    partial void OnDiscountQ3Changed();
    partial void OnDiscountQ4Changing(decimal value);
    partial void OnDiscountQ4Changed();
    partial void OnStaffNormativeIdChanging(System.Nullable<System.Guid> value);
    partial void OnStaffNormativeIdChanged();
    partial void OnPayerFilialIdChanging(System.Nullable<System.Guid> value);
    partial void OnPayerFilialIdChanged();
    partial void OnPlanningTypeIdChanging(byte value);
    partial void OnPlanningTypeIdChanged();
    partial void OnStaffNormativeVersionChanging(System.Nullable<int> value);
    partial void OnStaffNormativeVersionChanged();
    partial void OnAgreementCfoChanging(System.Nullable<System.Guid> value);
    partial void OnAgreementCfoChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnMarginQ1Changing(decimal value);
    partial void OnMarginQ1Changed();
    partial void OnMarginQ2Changing(decimal value);
    partial void OnMarginQ2Changed();
    partial void OnMarginQ3Changing(decimal value);
    partial void OnMarginQ3Changed();
    partial void OnMarginQ4Changing(decimal value);
    partial void OnMarginQ4Changed();
    #endregion
		
		public Demand()
		{
			this._BillDemandDistributions = new EntitySet<BillDemandDistribution>(new Action<BillDemandDistribution>(this.attach_BillDemandDistributions), new Action<BillDemandDistribution>(this.detach_BillDemandDistributions));
			this._BillDemandDistributionReserves = new EntitySet<BillDemandDistributionReserve>(new Action<BillDemandDistributionReserve>(this.attach_BillDemandDistributionReserves), new Action<BillDemandDistributionReserve>(this.detach_BillDemandDistributionReserves));
			this._DemandMoneys = new EntitySet<DemandMoney>(new Action<DemandMoney>(this.attach_DemandMoneys), new Action<DemandMoney>(this.detach_DemandMoneys));
			this._DemandAllocations = new EntitySet<DemandAllocation>(new Action<DemandAllocation>(this.attach_DemandAllocations), new Action<DemandAllocation>(this.detach_DemandAllocations));
			this._DemandPermissions = new EntitySet<DemandPermission>(new Action<DemandPermission>(this.attach_DemandPermissions), new Action<DemandPermission>(this.detach_DemandPermissions));
			this._DemandTransitionHistories = new EntitySet<DemandTransitionHistory>(new Action<DemandTransitionHistory>(this.attach_DemandTransitionHistories), new Action<DemandTransitionHistory>(this.detach_DemandTransitionHistories));
			this._DemandAdjustments = new EntitySet<DemandAdjustment>(new Action<DemandAdjustment>(this.attach_DemandAdjustments), new Action<DemandAdjustment>(this.detach_DemandAdjustments));
			this._DemandAdjustments1 = new EntitySet<DemandAdjustment>(new Action<DemandAdjustment>(this.attach_DemandAdjustments1), new Action<DemandAdjustment>(this.detach_DemandAdjustments1));
			this._BudgetVersion = default(EntityRef<BudgetVersion>);
			this._CFO = default(EntityRef<CFO>);
			this._AgreementCFO = default(EntityRef<CFO>);
			this._Counteragent = default(EntityRef<Counteragent>);
			this._DemandStatusInternal = default(EntityRef<DemandStatusInternal>);
			this._Limit = default(EntityRef<Limit>);
			this._Project = default(EntityRef<Project>);
			this._Author = default(EntityRef<SecurityTrustee>);
			this._SecurityTrustee1 = default(EntityRef<SecurityTrustee>);
			this._AuthorStructDivision = default(EntityRef<StructDivision>);
			this._ExecutorStructDivision = default(EntityRef<StructDivision>);
			this._StructDivision2 = default(EntityRef<StructDivision>);
			this._CostArticle = default(EntityRef<CostArticle>);
			this._AuthorCFO = default(EntityRef<CFO>);
			this._Filial = default(EntityRef<Filial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1024)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostArticleId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CostArticleId
		{
			get
			{
				return this._CostArticleId;
			}
			set
			{
				if ((this._CostArticleId != value))
				{
					if (this._CostArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostArticleIdChanging(value);
					this.SendPropertyChanging();
					this._CostArticleId = value;
					this.SendPropertyChanged("CostArticleId");
					this.OnCostArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounteragentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CounteragentId
		{
			get
			{
				return this._CounteragentId;
			}
			set
			{
				if ((this._CounteragentId != value))
				{
					if (this._Counteragent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCounteragentIdChanging(value);
					this.SendPropertyChanging();
					this._CounteragentId = value;
					this.SendPropertyChanged("CounteragentId");
					this.OnCounteragentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodsTypeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GoodsTypeId
		{
			get
			{
				return this._GoodsTypeId;
			}
			set
			{
				if ((this._GoodsTypeId != value))
				{
					this.OnGoodsTypeIdChanging(value);
					this.SendPropertyChanging();
					this._GoodsTypeId = value;
					this.SendPropertyChanged("GoodsTypeId");
					this.OnGoodsTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ExecutorId
		{
			get
			{
				return this._ExecutorId;
			}
			set
			{
				if ((this._ExecutorId != value))
				{
					this.OnExecutorIdChanging(value);
					this.SendPropertyChanging();
					this._ExecutorId = value;
					this.SendPropertyChanged("ExecutorId");
					this.OnExecutorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefenderId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DefenderId
		{
			get
			{
				return this._DefenderId;
			}
			set
			{
				if ((this._DefenderId != value))
				{
					this.OnDefenderIdChanging(value);
					this.SendPropertyChanging();
					this._DefenderId = value;
					this.SendPropertyChanged("DefenderId");
					this.OnDefenderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitiatorStructId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> InitiatorStructId
		{
			get
			{
				return this._InitiatorStructId;
			}
			set
			{
				if ((this._InitiatorStructId != value))
				{
					this.OnInitiatorStructIdChanging(value);
					this.SendPropertyChanging();
					this._InitiatorStructId = value;
					this.SendPropertyChanged("InitiatorStructId");
					this.OnInitiatorStructIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutorStructId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ExecutorStructId
		{
			get
			{
				return this._ExecutorStructId;
			}
			set
			{
				if ((this._ExecutorStructId != value))
				{
					if (this._ExecutorStructDivision.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExecutorStructIdChanging(value);
					this.SendPropertyChanging();
					this._ExecutorStructId = value;
					this.SendPropertyChanged("ExecutorStructId");
					this.OnExecutorStructIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessBlockId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BusinessBlockId
		{
			get
			{
				return this._BusinessBlockId;
			}
			set
			{
				if ((this._BusinessBlockId != value))
				{
					this.OnBusinessBlockIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessBlockId = value;
					this.SendPropertyChanged("BusinessBlockId");
					this.OnBusinessBlockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AuthorId
		{
			get
			{
				return this._AuthorId;
			}
			set
			{
				if ((this._AuthorId != value))
				{
					if (this._Author.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorId = value;
					this.SendPropertyChanged("AuthorId");
					this.OnAuthorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="BigInt NOT NULL")]
		public long Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowPositionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> WorkflowPositionId
		{
			get
			{
				return this._WorkflowPositionId;
			}
			set
			{
				if ((this._WorkflowPositionId != value))
				{
					this.OnWorkflowPositionIdChanging(value);
					this.SendPropertyChanging();
					this._WorkflowPositionId = value;
					this.SendPropertyChanged("WorkflowPositionId");
					this.OnWorkflowPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NegativeEmployeeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> NegativeEmployeeId
		{
			get
			{
				return this._NegativeEmployeeId;
			}
			set
			{
				if ((this._NegativeEmployeeId != value))
				{
					if (this._SecurityTrustee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNegativeEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._NegativeEmployeeId = value;
					this.SendPropertyChanged("NegativeEmployeeId");
					this.OnNegativeEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NegativeComment", DbType="NVarChar(1024)")]
		public string NegativeComment
		{
			get
			{
				return this._NegativeComment;
			}
			set
			{
				if ((this._NegativeComment != value))
				{
					this.OnNegativeCommentChanging(value);
					this.SendPropertyChanging();
					this._NegativeComment = value;
					this.SendPropertyChanged("NegativeComment");
					this.OnNegativeCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetVersionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BudgetVersionId
		{
			get
			{
				return this._BudgetVersionId;
			}
			set
			{
				if ((this._BudgetVersionId != value))
				{
					if (this._BudgetVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudgetVersionIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetVersionId = value;
					this.SendPropertyChanged("BudgetVersionId");
					this.OnBudgetVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginDivisionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BeginDivisionId
		{
			get
			{
				return this._BeginDivisionId;
			}
			set
			{
				if ((this._BeginDivisionId != value))
				{
					if (this._StructDivision2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBeginDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._BeginDivisionId = value;
					this.SendPropertyChanged("BeginDivisionId");
					this.OnBeginDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFrozen", DbType="Bit NOT NULL")]
		public bool IsFrozen
		{
			get
			{
				return this._IsFrozen;
			}
			set
			{
				if ((this._IsFrozen != value))
				{
					this.OnIsFrozenChanging(value);
					this.SendPropertyChanging();
					this._IsFrozen = value;
					this.SendPropertyChanged("IsFrozen");
					this.OnIsFrozenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="TinyInt NOT NULL")]
		public byte Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractBased", DbType="Bit")]
		public System.Nullable<bool> ContractBased
		{
			get
			{
				return this._ContractBased;
			}
			set
			{
				if ((this._ContractBased != value))
				{
					this.OnContractBasedChanging(value);
					this.SendPropertyChanging();
					this._ContractBased = value;
					this.SendPropertyChanged("ContractBased");
					this.OnContractBasedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITSystemId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ITSystemId
		{
			get
			{
				return this._ITSystemId;
			}
			set
			{
				if ((this._ITSystemId != value))
				{
					this.OnITSystemIdChanging(value);
					this.SendPropertyChanging();
					this._ITSystemId = value;
					this.SendPropertyChanged("ITSystemId");
					this.OnITSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeVersion", DbType="NVarChar(255)")]
		public string CodeVersion
		{
			get
			{
				return this._CodeVersion;
			}
			set
			{
				if ((this._CodeVersion != value))
				{
					this.OnCodeVersionChanging(value);
					this.SendPropertyChanging();
					this._CodeVersion = value;
					this.SendPropertyChanged("CodeVersion");
					this.OnCodeVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ManagerId
		{
			get
			{
				return this._ManagerId;
			}
			set
			{
				if ((this._ManagerId != value))
				{
					this.OnManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ManagerId = value;
					this.SendPropertyChanged("ManagerId");
					this.OnManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Generation", DbType="Int NOT NULL")]
		public int Generation
		{
			get
			{
				return this._Generation;
			}
			set
			{
				if ((this._Generation != value))
				{
					this.OnGenerationChanging(value);
					this.SendPropertyChanging();
					this._Generation = value;
					this.SendPropertyChanged("Generation");
					this.OnGenerationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ActorId
		{
			get
			{
				return this._ActorId;
			}
			set
			{
				if ((this._ActorId != value))
				{
					this.OnActorIdChanging(value);
					this.SendPropertyChanging();
					this._ActorId = value;
					this.SendPropertyChanged("ActorId");
					this.OnActorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrincipal", DbType="Bit NOT NULL")]
		public bool IsPrincipal
		{
			get
			{
				return this._IsPrincipal;
			}
			set
			{
				if ((this._IsPrincipal != value))
				{
					this.OnIsPrincipalChanging(value);
					this.SendPropertyChanging();
					this._IsPrincipal = value;
					this.SendPropertyChanged("IsPrincipal");
					this.OnIsPrincipalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeasingStatus", DbType="TinyInt NOT NULL")]
		public byte LeasingStatus
		{
			get
			{
				return this._LeasingStatus;
			}
			set
			{
				if ((this._LeasingStatus != value))
				{
					this.OnLeasingStatusChanging(value);
					this.SendPropertyChanging();
					this._LeasingStatus = value;
					this.SendPropertyChanged("LeasingStatus");
					this.OnLeasingStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPlanned", DbType="Bit NOT NULL")]
		public bool IsPlanned
		{
			get
			{
				return this._IsPlanned;
			}
			set
			{
				if ((this._IsPlanned != value))
				{
					this.OnIsPlannedChanging(value);
					this.SendPropertyChanging();
					this._IsPlanned = value;
					this.SendPropertyChanged("IsPlanned");
					this.OnIsPlannedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalStatusId", DbType="TinyInt NOT NULL")]
		public byte InternalStatusId
		{
			get
			{
				return this._InternalStatusId;
			}
			set
			{
				if ((this._InternalStatusId != value))
				{
					if (this._DemandStatusInternal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInternalStatusIdChanging(value);
					this.SendPropertyChanging();
					this._InternalStatusId = value;
					this.SendPropertyChanged("InternalStatusId");
					this.OnInternalStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalStatusId", DbType="TinyInt NOT NULL")]
		public byte ExternalStatusId
		{
			get
			{
				return this._ExternalStatusId;
			}
			set
			{
				if ((this._ExternalStatusId != value))
				{
					this.OnExternalStatusIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalStatusId = value;
					this.SendPropertyChanged("ExternalStatusId");
					this.OnExternalStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Evolution", DbType="Int")]
		public System.Nullable<int> Evolution
		{
			get
			{
				return this._Evolution;
			}
			set
			{
				if ((this._Evolution != value))
				{
					this.OnEvolutionChanging(value);
					this.SendPropertyChanging();
					this._Evolution = value;
					this.SendPropertyChanged("Evolution");
					this.OnEvolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", AutoSync=AutoSync.Always, DbType="NVarChar(2000)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAllocation", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> HasAllocation
		{
			get
			{
				return this._HasAllocation;
			}
			set
			{
				if ((this._HasAllocation != value))
				{
					this.OnHasAllocationChanging(value);
					this.SendPropertyChanging();
					this._HasAllocation = value;
					this.SendPropertyChanged("HasAllocation");
					this.OnHasAllocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					this.OnBankIdChanging(value);
					this.SendPropertyChanging();
					this._BankId = value;
					this.SendPropertyChanged("BankId");
					this.OnBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDS", DbType="Float")]
		public System.Nullable<double> NDS
		{
			get
			{
				return this._NDS;
			}
			set
			{
				if ((this._NDS != value))
				{
					this.OnNDSChanging(value);
					this.SendPropertyChanging();
					this._NDS = value;
					this.SendPropertyChanged("NDS");
					this.OnNDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorStructDivisionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AuthorStructDivisionId
		{
			get
			{
				return this._AuthorStructDivisionId;
			}
			set
			{
				if ((this._AuthorStructDivisionId != value))
				{
					if ((this._AuthorStructDivision.HasLoadedOrAssignedValue || this._AuthorCFO.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorStructDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorStructDivisionId = value;
					this.SendPropertyChanged("AuthorStructDivisionId");
					this.OnAuthorStructDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> LimitId
		{
			get
			{
				return this._LimitId;
			}
			set
			{
				if ((this._LimitId != value))
				{
					if (this._Limit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLimitIdChanging(value);
					this.SendPropertyChanging();
					this._LimitId = value;
					this.SendPropertyChanged("LimitId");
					this.OnLimitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryExpensesId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CategoryExpensesId
		{
			get
			{
				return this._CategoryExpensesId;
			}
			set
			{
				if ((this._CategoryExpensesId != value))
				{
					this.OnCategoryExpensesIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryExpensesId = value;
					this.SendPropertyChanged("CategoryExpensesId");
					this.OnCategoryExpensesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocKindId", DbType="TinyInt")]
		public System.Nullable<byte> DocKindId
		{
			get
			{
				return this._DocKindId;
			}
			set
			{
				if ((this._DocKindId != value))
				{
					this.OnDocKindIdChanging(value);
					this.SendPropertyChanging();
					this._DocKindId = value;
					this.SendPropertyChanged("DocKindId");
					this.OnDocKindIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUnionDemand", DbType="Bit NOT NULL")]
		public bool IsUnionDemand
		{
			get
			{
				return this._IsUnionDemand;
			}
			set
			{
				if ((this._IsUnionDemand != value))
				{
					this.OnIsUnionDemandChanging(value);
					this.SendPropertyChanging();
					this._IsUnionDemand = value;
					this.SendPropertyChanged("IsUnionDemand");
					this.OnIsUnionDemandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnionDemandId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UnionDemandId
		{
			get
			{
				return this._UnionDemandId;
			}
			set
			{
				if ((this._UnionDemandId != value))
				{
					this.OnUnionDemandIdChanging(value);
					this.SendPropertyChanging();
					this._UnionDemandId = value;
					this.SendPropertyChanged("UnionDemandId");
					this.OnUnionDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNegative", AutoSync=AutoSync.Always, DbType="Bit", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsNegative
		{
			get
			{
				return this._IsNegative;
			}
			set
			{
				if ((this._IsNegative != value))
				{
					this.OnIsNegativeChanging(value);
					this.SendPropertyChanging();
					this._IsNegative = value;
					this.SendPropertyChanged("IsNegative");
					this.OnIsNegativeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumWithoutNDS", AutoSync=AutoSync.Always, DbType="Money", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> SumWithoutNDS
		{
			get
			{
				return this._SumWithoutNDS;
			}
			set
			{
				if ((this._SumWithoutNDS != value))
				{
					this.OnSumWithoutNDSChanging(value);
					this.SendPropertyChanging();
					this._SumWithoutNDS = value;
					this.SendPropertyChanged("SumWithoutNDS");
					this.OnSumWithoutNDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCfoId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CustomerCfoId
		{
			get
			{
				return this._CustomerCfoId;
			}
			set
			{
				if ((this._CustomerCfoId != value))
				{
					if (this._CFO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerCfoIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerCfoId = value;
					this.SendPropertyChanged("CustomerCfoId");
					this.OnCustomerCfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBlockCustomerCfo", DbType="Bit NOT NULL")]
		public bool IsBlockCustomerCfo
		{
			get
			{
				return this._IsBlockCustomerCfo;
			}
			set
			{
				if ((this._IsBlockCustomerCfo != value))
				{
					this.OnIsBlockCustomerCfoChanging(value);
					this.SendPropertyChanging();
					this._IsBlockCustomerCfo = value;
					this.SendPropertyChanged("IsBlockCustomerCfo");
					this.OnIsBlockCustomerCfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiAllocationName", DbType="NVarChar(256)")]
		public string MultiAllocationName
		{
			get
			{
				return this._MultiAllocationName;
			}
			set
			{
				if ((this._MultiAllocationName != value))
				{
					this.OnMultiAllocationNameChanging(value);
					this.SendPropertyChanging();
					this._MultiAllocationName = value;
					this.SendPropertyChanged("MultiAllocationName");
					this.OnMultiAllocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiAllocationCode", DbType="NVarChar(256)")]
		public string MultiAllocationCode
		{
			get
			{
				return this._MultiAllocationCode;
			}
			set
			{
				if ((this._MultiAllocationCode != value))
				{
					this.OnMultiAllocationCodeChanging(value);
					this.SendPropertyChanging();
					this._MultiAllocationCode = value;
					this.SendPropertyChanged("MultiAllocationCode");
					this.OnMultiAllocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountQ1", DbType="Decimal(18,4) NOT NULL")]
		public decimal DiscountQ1
		{
			get
			{
				return this._DiscountQ1;
			}
			set
			{
				if ((this._DiscountQ1 != value))
				{
					this.OnDiscountQ1Changing(value);
					this.SendPropertyChanging();
					this._DiscountQ1 = value;
					this.SendPropertyChanged("DiscountQ1");
					this.OnDiscountQ1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountQ2", DbType="Decimal(18,4) NOT NULL")]
		public decimal DiscountQ2
		{
			get
			{
				return this._DiscountQ2;
			}
			set
			{
				if ((this._DiscountQ2 != value))
				{
					this.OnDiscountQ2Changing(value);
					this.SendPropertyChanging();
					this._DiscountQ2 = value;
					this.SendPropertyChanged("DiscountQ2");
					this.OnDiscountQ2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountQ3", DbType="Decimal(18,4) NOT NULL")]
		public decimal DiscountQ3
		{
			get
			{
				return this._DiscountQ3;
			}
			set
			{
				if ((this._DiscountQ3 != value))
				{
					this.OnDiscountQ3Changing(value);
					this.SendPropertyChanging();
					this._DiscountQ3 = value;
					this.SendPropertyChanged("DiscountQ3");
					this.OnDiscountQ3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountQ4", DbType="Decimal(18,4) NOT NULL")]
		public decimal DiscountQ4
		{
			get
			{
				return this._DiscountQ4;
			}
			set
			{
				if ((this._DiscountQ4 != value))
				{
					this.OnDiscountQ4Changing(value);
					this.SendPropertyChanging();
					this._DiscountQ4 = value;
					this.SendPropertyChanged("DiscountQ4");
					this.OnDiscountQ4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffNormativeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffNormativeId
		{
			get
			{
				return this._StaffNormativeId;
			}
			set
			{
				if ((this._StaffNormativeId != value))
				{
					this.OnStaffNormativeIdChanging(value);
					this.SendPropertyChanging();
					this._StaffNormativeId = value;
					this.SendPropertyChanged("StaffNormativeId");
					this.OnStaffNormativeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerFilialId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PayerFilialId
		{
			get
			{
				return this._PayerFilialId;
			}
			set
			{
				if ((this._PayerFilialId != value))
				{
					if (this._Filial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayerFilialIdChanging(value);
					this.SendPropertyChanging();
					this._PayerFilialId = value;
					this.SendPropertyChanged("PayerFilialId");
					this.OnPayerFilialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanningTypeId", DbType="TinyInt NOT NULL")]
		public byte PlanningTypeId
		{
			get
			{
				return this._PlanningTypeId;
			}
			set
			{
				if ((this._PlanningTypeId != value))
				{
					this.OnPlanningTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PlanningTypeId = value;
					this.SendPropertyChanged("PlanningTypeId");
					this.OnPlanningTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffNormativeVersion", DbType="Int")]
		public System.Nullable<int> StaffNormativeVersion
		{
			get
			{
				return this._StaffNormativeVersion;
			}
			set
			{
				if ((this._StaffNormativeVersion != value))
				{
					this.OnStaffNormativeVersionChanging(value);
					this.SendPropertyChanging();
					this._StaffNormativeVersion = value;
					this.SendPropertyChanged("StaffNormativeVersion");
					this.OnStaffNormativeVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementCfo", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AgreementCfo
		{
			get
			{
				return this._AgreementCfo;
			}
			set
			{
				if ((this._AgreementCfo != value))
				{
					if (this._AgreementCFO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgreementCfoChanging(value);
					this.SendPropertyChanging();
					this._AgreementCfo = value;
					this.SendPropertyChanged("AgreementCfo");
					this.OnAgreementCfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarginQ1", DbType="Decimal(18,4) NOT NULL")]
		public decimal MarginQ1
		{
			get
			{
				return this._MarginQ1;
			}
			set
			{
				if ((this._MarginQ1 != value))
				{
					this.OnMarginQ1Changing(value);
					this.SendPropertyChanging();
					this._MarginQ1 = value;
					this.SendPropertyChanged("MarginQ1");
					this.OnMarginQ1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarginQ2", DbType="Decimal(18,4) NOT NULL")]
		public decimal MarginQ2
		{
			get
			{
				return this._MarginQ2;
			}
			set
			{
				if ((this._MarginQ2 != value))
				{
					this.OnMarginQ2Changing(value);
					this.SendPropertyChanging();
					this._MarginQ2 = value;
					this.SendPropertyChanged("MarginQ2");
					this.OnMarginQ2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarginQ3", DbType="Decimal(18,4) NOT NULL")]
		public decimal MarginQ3
		{
			get
			{
				return this._MarginQ3;
			}
			set
			{
				if ((this._MarginQ3 != value))
				{
					this.OnMarginQ3Changing(value);
					this.SendPropertyChanging();
					this._MarginQ3 = value;
					this.SendPropertyChanged("MarginQ3");
					this.OnMarginQ3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarginQ4", DbType="Decimal(18,4) NOT NULL")]
		public decimal MarginQ4
		{
			get
			{
				return this._MarginQ4;
			}
			set
			{
				if ((this._MarginQ4 != value))
				{
					this.OnMarginQ4Changing(value);
					this.SendPropertyChanging();
					this._MarginQ4 = value;
					this.SendPropertyChanged("MarginQ4");
					this.OnMarginQ4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_BillDemandDistribution", Storage="_BillDemandDistributions", ThisKey="Id", OtherKey="DemandId")]
		public EntitySet<BillDemandDistribution> BillDemandDistributions
		{
			get
			{
				return this._BillDemandDistributions;
			}
			set
			{
				this._BillDemandDistributions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_BillDemandDistributionReserve", Storage="_BillDemandDistributionReserves", ThisKey="Id", OtherKey="DemandId")]
		public EntitySet<BillDemandDistributionReserve> BillDemandDistributionReserves
		{
			get
			{
				return this._BillDemandDistributionReserves;
			}
			set
			{
				this._BillDemandDistributionReserves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_DemandMoney", Storage="_DemandMoneys", ThisKey="Id", OtherKey="DemandId")]
		public EntitySet<DemandMoney> DemandMoneys
		{
			get
			{
				return this._DemandMoneys;
			}
			set
			{
				this._DemandMoneys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_DemandAllocation", Storage="_DemandAllocations", ThisKey="Id", OtherKey="DemandId")]
		public EntitySet<DemandAllocation> DemandAllocations
		{
			get
			{
				return this._DemandAllocations;
			}
			set
			{
				this._DemandAllocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_DemandPermission", Storage="_DemandPermissions", ThisKey="Id", OtherKey="DemandId")]
		public EntitySet<DemandPermission> DemandPermissions
		{
			get
			{
				return this._DemandPermissions;
			}
			set
			{
				this._DemandPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_DemandTransitionHistory", Storage="_DemandTransitionHistories", ThisKey="Id", OtherKey="DemandId")]
		public EntitySet<DemandTransitionHistory> DemandTransitionHistories
		{
			get
			{
				return this._DemandTransitionHistories;
			}
			set
			{
				this._DemandTransitionHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_DemandAdjustment", Storage="_DemandAdjustments", ThisKey="Id", OtherKey="SourceDemandId")]
		public EntitySet<DemandAdjustment> DemandAdjustments
		{
			get
			{
				return this._DemandAdjustments;
			}
			set
			{
				this._DemandAdjustments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_DemandAdjustment1", Storage="_DemandAdjustments1", ThisKey="Id", OtherKey="TargetDemandId")]
		public EntitySet<DemandAdjustment> DemandAdjustments1
		{
			get
			{
				return this._DemandAdjustments1;
			}
			set
			{
				this._DemandAdjustments1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetVersion_Demand", Storage="_BudgetVersion", ThisKey="BudgetVersionId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BudgetVersion BudgetVersion
		{
			get
			{
				return this._BudgetVersion.Entity;
			}
			set
			{
				BudgetVersion previousValue = this._BudgetVersion.Entity;
				if (((previousValue != value) 
							|| (this._BudgetVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BudgetVersion.Entity = null;
						previousValue.Demands.Remove(this);
					}
					this._BudgetVersion.Entity = value;
					if ((value != null))
					{
						value.Demands.Add(this);
						this._BudgetVersionId = value.Id;
					}
					else
					{
						this._BudgetVersionId = default(System.Guid);
					}
					this.SendPropertyChanged("BudgetVersion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CFO_Demand", Storage="_CFO", ThisKey="CustomerCfoId", OtherKey="Id", IsForeignKey=true)]
		public CFO CFO
		{
			get
			{
				return this._CFO.Entity;
			}
			set
			{
				CFO previousValue = this._CFO.Entity;
				if (((previousValue != value) 
							|| (this._CFO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CFO.Entity = null;
						previousValue.Demands.Remove(this);
					}
					this._CFO.Entity = value;
					if ((value != null))
					{
						value.Demands.Add(this);
						this._CustomerCfoId = value.Id;
					}
					else
					{
						this._CustomerCfoId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("CFO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CFO_Demand1", Storage="_AgreementCFO", ThisKey="AgreementCfo", OtherKey="Id", IsForeignKey=true)]
		public CFO AgreementCFO
		{
			get
			{
				return this._AgreementCFO.Entity;
			}
			set
			{
				CFO previousValue = this._AgreementCFO.Entity;
				if (((previousValue != value) 
							|| (this._AgreementCFO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AgreementCFO.Entity = null;
						previousValue.Demands1.Remove(this);
					}
					this._AgreementCFO.Entity = value;
					if ((value != null))
					{
						value.Demands1.Add(this);
						this._AgreementCfo = value.Id;
					}
					else
					{
						this._AgreementCfo = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("AgreementCFO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counteragent_Demand", Storage="_Counteragent", ThisKey="CounteragentId", OtherKey="Id", IsForeignKey=true)]
		public Counteragent Counteragent
		{
			get
			{
				return this._Counteragent.Entity;
			}
			set
			{
				Counteragent previousValue = this._Counteragent.Entity;
				if (((previousValue != value) 
							|| (this._Counteragent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Counteragent.Entity = null;
						previousValue.Demands.Remove(this);
					}
					this._Counteragent.Entity = value;
					if ((value != null))
					{
						value.Demands.Add(this);
						this._CounteragentId = value.Id;
					}
					else
					{
						this._CounteragentId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Counteragent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DemandStatusInternal_Demand", Storage="_DemandStatusInternal", ThisKey="InternalStatusId", OtherKey="Id", IsForeignKey=true)]
		public DemandStatusInternal DemandStatusInternal
		{
			get
			{
				return this._DemandStatusInternal.Entity;
			}
			set
			{
				DemandStatusInternal previousValue = this._DemandStatusInternal.Entity;
				if (((previousValue != value) 
							|| (this._DemandStatusInternal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DemandStatusInternal.Entity = null;
						previousValue.Demands.Remove(this);
					}
					this._DemandStatusInternal.Entity = value;
					if ((value != null))
					{
						value.Demands.Add(this);
						this._InternalStatusId = value.Id;
					}
					else
					{
						this._InternalStatusId = default(byte);
					}
					this.SendPropertyChanged("DemandStatusInternal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Limit_Demand", Storage="_Limit", ThisKey="LimitId", OtherKey="Id", IsForeignKey=true)]
		public Limit Limit
		{
			get
			{
				return this._Limit.Entity;
			}
			set
			{
				Limit previousValue = this._Limit.Entity;
				if (((previousValue != value) 
							|| (this._Limit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Limit.Entity = null;
						previousValue.Demands.Remove(this);
					}
					this._Limit.Entity = value;
					if ((value != null))
					{
						value.Demands.Add(this);
						this._LimitId = value.Id;
					}
					else
					{
						this._LimitId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Limit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Demand", Storage="_Project", ThisKey="ProjectId", OtherKey="Id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Demands.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Demands.Add(this);
						this._ProjectId = value.Id;
					}
					else
					{
						this._ProjectId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Demand", Storage="_Author", ThisKey="AuthorId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee Author
		{
			get
			{
				return this._Author.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._Author.Entity;
				if (((previousValue != value) 
							|| (this._Author.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Author.Entity = null;
						previousValue.Demands.Remove(this);
					}
					this._Author.Entity = value;
					if ((value != null))
					{
						value.Demands.Add(this);
						this._AuthorId = value.Id;
					}
					else
					{
						this._AuthorId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Author");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_Demand1", Storage="_SecurityTrustee1", ThisKey="NegativeEmployeeId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee1
		{
			get
			{
				return this._SecurityTrustee1.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee1.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee1.Entity = null;
						previousValue.Demands1.Remove(this);
					}
					this._SecurityTrustee1.Entity = value;
					if ((value != null))
					{
						value.Demands1.Add(this);
						this._NegativeEmployeeId = value.Id;
					}
					else
					{
						this._NegativeEmployeeId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SecurityTrustee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_Demand", Storage="_AuthorStructDivision", ThisKey="AuthorStructDivisionId", OtherKey="Id", IsForeignKey=true)]
		public StructDivision AuthorStructDivision
		{
			get
			{
				return this._AuthorStructDivision.Entity;
			}
			set
			{
				StructDivision previousValue = this._AuthorStructDivision.Entity;
				if (((previousValue != value) 
							|| (this._AuthorStructDivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AuthorStructDivision.Entity = null;
						previousValue.Demands.Remove(this);
					}
					this._AuthorStructDivision.Entity = value;
					if ((value != null))
					{
						value.Demands.Add(this);
						this._AuthorStructDivisionId = value.Id;
					}
					else
					{
						this._AuthorStructDivisionId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("AuthorStructDivision");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_Demand1", Storage="_ExecutorStructDivision", ThisKey="ExecutorStructId", OtherKey="Id", IsForeignKey=true)]
		public StructDivision ExecutorStructDivision
		{
			get
			{
				return this._ExecutorStructDivision.Entity;
			}
			set
			{
				StructDivision previousValue = this._ExecutorStructDivision.Entity;
				if (((previousValue != value) 
							|| (this._ExecutorStructDivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExecutorStructDivision.Entity = null;
						previousValue.Demands1.Remove(this);
					}
					this._ExecutorStructDivision.Entity = value;
					if ((value != null))
					{
						value.Demands1.Add(this);
						this._ExecutorStructId = value.Id;
					}
					else
					{
						this._ExecutorStructId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ExecutorStructDivision");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_Demand2", Storage="_StructDivision2", ThisKey="BeginDivisionId", OtherKey="Id", IsForeignKey=true)]
		public StructDivision StructDivision2
		{
			get
			{
				return this._StructDivision2.Entity;
			}
			set
			{
				StructDivision previousValue = this._StructDivision2.Entity;
				if (((previousValue != value) 
							|| (this._StructDivision2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StructDivision2.Entity = null;
						previousValue.Demands2.Remove(this);
					}
					this._StructDivision2.Entity = value;
					if ((value != null))
					{
						value.Demands2.Add(this);
						this._BeginDivisionId = value.Id;
					}
					else
					{
						this._BeginDivisionId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("StructDivision2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostArticle_Demand", Storage="_CostArticle", ThisKey="CostArticleId", OtherKey="Id", IsForeignKey=true)]
		public CostArticle CostArticle
		{
			get
			{
				return this._CostArticle.Entity;
			}
			set
			{
				CostArticle previousValue = this._CostArticle.Entity;
				if (((previousValue != value) 
							|| (this._CostArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CostArticle.Entity = null;
						previousValue.Demands.Remove(this);
					}
					this._CostArticle.Entity = value;
					if ((value != null))
					{
						value.Demands.Add(this);
						this._CostArticleId = value.Id;
					}
					else
					{
						this._CostArticleId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("CostArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CFO_Demand2", Storage="_AuthorCFO", ThisKey="AuthorStructDivisionId", OtherKey="Id", IsForeignKey=true)]
		public CFO AuthorCFO
		{
			get
			{
				return this._AuthorCFO.Entity;
			}
			set
			{
				CFO previousValue = this._AuthorCFO.Entity;
				if (((previousValue != value) 
							|| (this._AuthorCFO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AuthorCFO.Entity = null;
						previousValue.Demands2.Remove(this);
					}
					this._AuthorCFO.Entity = value;
					if ((value != null))
					{
						value.Demands2.Add(this);
						this._AuthorStructDivisionId = value.Id;
					}
					else
					{
						this._AuthorStructDivisionId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("AuthorCFO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filial_Demand", Storage="_Filial", ThisKey="PayerFilialId", OtherKey="Id", IsForeignKey=true)]
		public Filial Filial
		{
			get
			{
				return this._Filial.Entity;
			}
			set
			{
				Filial previousValue = this._Filial.Entity;
				if (((previousValue != value) 
							|| (this._Filial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Filial.Entity = null;
						previousValue.Demands.Remove(this);
					}
					this._Filial.Entity = value;
					if ((value != null))
					{
						value.Demands.Add(this);
						this._PayerFilialId = value.Id;
					}
					else
					{
						this._PayerFilialId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Filial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillDemandDistributions(BillDemandDistribution entity)
		{
			this.SendPropertyChanging();
			entity.Demand = this;
		}
		
		private void detach_BillDemandDistributions(BillDemandDistribution entity)
		{
			this.SendPropertyChanging();
			entity.Demand = null;
		}
		
		private void attach_BillDemandDistributionReserves(BillDemandDistributionReserve entity)
		{
			this.SendPropertyChanging();
			entity.Demand = this;
		}
		
		private void detach_BillDemandDistributionReserves(BillDemandDistributionReserve entity)
		{
			this.SendPropertyChanging();
			entity.Demand = null;
		}
		
		private void attach_DemandMoneys(DemandMoney entity)
		{
			this.SendPropertyChanging();
			entity.Demand = this;
		}
		
		private void detach_DemandMoneys(DemandMoney entity)
		{
			this.SendPropertyChanging();
			entity.Demand = null;
		}
		
		private void attach_DemandAllocations(DemandAllocation entity)
		{
			this.SendPropertyChanging();
			entity.Demand = this;
		}
		
		private void detach_DemandAllocations(DemandAllocation entity)
		{
			this.SendPropertyChanging();
			entity.Demand = null;
		}
		
		private void attach_DemandPermissions(DemandPermission entity)
		{
			this.SendPropertyChanging();
			entity.Demand = this;
		}
		
		private void detach_DemandPermissions(DemandPermission entity)
		{
			this.SendPropertyChanging();
			entity.Demand = null;
		}
		
		private void attach_DemandTransitionHistories(DemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.Demand = this;
		}
		
		private void detach_DemandTransitionHistories(DemandTransitionHistory entity)
		{
			this.SendPropertyChanging();
			entity.Demand = null;
		}
		
		private void attach_DemandAdjustments(DemandAdjustment entity)
		{
			this.SendPropertyChanging();
			entity.SourceDemand = this;
		}
		
		private void detach_DemandAdjustments(DemandAdjustment entity)
		{
			this.SendPropertyChanging();
			entity.SourceDemand = null;
		}
		
		private void attach_DemandAdjustments1(DemandAdjustment entity)
		{
			this.SendPropertyChanging();
			entity.TargetDemand = this;
		}
		
		private void detach_DemandAdjustments1(DemandAdjustment entity)
		{
			this.SendPropertyChanging();
			entity.TargetDemand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Filial")]
	public partial class Filial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _Code;
		
		private System.Guid _BudgetVersionId;
		
		private bool _IsDeleted;
		
		private bool _IsProtected;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private bool _IsBillDemandExportable;
		
		private bool _IsSkipInAccountingState;
		
		private EntitySet<BillDemandAllocation> _BillDemandAllocations;
		
		private EntitySet<CFO> _CFOs;
		
		private EntitySet<Contract> _Contracts;
		
		private EntitySet<Counteragent> _Counteragents;
		
		private EntitySet<Demand> _Demands;
		
		private EntitySet<Filial> _Filials;
		
		private EntitySet<BillDemand> _BillDemands;
		
		private EntityRef<BudgetVersion> _BudgetVersion;
		
		private EntityRef<Filial> _Filial1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnBudgetVersionIdChanging(System.Guid value);
    partial void OnBudgetVersionIdChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnIsProtectedChanging(bool value);
    partial void OnIsProtectedChanged();
    partial void OnParentIdChanging(System.Nullable<System.Guid> value);
    partial void OnParentIdChanged();
    partial void OnIsBillDemandExportableChanging(bool value);
    partial void OnIsBillDemandExportableChanged();
    partial void OnIsSkipInAccountingStateChanging(bool value);
    partial void OnIsSkipInAccountingStateChanged();
    #endregion
		
		public Filial()
		{
			this._BillDemandAllocations = new EntitySet<BillDemandAllocation>(new Action<BillDemandAllocation>(this.attach_BillDemandAllocations), new Action<BillDemandAllocation>(this.detach_BillDemandAllocations));
			this._CFOs = new EntitySet<CFO>(new Action<CFO>(this.attach_CFOs), new Action<CFO>(this.detach_CFOs));
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._Counteragents = new EntitySet<Counteragent>(new Action<Counteragent>(this.attach_Counteragents), new Action<Counteragent>(this.detach_Counteragents));
			this._Demands = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands), new Action<Demand>(this.detach_Demands));
			this._Filials = new EntitySet<Filial>(new Action<Filial>(this.attach_Filials), new Action<Filial>(this.detach_Filials));
			this._BillDemands = new EntitySet<BillDemand>(new Action<BillDemand>(this.attach_BillDemands), new Action<BillDemand>(this.detach_BillDemands));
			this._BudgetVersion = default(EntityRef<BudgetVersion>);
			this._Filial1 = default(EntityRef<Filial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetVersionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BudgetVersionId
		{
			get
			{
				return this._BudgetVersionId;
			}
			set
			{
				if ((this._BudgetVersionId != value))
				{
					if (this._BudgetVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudgetVersionIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetVersionId = value;
					this.SendPropertyChanged("BudgetVersionId");
					this.OnBudgetVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProtected", DbType="Bit NOT NULL")]
		public bool IsProtected
		{
			get
			{
				return this._IsProtected;
			}
			set
			{
				if ((this._IsProtected != value))
				{
					this.OnIsProtectedChanging(value);
					this.SendPropertyChanging();
					this._IsProtected = value;
					this.SendPropertyChanged("IsProtected");
					this.OnIsProtectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._Filial1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBillDemandExportable", DbType="Bit NOT NULL")]
		public bool IsBillDemandExportable
		{
			get
			{
				return this._IsBillDemandExportable;
			}
			set
			{
				if ((this._IsBillDemandExportable != value))
				{
					this.OnIsBillDemandExportableChanging(value);
					this.SendPropertyChanging();
					this._IsBillDemandExportable = value;
					this.SendPropertyChanged("IsBillDemandExportable");
					this.OnIsBillDemandExportableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSkipInAccountingState", DbType="Bit NOT NULL")]
		public bool IsSkipInAccountingState
		{
			get
			{
				return this._IsSkipInAccountingState;
			}
			set
			{
				if ((this._IsSkipInAccountingState != value))
				{
					this.OnIsSkipInAccountingStateChanging(value);
					this.SendPropertyChanging();
					this._IsSkipInAccountingState = value;
					this.SendPropertyChanged("IsSkipInAccountingState");
					this.OnIsSkipInAccountingStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filial_BillDemandAllocation", Storage="_BillDemandAllocations", ThisKey="Id", OtherKey="FilialId")]
		public EntitySet<BillDemandAllocation> BillDemandAllocations
		{
			get
			{
				return this._BillDemandAllocations;
			}
			set
			{
				this._BillDemandAllocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filial_CFO", Storage="_CFOs", ThisKey="Id", OtherKey="FilialId")]
		public EntitySet<CFO> CFOs
		{
			get
			{
				return this._CFOs;
			}
			set
			{
				this._CFOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filial_Contract", Storage="_Contracts", ThisKey="Id", OtherKey="FilialId")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filial_Counteragent", Storage="_Counteragents", ThisKey="Id", OtherKey="FilialId")]
		public EntitySet<Counteragent> Counteragents
		{
			get
			{
				return this._Counteragents;
			}
			set
			{
				this._Counteragents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filial_Demand", Storage="_Demands", ThisKey="Id", OtherKey="PayerFilialId")]
		public EntitySet<Demand> Demands
		{
			get
			{
				return this._Demands;
			}
			set
			{
				this._Demands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filial_Filial", Storage="_Filials", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<Filial> Filials
		{
			get
			{
				return this._Filials;
			}
			set
			{
				this._Filials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filial_BillDemand", Storage="_BillDemands", ThisKey="Id", OtherKey="FilialId")]
		public EntitySet<BillDemand> BillDemands
		{
			get
			{
				return this._BillDemands;
			}
			set
			{
				this._BillDemands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetVersion_Filial", Storage="_BudgetVersion", ThisKey="BudgetVersionId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BudgetVersion BudgetVersion
		{
			get
			{
				return this._BudgetVersion.Entity;
			}
			set
			{
				BudgetVersion previousValue = this._BudgetVersion.Entity;
				if (((previousValue != value) 
							|| (this._BudgetVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BudgetVersion.Entity = null;
						previousValue.Filials.Remove(this);
					}
					this._BudgetVersion.Entity = value;
					if ((value != null))
					{
						value.Filials.Add(this);
						this._BudgetVersionId = value.Id;
					}
					else
					{
						this._BudgetVersionId = default(System.Guid);
					}
					this.SendPropertyChanged("BudgetVersion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filial_Filial", Storage="_Filial1", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public Filial Filial1
		{
			get
			{
				return this._Filial1.Entity;
			}
			set
			{
				Filial previousValue = this._Filial1.Entity;
				if (((previousValue != value) 
							|| (this._Filial1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Filial1.Entity = null;
						previousValue.Filials.Remove(this);
					}
					this._Filial1.Entity = value;
					if ((value != null))
					{
						value.Filials.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Filial1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillDemandAllocations(BillDemandAllocation entity)
		{
			this.SendPropertyChanging();
			entity.Filial = this;
		}
		
		private void detach_BillDemandAllocations(BillDemandAllocation entity)
		{
			this.SendPropertyChanging();
			entity.Filial = null;
		}
		
		private void attach_CFOs(CFO entity)
		{
			this.SendPropertyChanging();
			entity.Filial = this;
		}
		
		private void detach_CFOs(CFO entity)
		{
			this.SendPropertyChanging();
			entity.Filial = null;
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Filial = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Filial = null;
		}
		
		private void attach_Counteragents(Counteragent entity)
		{
			this.SendPropertyChanging();
			entity.Filial = this;
		}
		
		private void detach_Counteragents(Counteragent entity)
		{
			this.SendPropertyChanging();
			entity.Filial = null;
		}
		
		private void attach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.Filial = this;
		}
		
		private void detach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.Filial = null;
		}
		
		private void attach_Filials(Filial entity)
		{
			this.SendPropertyChanging();
			entity.Filial1 = this;
		}
		
		private void detach_Filials(Filial entity)
		{
			this.SendPropertyChanging();
			entity.Filial1 = null;
		}
		
		private void attach_BillDemands(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.Filial = this;
		}
		
		private void detach_BillDemands(BillDemand entity)
		{
			this.SendPropertyChanging();
			entity.Filial = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vSecurityTrusteeRoles")]
	public partial class vSecurityTrusteeRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _RoleId;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRoleIdChanging(System.Nullable<System.Guid> value);
    partial void OnRoleIdChanged();
    #endregion
		
		public vSecurityTrusteeRole()
		{
			this._SecurityTrustee = default(EntityRef<SecurityTrustee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._SecurityTrustee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier", IsPrimaryKey=true)]
		public System.Nullable<System.Guid> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_vSecurityTrusteeRole", Storage="_SecurityTrustee", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee
		{
			get
			{
				return this._SecurityTrustee.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee.Entity = null;
						previousValue.vSecurityTrusteeRoles.Remove(this);
					}
					this._SecurityTrustee.Entity = value;
					if ((value != null))
					{
						value.vSecurityTrusteeRoles.Add(this);
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(System.Guid);
					}
					this.SendPropertyChanged("SecurityTrustee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillDemand")]
	public partial class BillDemand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private long _IdNumber;
		
		private System.Guid _BudgetId;
		
		private string _Number;
		
		private string _Substance;
		
		private System.Nullable<System.Guid> _CounteragentId;
		
		private System.Nullable<System.Guid> _ContractId;
		
		private decimal _Sum;
		
		private System.Nullable<System.DateTime> _AllocationDate;
		
		private System.Nullable<System.DateTime> _DateOfPerformance;
		
		private bool _IsSFReceipt;
		
		private bool _IsActReceipt;
		
		private bool _IsBillReceivable;
		
		private byte _BillDemandStateId;
		
		private System.Nullable<System.Guid> _CurrencyId;
		
		private System.Nullable<decimal> _CurrencySum;
		
		private System.Nullable<System.Guid> _AuthorId;
		
		private System.Nullable<System.DateTime> _TransferDate;
		
		private System.Nullable<System.DateTime> _AccountDate;
		
		private string _AccountNumber;
		
		private string _Comment;
		
		private string _Condition;
		
		private System.Nullable<System.Guid> _BankId;
		
		private System.Nullable<System.Guid> _ITSystem;
		
		private System.Nullable<double> _NDS;
		
		private System.Nullable<double> _CurrencyRate;
		
		private System.Nullable<double> _CurrencyRateCBPercents;
		
		private System.Nullable<byte> _CurrencyRateTypeId;
		
		private System.Nullable<System.Guid> _LimitManagerId;
		
		private System.Nullable<System.Guid> _CuratorId;
		
		private System.Nullable<System.Guid> _AuthorStructDivisionId;
		
		private string _INN;
		
		private string _PersonalAccount;
		
		private string _KPP;
		
		private string _BankName;
		
		private string _BankBIC;
		
		private System.Nullable<byte> _DocKindId;
		
		private System.Nullable<System.Guid> _CategoryExpensesId;
		
		private System.Nullable<byte> _PaymentKindId;
		
		private System.Nullable<System.Guid> _FilialId;
		
		private bool _IsCompensation;
		
		private System.Nullable<System.Guid> _PaymentCurrencyId;
		
		private string _MultiOPName;
		
		private string _MultiOPCode;
		
		private string _MultiPPName;
		
		private string _MultiPPCode;
		
		private string _MultiProjectName;
		
		private string _MultiProjectCode;
		
		private string _MultiCostArticleName;
		
		private string _MultiCostArticleCode;
		
		private string _ClassifiedOrder;
		
		private System.Nullable<decimal> _SumWithoutNDS;
		
		private System.Nullable<decimal> _NDSValue;
		
		private bool _IsNDSFixed;
		
		private string _MultiFilialName;
		
		private byte _BudgetPartId;
		
		private EntitySet<BillDemandDistribution> _BillDemandDistributions;
		
		private EntitySet<BillDemandPath> _BillDemandPaths;
		
		private EntitySet<BillDemandAllocation> _BillDemandAllocations;
		
		private EntitySet<BillDemandContractMoney> _BillDemandContractMoneys;
		
		private EntityRef<BillDemandState> _BillDemandState;
		
		private EntityRef<Budget> _Budget;
		
		private EntityRef<Contract> _Contract;
		
		private EntityRef<Counteragent> _Counteragent;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Currency> _Currency1;
		
		private EntityRef<Filial> _Filial;
		
		private EntityRef<SecurityTrustee> _Author;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee1;
		
		private EntityRef<SecurityTrustee> _SecurityTrustee2;
		
		private EntityRef<StructDivision> _StructDivision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnIdNumberChanging(long value);
    partial void OnIdNumberChanged();
    partial void OnBudgetIdChanging(System.Guid value);
    partial void OnBudgetIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnSubstanceChanging(string value);
    partial void OnSubstanceChanged();
    partial void OnCounteragentIdChanging(System.Nullable<System.Guid> value);
    partial void OnCounteragentIdChanged();
    partial void OnContractIdChanging(System.Nullable<System.Guid> value);
    partial void OnContractIdChanged();
    partial void OnSumChanging(decimal value);
    partial void OnSumChanged();
    partial void OnAllocationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAllocationDateChanged();
    partial void OnDateOfPerformanceChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfPerformanceChanged();
    partial void OnIsSFReceiptChanging(bool value);
    partial void OnIsSFReceiptChanged();
    partial void OnIsActReceiptChanging(bool value);
    partial void OnIsActReceiptChanged();
    partial void OnIsBillReceivableChanging(bool value);
    partial void OnIsBillReceivableChanged();
    partial void OnBillDemandStateIdChanging(byte value);
    partial void OnBillDemandStateIdChanged();
    partial void OnCurrencyIdChanging(System.Nullable<System.Guid> value);
    partial void OnCurrencyIdChanged();
    partial void OnCurrencySumChanging(System.Nullable<decimal> value);
    partial void OnCurrencySumChanged();
    partial void OnAuthorIdChanging(System.Nullable<System.Guid> value);
    partial void OnAuthorIdChanged();
    partial void OnTransferDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransferDateChanged();
    partial void OnAccountDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAccountDateChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnConditionChanging(string value);
    partial void OnConditionChanged();
    partial void OnBankIdChanging(System.Nullable<System.Guid> value);
    partial void OnBankIdChanged();
    partial void OnITSystemChanging(System.Nullable<System.Guid> value);
    partial void OnITSystemChanged();
    partial void OnNDSChanging(System.Nullable<double> value);
    partial void OnNDSChanged();
    partial void OnCurrencyRateChanging(System.Nullable<double> value);
    partial void OnCurrencyRateChanged();
    partial void OnCurrencyRateCBPercentsChanging(System.Nullable<double> value);
    partial void OnCurrencyRateCBPercentsChanged();
    partial void OnCurrencyRateTypeIdChanging(System.Nullable<byte> value);
    partial void OnCurrencyRateTypeIdChanged();
    partial void OnLimitManagerIdChanging(System.Nullable<System.Guid> value);
    partial void OnLimitManagerIdChanged();
    partial void OnCuratorIdChanging(System.Nullable<System.Guid> value);
    partial void OnCuratorIdChanged();
    partial void OnAuthorStructDivisionIdChanging(System.Nullable<System.Guid> value);
    partial void OnAuthorStructDivisionIdChanged();
    partial void OnINNChanging(string value);
    partial void OnINNChanged();
    partial void OnPersonalAccountChanging(string value);
    partial void OnPersonalAccountChanged();
    partial void OnKPPChanging(string value);
    partial void OnKPPChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankBICChanging(string value);
    partial void OnBankBICChanged();
    partial void OnDocKindIdChanging(System.Nullable<byte> value);
    partial void OnDocKindIdChanged();
    partial void OnCategoryExpensesIdChanging(System.Nullable<System.Guid> value);
    partial void OnCategoryExpensesIdChanged();
    partial void OnPaymentKindIdChanging(System.Nullable<byte> value);
    partial void OnPaymentKindIdChanged();
    partial void OnFilialIdChanging(System.Nullable<System.Guid> value);
    partial void OnFilialIdChanged();
    partial void OnIsCompensationChanging(bool value);
    partial void OnIsCompensationChanged();
    partial void OnPaymentCurrencyIdChanging(System.Nullable<System.Guid> value);
    partial void OnPaymentCurrencyIdChanged();
    partial void OnMultiOPNameChanging(string value);
    partial void OnMultiOPNameChanged();
    partial void OnMultiOPCodeChanging(string value);
    partial void OnMultiOPCodeChanged();
    partial void OnMultiPPNameChanging(string value);
    partial void OnMultiPPNameChanged();
    partial void OnMultiPPCodeChanging(string value);
    partial void OnMultiPPCodeChanged();
    partial void OnMultiProjectNameChanging(string value);
    partial void OnMultiProjectNameChanged();
    partial void OnMultiProjectCodeChanging(string value);
    partial void OnMultiProjectCodeChanged();
    partial void OnMultiCostArticleNameChanging(string value);
    partial void OnMultiCostArticleNameChanged();
    partial void OnMultiCostArticleCodeChanging(string value);
    partial void OnMultiCostArticleCodeChanged();
    partial void OnClassifiedOrderChanging(string value);
    partial void OnClassifiedOrderChanged();
    partial void OnSumWithoutNDSChanging(System.Nullable<decimal> value);
    partial void OnSumWithoutNDSChanged();
    partial void OnNDSValueChanging(System.Nullable<decimal> value);
    partial void OnNDSValueChanged();
    partial void OnIsNDSFixedChanging(bool value);
    partial void OnIsNDSFixedChanged();
    partial void OnMultiFilialNameChanging(string value);
    partial void OnMultiFilialNameChanged();
    partial void OnBudgetPartIdChanging(byte value);
    partial void OnBudgetPartIdChanged();
    #endregion
		
		public BillDemand()
		{
			this._BillDemandDistributions = new EntitySet<BillDemandDistribution>(new Action<BillDemandDistribution>(this.attach_BillDemandDistributions), new Action<BillDemandDistribution>(this.detach_BillDemandDistributions));
			this._BillDemandPaths = new EntitySet<BillDemandPath>(new Action<BillDemandPath>(this.attach_BillDemandPaths), new Action<BillDemandPath>(this.detach_BillDemandPaths));
			this._BillDemandAllocations = new EntitySet<BillDemandAllocation>(new Action<BillDemandAllocation>(this.attach_BillDemandAllocations), new Action<BillDemandAllocation>(this.detach_BillDemandAllocations));
			this._BillDemandContractMoneys = new EntitySet<BillDemandContractMoney>(new Action<BillDemandContractMoney>(this.attach_BillDemandContractMoneys), new Action<BillDemandContractMoney>(this.detach_BillDemandContractMoneys));
			this._BillDemandState = default(EntityRef<BillDemandState>);
			this._Budget = default(EntityRef<Budget>);
			this._Contract = default(EntityRef<Contract>);
			this._Counteragent = default(EntityRef<Counteragent>);
			this._Currency = default(EntityRef<Currency>);
			this._Currency1 = default(EntityRef<Currency>);
			this._Filial = default(EntityRef<Filial>);
			this._Author = default(EntityRef<SecurityTrustee>);
			this._SecurityTrustee1 = default(EntityRef<SecurityTrustee>);
			this._SecurityTrustee2 = default(EntityRef<SecurityTrustee>);
			this._StructDivision = default(EntityRef<StructDivision>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNumber", DbType="BigInt NOT NULL")]
		public long IdNumber
		{
			get
			{
				return this._IdNumber;
			}
			set
			{
				if ((this._IdNumber != value))
				{
					this.OnIdNumberChanging(value);
					this.SendPropertyChanging();
					this._IdNumber = value;
					this.SendPropertyChanged("IdNumber");
					this.OnIdNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BudgetId
		{
			get
			{
				return this._BudgetId;
			}
			set
			{
				if ((this._BudgetId != value))
				{
					if (this._Budget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudgetIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetId = value;
					this.SendPropertyChanged("BudgetId");
					this.OnBudgetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(255)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Substance", DbType="NVarChar(2048)")]
		public string Substance
		{
			get
			{
				return this._Substance;
			}
			set
			{
				if ((this._Substance != value))
				{
					this.OnSubstanceChanging(value);
					this.SendPropertyChanging();
					this._Substance = value;
					this.SendPropertyChanged("Substance");
					this.OnSubstanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounteragentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CounteragentId
		{
			get
			{
				return this._CounteragentId;
			}
			set
			{
				if ((this._CounteragentId != value))
				{
					if (this._Counteragent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCounteragentIdChanging(value);
					this.SendPropertyChanging();
					this._CounteragentId = value;
					this.SendPropertyChanged("CounteragentId");
					this.OnCounteragentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ContractId
		{
			get
			{
				return this._ContractId;
			}
			set
			{
				if ((this._ContractId != value))
				{
					if (this._Contract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIdChanging(value);
					this.SendPropertyChanging();
					this._ContractId = value;
					this.SendPropertyChanged("ContractId");
					this.OnContractIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Money NOT NULL")]
		public decimal Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this.OnSumChanging(value);
					this.SendPropertyChanging();
					this._Sum = value;
					this.SendPropertyChanged("Sum");
					this.OnSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllocationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AllocationDate
		{
			get
			{
				return this._AllocationDate;
			}
			set
			{
				if ((this._AllocationDate != value))
				{
					this.OnAllocationDateChanging(value);
					this.SendPropertyChanging();
					this._AllocationDate = value;
					this.SendPropertyChanged("AllocationDate");
					this.OnAllocationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfPerformance", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfPerformance
		{
			get
			{
				return this._DateOfPerformance;
			}
			set
			{
				if ((this._DateOfPerformance != value))
				{
					this.OnDateOfPerformanceChanging(value);
					this.SendPropertyChanging();
					this._DateOfPerformance = value;
					this.SendPropertyChanged("DateOfPerformance");
					this.OnDateOfPerformanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSFReceipt", DbType="Bit NOT NULL")]
		public bool IsSFReceipt
		{
			get
			{
				return this._IsSFReceipt;
			}
			set
			{
				if ((this._IsSFReceipt != value))
				{
					this.OnIsSFReceiptChanging(value);
					this.SendPropertyChanging();
					this._IsSFReceipt = value;
					this.SendPropertyChanged("IsSFReceipt");
					this.OnIsSFReceiptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActReceipt", DbType="Bit NOT NULL")]
		public bool IsActReceipt
		{
			get
			{
				return this._IsActReceipt;
			}
			set
			{
				if ((this._IsActReceipt != value))
				{
					this.OnIsActReceiptChanging(value);
					this.SendPropertyChanging();
					this._IsActReceipt = value;
					this.SendPropertyChanged("IsActReceipt");
					this.OnIsActReceiptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBillReceivable", DbType="Bit NOT NULL")]
		public bool IsBillReceivable
		{
			get
			{
				return this._IsBillReceivable;
			}
			set
			{
				if ((this._IsBillReceivable != value))
				{
					this.OnIsBillReceivableChanging(value);
					this.SendPropertyChanging();
					this._IsBillReceivable = value;
					this.SendPropertyChanged("IsBillReceivable");
					this.OnIsBillReceivableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDemandStateId", DbType="TinyInt NOT NULL")]
		public byte BillDemandStateId
		{
			get
			{
				return this._BillDemandStateId;
			}
			set
			{
				if ((this._BillDemandStateId != value))
				{
					if (this._BillDemandState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillDemandStateIdChanging(value);
					this.SendPropertyChanging();
					this._BillDemandStateId = value;
					this.SendPropertyChanged("BillDemandStateId");
					this.OnBillDemandStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencySum", DbType="Money")]
		public System.Nullable<decimal> CurrencySum
		{
			get
			{
				return this._CurrencySum;
			}
			set
			{
				if ((this._CurrencySum != value))
				{
					this.OnCurrencySumChanging(value);
					this.SendPropertyChanging();
					this._CurrencySum = value;
					this.SendPropertyChanged("CurrencySum");
					this.OnCurrencySumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AuthorId
		{
			get
			{
				return this._AuthorId;
			}
			set
			{
				if ((this._AuthorId != value))
				{
					if (this._Author.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorId = value;
					this.SendPropertyChanged("AuthorId");
					this.OnAuthorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransferDate
		{
			get
			{
				return this._TransferDate;
			}
			set
			{
				if ((this._TransferDate != value))
				{
					this.OnTransferDateChanging(value);
					this.SendPropertyChanging();
					this._TransferDate = value;
					this.SendPropertyChanged("TransferDate");
					this.OnTransferDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AccountDate
		{
			get
			{
				return this._AccountDate;
			}
			set
			{
				if ((this._AccountDate != value))
				{
					this.OnAccountDateChanging(value);
					this.SendPropertyChanging();
					this._AccountDate = value;
					this.SendPropertyChanged("AccountDate");
					this.OnAccountDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(1024)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condition", DbType="NVarChar(1024)")]
		public string Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					this.OnBankIdChanging(value);
					this.SendPropertyChanging();
					this._BankId = value;
					this.SendPropertyChanged("BankId");
					this.OnBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITSystem", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ITSystem
		{
			get
			{
				return this._ITSystem;
			}
			set
			{
				if ((this._ITSystem != value))
				{
					this.OnITSystemChanging(value);
					this.SendPropertyChanging();
					this._ITSystem = value;
					this.SendPropertyChanged("ITSystem");
					this.OnITSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDS", DbType="Float")]
		public System.Nullable<double> NDS
		{
			get
			{
				return this._NDS;
			}
			set
			{
				if ((this._NDS != value))
				{
					this.OnNDSChanging(value);
					this.SendPropertyChanging();
					this._NDS = value;
					this.SendPropertyChanged("NDS");
					this.OnNDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRate", DbType="Float")]
		public System.Nullable<double> CurrencyRate
		{
			get
			{
				return this._CurrencyRate;
			}
			set
			{
				if ((this._CurrencyRate != value))
				{
					this.OnCurrencyRateChanging(value);
					this.SendPropertyChanging();
					this._CurrencyRate = value;
					this.SendPropertyChanged("CurrencyRate");
					this.OnCurrencyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRateCBPercents", DbType="Float")]
		public System.Nullable<double> CurrencyRateCBPercents
		{
			get
			{
				return this._CurrencyRateCBPercents;
			}
			set
			{
				if ((this._CurrencyRateCBPercents != value))
				{
					this.OnCurrencyRateCBPercentsChanging(value);
					this.SendPropertyChanging();
					this._CurrencyRateCBPercents = value;
					this.SendPropertyChanged("CurrencyRateCBPercents");
					this.OnCurrencyRateCBPercentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRateTypeId", DbType="TinyInt")]
		public System.Nullable<byte> CurrencyRateTypeId
		{
			get
			{
				return this._CurrencyRateTypeId;
			}
			set
			{
				if ((this._CurrencyRateTypeId != value))
				{
					this.OnCurrencyRateTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyRateTypeId = value;
					this.SendPropertyChanged("CurrencyRateTypeId");
					this.OnCurrencyRateTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitManagerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> LimitManagerId
		{
			get
			{
				return this._LimitManagerId;
			}
			set
			{
				if ((this._LimitManagerId != value))
				{
					if (this._SecurityTrustee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLimitManagerIdChanging(value);
					this.SendPropertyChanging();
					this._LimitManagerId = value;
					this.SendPropertyChanged("LimitManagerId");
					this.OnLimitManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CuratorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CuratorId
		{
			get
			{
				return this._CuratorId;
			}
			set
			{
				if ((this._CuratorId != value))
				{
					if (this._SecurityTrustee2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCuratorIdChanging(value);
					this.SendPropertyChanging();
					this._CuratorId = value;
					this.SendPropertyChanged("CuratorId");
					this.OnCuratorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorStructDivisionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AuthorStructDivisionId
		{
			get
			{
				return this._AuthorStructDivisionId;
			}
			set
			{
				if ((this._AuthorStructDivisionId != value))
				{
					if (this._StructDivision.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorStructDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorStructDivisionId = value;
					this.SendPropertyChanged("AuthorStructDivisionId");
					this.OnAuthorStructDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INN", DbType="NVarChar(12)")]
		public string INN
		{
			get
			{
				return this._INN;
			}
			set
			{
				if ((this._INN != value))
				{
					this.OnINNChanging(value);
					this.SendPropertyChanging();
					this._INN = value;
					this.SendPropertyChanged("INN");
					this.OnINNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalAccount", DbType="NVarChar(255)")]
		public string PersonalAccount
		{
			get
			{
				return this._PersonalAccount;
			}
			set
			{
				if ((this._PersonalAccount != value))
				{
					this.OnPersonalAccountChanging(value);
					this.SendPropertyChanging();
					this._PersonalAccount = value;
					this.SendPropertyChanged("PersonalAccount");
					this.OnPersonalAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPP", DbType="NVarChar(10)")]
		public string KPP
		{
			get
			{
				return this._KPP;
			}
			set
			{
				if ((this._KPP != value))
				{
					this.OnKPPChanging(value);
					this.SendPropertyChanging();
					this._KPP = value;
					this.SendPropertyChanged("KPP");
					this.OnKPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(256)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankBIC", DbType="NVarChar(256)")]
		public string BankBIC
		{
			get
			{
				return this._BankBIC;
			}
			set
			{
				if ((this._BankBIC != value))
				{
					this.OnBankBICChanging(value);
					this.SendPropertyChanging();
					this._BankBIC = value;
					this.SendPropertyChanged("BankBIC");
					this.OnBankBICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocKindId", DbType="TinyInt")]
		public System.Nullable<byte> DocKindId
		{
			get
			{
				return this._DocKindId;
			}
			set
			{
				if ((this._DocKindId != value))
				{
					this.OnDocKindIdChanging(value);
					this.SendPropertyChanging();
					this._DocKindId = value;
					this.SendPropertyChanged("DocKindId");
					this.OnDocKindIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryExpensesId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CategoryExpensesId
		{
			get
			{
				return this._CategoryExpensesId;
			}
			set
			{
				if ((this._CategoryExpensesId != value))
				{
					this.OnCategoryExpensesIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryExpensesId = value;
					this.SendPropertyChanged("CategoryExpensesId");
					this.OnCategoryExpensesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentKindId", DbType="TinyInt")]
		public System.Nullable<byte> PaymentKindId
		{
			get
			{
				return this._PaymentKindId;
			}
			set
			{
				if ((this._PaymentKindId != value))
				{
					this.OnPaymentKindIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentKindId = value;
					this.SendPropertyChanged("PaymentKindId");
					this.OnPaymentKindIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilialId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FilialId
		{
			get
			{
				return this._FilialId;
			}
			set
			{
				if ((this._FilialId != value))
				{
					if (this._Filial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFilialIdChanging(value);
					this.SendPropertyChanging();
					this._FilialId = value;
					this.SendPropertyChanged("FilialId");
					this.OnFilialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompensation", DbType="Bit NOT NULL")]
		public bool IsCompensation
		{
			get
			{
				return this._IsCompensation;
			}
			set
			{
				if ((this._IsCompensation != value))
				{
					this.OnIsCompensationChanging(value);
					this.SendPropertyChanging();
					this._IsCompensation = value;
					this.SendPropertyChanged("IsCompensation");
					this.OnIsCompensationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCurrencyId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PaymentCurrencyId
		{
			get
			{
				return this._PaymentCurrencyId;
			}
			set
			{
				if ((this._PaymentCurrencyId != value))
				{
					if (this._Currency1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentCurrencyId = value;
					this.SendPropertyChanged("PaymentCurrencyId");
					this.OnPaymentCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiOPName", DbType="NVarChar(256)")]
		public string MultiOPName
		{
			get
			{
				return this._MultiOPName;
			}
			set
			{
				if ((this._MultiOPName != value))
				{
					this.OnMultiOPNameChanging(value);
					this.SendPropertyChanging();
					this._MultiOPName = value;
					this.SendPropertyChanged("MultiOPName");
					this.OnMultiOPNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiOPCode", DbType="NVarChar(256)")]
		public string MultiOPCode
		{
			get
			{
				return this._MultiOPCode;
			}
			set
			{
				if ((this._MultiOPCode != value))
				{
					this.OnMultiOPCodeChanging(value);
					this.SendPropertyChanging();
					this._MultiOPCode = value;
					this.SendPropertyChanged("MultiOPCode");
					this.OnMultiOPCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiPPName", DbType="NVarChar(256)")]
		public string MultiPPName
		{
			get
			{
				return this._MultiPPName;
			}
			set
			{
				if ((this._MultiPPName != value))
				{
					this.OnMultiPPNameChanging(value);
					this.SendPropertyChanging();
					this._MultiPPName = value;
					this.SendPropertyChanged("MultiPPName");
					this.OnMultiPPNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiPPCode", DbType="NVarChar(256)")]
		public string MultiPPCode
		{
			get
			{
				return this._MultiPPCode;
			}
			set
			{
				if ((this._MultiPPCode != value))
				{
					this.OnMultiPPCodeChanging(value);
					this.SendPropertyChanging();
					this._MultiPPCode = value;
					this.SendPropertyChanged("MultiPPCode");
					this.OnMultiPPCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiProjectName", DbType="NVarChar(256)")]
		public string MultiProjectName
		{
			get
			{
				return this._MultiProjectName;
			}
			set
			{
				if ((this._MultiProjectName != value))
				{
					this.OnMultiProjectNameChanging(value);
					this.SendPropertyChanging();
					this._MultiProjectName = value;
					this.SendPropertyChanged("MultiProjectName");
					this.OnMultiProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiProjectCode", DbType="NVarChar(256)")]
		public string MultiProjectCode
		{
			get
			{
				return this._MultiProjectCode;
			}
			set
			{
				if ((this._MultiProjectCode != value))
				{
					this.OnMultiProjectCodeChanging(value);
					this.SendPropertyChanging();
					this._MultiProjectCode = value;
					this.SendPropertyChanged("MultiProjectCode");
					this.OnMultiProjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiCostArticleName", DbType="NVarChar(256)")]
		public string MultiCostArticleName
		{
			get
			{
				return this._MultiCostArticleName;
			}
			set
			{
				if ((this._MultiCostArticleName != value))
				{
					this.OnMultiCostArticleNameChanging(value);
					this.SendPropertyChanging();
					this._MultiCostArticleName = value;
					this.SendPropertyChanged("MultiCostArticleName");
					this.OnMultiCostArticleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiCostArticleCode", DbType="NVarChar(256)")]
		public string MultiCostArticleCode
		{
			get
			{
				return this._MultiCostArticleCode;
			}
			set
			{
				if ((this._MultiCostArticleCode != value))
				{
					this.OnMultiCostArticleCodeChanging(value);
					this.SendPropertyChanging();
					this._MultiCostArticleCode = value;
					this.SendPropertyChanged("MultiCostArticleCode");
					this.OnMultiCostArticleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifiedOrder", DbType="NVarChar(256)")]
		public string ClassifiedOrder
		{
			get
			{
				return this._ClassifiedOrder;
			}
			set
			{
				if ((this._ClassifiedOrder != value))
				{
					this.OnClassifiedOrderChanging(value);
					this.SendPropertyChanging();
					this._ClassifiedOrder = value;
					this.SendPropertyChanged("ClassifiedOrder");
					this.OnClassifiedOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumWithoutNDS", DbType="Money")]
		public System.Nullable<decimal> SumWithoutNDS
		{
			get
			{
				return this._SumWithoutNDS;
			}
			set
			{
				if ((this._SumWithoutNDS != value))
				{
					this.OnSumWithoutNDSChanging(value);
					this.SendPropertyChanging();
					this._SumWithoutNDS = value;
					this.SendPropertyChanged("SumWithoutNDS");
					this.OnSumWithoutNDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDSValue", DbType="Money")]
		public System.Nullable<decimal> NDSValue
		{
			get
			{
				return this._NDSValue;
			}
			set
			{
				if ((this._NDSValue != value))
				{
					this.OnNDSValueChanging(value);
					this.SendPropertyChanging();
					this._NDSValue = value;
					this.SendPropertyChanged("NDSValue");
					this.OnNDSValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNDSFixed", DbType="Bit NOT NULL")]
		public bool IsNDSFixed
		{
			get
			{
				return this._IsNDSFixed;
			}
			set
			{
				if ((this._IsNDSFixed != value))
				{
					this.OnIsNDSFixedChanging(value);
					this.SendPropertyChanging();
					this._IsNDSFixed = value;
					this.SendPropertyChanged("IsNDSFixed");
					this.OnIsNDSFixedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiFilialName", DbType="NVarChar(256)")]
		public string MultiFilialName
		{
			get
			{
				return this._MultiFilialName;
			}
			set
			{
				if ((this._MultiFilialName != value))
				{
					this.OnMultiFilialNameChanging(value);
					this.SendPropertyChanging();
					this._MultiFilialName = value;
					this.SendPropertyChanged("MultiFilialName");
					this.OnMultiFilialNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetPartId", DbType="TinyInt NOT NULL")]
		public byte BudgetPartId
		{
			get
			{
				return this._BudgetPartId;
			}
			set
			{
				if ((this._BudgetPartId != value))
				{
					this.OnBudgetPartIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetPartId = value;
					this.SendPropertyChanged("BudgetPartId");
					this.OnBudgetPartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemand_BillDemandDistribution", Storage="_BillDemandDistributions", ThisKey="Id", OtherKey="BillDemandId")]
		public EntitySet<BillDemandDistribution> BillDemandDistributions
		{
			get
			{
				return this._BillDemandDistributions;
			}
			set
			{
				this._BillDemandDistributions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemand_BillDemandPath", Storage="_BillDemandPaths", ThisKey="Id", OtherKey="BillDemandId")]
		public EntitySet<BillDemandPath> BillDemandPaths
		{
			get
			{
				return this._BillDemandPaths;
			}
			set
			{
				this._BillDemandPaths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemand_BillDemandAllocation", Storage="_BillDemandAllocations", ThisKey="Id", OtherKey="BillDemandId")]
		public EntitySet<BillDemandAllocation> BillDemandAllocations
		{
			get
			{
				return this._BillDemandAllocations;
			}
			set
			{
				this._BillDemandAllocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemand_BillDemandContractMoney", Storage="_BillDemandContractMoneys", ThisKey="Id", OtherKey="BillDemandId")]
		public EntitySet<BillDemandContractMoney> BillDemandContractMoneys
		{
			get
			{
				return this._BillDemandContractMoneys;
			}
			set
			{
				this._BillDemandContractMoneys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillDemandState_BillDemand", Storage="_BillDemandState", ThisKey="BillDemandStateId", OtherKey="Id", IsForeignKey=true)]
		public BillDemandState BillDemandState
		{
			get
			{
				return this._BillDemandState.Entity;
			}
			set
			{
				BillDemandState previousValue = this._BillDemandState.Entity;
				if (((previousValue != value) 
							|| (this._BillDemandState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillDemandState.Entity = null;
						previousValue.BillDemands.Remove(this);
					}
					this._BillDemandState.Entity = value;
					if ((value != null))
					{
						value.BillDemands.Add(this);
						this._BillDemandStateId = value.Id;
					}
					else
					{
						this._BillDemandStateId = default(byte);
					}
					this.SendPropertyChanged("BillDemandState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_BillDemand", Storage="_Budget", ThisKey="BudgetId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Budget Budget
		{
			get
			{
				return this._Budget.Entity;
			}
			set
			{
				Budget previousValue = this._Budget.Entity;
				if (((previousValue != value) 
							|| (this._Budget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Budget.Entity = null;
						previousValue.BillDemands.Remove(this);
					}
					this._Budget.Entity = value;
					if ((value != null))
					{
						value.BillDemands.Add(this);
						this._BudgetId = value.Id;
					}
					else
					{
						this._BudgetId = default(System.Guid);
					}
					this.SendPropertyChanged("Budget");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_BillDemand", Storage="_Contract", ThisKey="ContractId", OtherKey="Id", IsForeignKey=true)]
		public Contract Contract
		{
			get
			{
				return this._Contract.Entity;
			}
			set
			{
				Contract previousValue = this._Contract.Entity;
				if (((previousValue != value) 
							|| (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract.Entity = null;
						previousValue.BillDemands.Remove(this);
					}
					this._Contract.Entity = value;
					if ((value != null))
					{
						value.BillDemands.Add(this);
						this._ContractId = value.Id;
					}
					else
					{
						this._ContractId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Contract");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counteragent_BillDemand", Storage="_Counteragent", ThisKey="CounteragentId", OtherKey="Id", IsForeignKey=true)]
		public Counteragent Counteragent
		{
			get
			{
				return this._Counteragent.Entity;
			}
			set
			{
				Counteragent previousValue = this._Counteragent.Entity;
				if (((previousValue != value) 
							|| (this._Counteragent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Counteragent.Entity = null;
						previousValue.BillDemands.Remove(this);
					}
					this._Counteragent.Entity = value;
					if ((value != null))
					{
						value.BillDemands.Add(this);
						this._CounteragentId = value.Id;
					}
					else
					{
						this._CounteragentId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Counteragent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_BillDemand", Storage="_Currency", ThisKey="CurrencyId", OtherKey="Id", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.BillDemands.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.BillDemands.Add(this);
						this._CurrencyId = value.Id;
					}
					else
					{
						this._CurrencyId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_BillDemand1", Storage="_Currency1", ThisKey="PaymentCurrencyId", OtherKey="Id", IsForeignKey=true)]
		public Currency Currency1
		{
			get
			{
				return this._Currency1.Entity;
			}
			set
			{
				Currency previousValue = this._Currency1.Entity;
				if (((previousValue != value) 
							|| (this._Currency1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency1.Entity = null;
						previousValue.BillDemands1.Remove(this);
					}
					this._Currency1.Entity = value;
					if ((value != null))
					{
						value.BillDemands1.Add(this);
						this._PaymentCurrencyId = value.Id;
					}
					else
					{
						this._PaymentCurrencyId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Currency1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filial_BillDemand", Storage="_Filial", ThisKey="FilialId", OtherKey="Id", IsForeignKey=true)]
		public Filial Filial
		{
			get
			{
				return this._Filial.Entity;
			}
			set
			{
				Filial previousValue = this._Filial.Entity;
				if (((previousValue != value) 
							|| (this._Filial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Filial.Entity = null;
						previousValue.BillDemands.Remove(this);
					}
					this._Filial.Entity = value;
					if ((value != null))
					{
						value.BillDemands.Add(this);
						this._FilialId = value.Id;
					}
					else
					{
						this._FilialId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Filial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_BillDemand", Storage="_Author", ThisKey="AuthorId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee Author
		{
			get
			{
				return this._Author.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._Author.Entity;
				if (((previousValue != value) 
							|| (this._Author.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Author.Entity = null;
						previousValue.BillDemands.Remove(this);
					}
					this._Author.Entity = value;
					if ((value != null))
					{
						value.BillDemands.Add(this);
						this._AuthorId = value.Id;
					}
					else
					{
						this._AuthorId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Author");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_BillDemand1", Storage="_SecurityTrustee1", ThisKey="LimitManagerId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee1
		{
			get
			{
				return this._SecurityTrustee1.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee1.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee1.Entity = null;
						previousValue.BillDemands1.Remove(this);
					}
					this._SecurityTrustee1.Entity = value;
					if ((value != null))
					{
						value.BillDemands1.Add(this);
						this._LimitManagerId = value.Id;
					}
					else
					{
						this._LimitManagerId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SecurityTrustee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityTrustee_BillDemand2", Storage="_SecurityTrustee2", ThisKey="CuratorId", OtherKey="Id", IsForeignKey=true)]
		public SecurityTrustee SecurityTrustee2
		{
			get
			{
				return this._SecurityTrustee2.Entity;
			}
			set
			{
				SecurityTrustee previousValue = this._SecurityTrustee2.Entity;
				if (((previousValue != value) 
							|| (this._SecurityTrustee2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityTrustee2.Entity = null;
						previousValue.BillDemands2.Remove(this);
					}
					this._SecurityTrustee2.Entity = value;
					if ((value != null))
					{
						value.BillDemands2.Add(this);
						this._CuratorId = value.Id;
					}
					else
					{
						this._CuratorId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SecurityTrustee2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructDivision_BillDemand", Storage="_StructDivision", ThisKey="AuthorStructDivisionId", OtherKey="Id", IsForeignKey=true)]
		public StructDivision StructDivision
		{
			get
			{
				return this._StructDivision.Entity;
			}
			set
			{
				StructDivision previousValue = this._StructDivision.Entity;
				if (((previousValue != value) 
							|| (this._StructDivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StructDivision.Entity = null;
						previousValue.BillDemands.Remove(this);
					}
					this._StructDivision.Entity = value;
					if ((value != null))
					{
						value.BillDemands.Add(this);
						this._AuthorStructDivisionId = value.Id;
					}
					else
					{
						this._AuthorStructDivisionId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("StructDivision");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillDemandDistributions(BillDemandDistribution entity)
		{
			this.SendPropertyChanging();
			entity.BillDemand = this;
		}
		
		private void detach_BillDemandDistributions(BillDemandDistribution entity)
		{
			this.SendPropertyChanging();
			entity.BillDemand = null;
		}
		
		private void attach_BillDemandPaths(BillDemandPath entity)
		{
			this.SendPropertyChanging();
			entity.BillDemand = this;
		}
		
		private void detach_BillDemandPaths(BillDemandPath entity)
		{
			this.SendPropertyChanging();
			entity.BillDemand = null;
		}
		
		private void attach_BillDemandAllocations(BillDemandAllocation entity)
		{
			this.SendPropertyChanging();
			entity.BillDemand = this;
		}
		
		private void detach_BillDemandAllocations(BillDemandAllocation entity)
		{
			this.SendPropertyChanging();
			entity.BillDemand = null;
		}
		
		private void attach_BillDemandContractMoneys(BillDemandContractMoney entity)
		{
			this.SendPropertyChanging();
			entity.BillDemand = this;
		}
		
		private void detach_BillDemandContractMoneys(BillDemandContractMoney entity)
		{
			this.SendPropertyChanging();
			entity.BillDemand = null;
		}
	}
}
#pragma warning restore 1591
