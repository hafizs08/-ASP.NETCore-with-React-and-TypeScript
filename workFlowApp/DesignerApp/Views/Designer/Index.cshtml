    @model dynamic
    @{
        ViewBag.Title = "Designer";
        Layout = "~/Pages/Shared/_Layout.cshtml";
    }

    <!-- Include CSS and JS files -->
    <link href="/css/workflowdesigner.min.css" rel="stylesheet" type="text/css" />
    <script src="/lib/jquery/dist/jquery.min.js" type="text/javascript"></script>
    <script src="/js/workflowdesigner.min.js" type="text/javascript"></script>

    <form action="" id="uploadform" method="post" enctype="multipart/form-data" onsubmit="tmp()" style="padding-bottom: 8px;">
        <input type="file" name="uploadFile" id="uploadFile" style="display:none" onchange="UploadScheme(this);">
    </form>

    <div id="wfdesigner" style="min-height:600px; max-width: 1200px;"></div>

    <script>
        console.log('WorkflowDesigner:', window.WorkflowDesigner); // Debug line

        var QueryString = function () {
            var query_string = {};
            var query = window.location.search.substring(1);
            var vars = query.split("&");
            for (var i = 0; i < vars.length; i++) {
                var pair = vars[i].split("=");
                if (typeof query_string[pair[0]] === "undefined") {
                    query_string[pair[0]] = pair[1];
                } else if (typeof query_string[pair[0]] === "string") {
                    var arr = [query_string[pair[0]], pair[1]];
                    query_string[pair[0]] = arr;
                } else {
                    query_string[pair[0]].push(pair[1]);
                }
            }
            return query_string;
        }();

        var schemecode = QueryString.code ? QueryString.code : 'SimpleWF';
        var processid = QueryString.processid;
        var graphwidth = 1200;
        var graphminheight = 600;
        var graphheight = graphminheight;
        var wfdesigner;

        function wfdesignerRedraw() {
            if (wfdesigner) {
                wfdesigner.destroy();
            }
            wfdesigner = new WorkflowDesigner({
                name: 'simpledesigner',
                apiurl: '/Designer/API',
                renderTo: 'wfdesigner',
                templatefolder: '/templates/',
                graphwidth: graphwidth,
                graphheight: graphheight
            });

            var isreadonly = processid !== undefined && processid !== '';
            var p = { schemecode: schemecode, processid: processid, readonly: isreadonly };

            if (wfdesigner.exists(p)) {
                wfdesigner.load(p);
            } else {
                wfdesigner.create(schemecode);
            }
        }

        $(document).ready(function () {
            wfdesignerRedraw();

            $(window).resize(function () {
                if (window.wfResizeTimer) {
                    clearTimeout(window.wfResizeTimer);
                }
                window.wfResizeTimer = setTimeout(function () {
                    var w = $(window).width();
                    var h = $(window).height();
                    if (w > 300) graphwidth = w - 40;
                    if (h > 300) graphheight = h - 250;
                    if (graphheight < graphminheight) graphheight = graphminheight;
                    if (wfdesigner) {
                        wfdesigner.resize(graphwidth, graphheight);
                    }
                }, 150);
            }).resize();
        });

        function DownloadScheme() {
            if (wfdesigner) {
                wfdesigner.downloadscheme();
            }
        }

        function DownloadSchemeBPMN() {
            if (wfdesigner) {
                wfdesigner.downloadschemeBPMN();
            }
        }

        var selectSchemeType;

        function SelectScheme(type) {
            if (type) selectSchemeType = type;
            $('#uploadFile').trigger('click');
        }

        function UploadScheme(input) {
            if (input.value === "") return;

            if (selectSchemeType === "bpmn") {
                if (wfdesigner) {
                    wfdesigner.uploadschemeBPMN($('#uploadform')[0], function () {
                        wfdesigner.autoarrangement();
                        alert('The file is uploaded!');
                    });
                }
            } else {
                if (wfdesigner) {
                    wfdesigner.uploadscheme($('#uploadform')[0], function () {
                        alert('The file is uploaded!');
                    });
                }
            }
        }

        function OnSave() {
            if (wfdesigner) {
                wfdesigner.schemecode = schemecode;
                var err = wfdesigner.validate();
                if (err && err.length > 0) {
                    alert(err);
                } else {
                    wfdesigner.save(function () {
                        alert('The scheme is saved!');
                    });
                }
            }
        }

        function OnNew() {
            if (wfdesigner) {
                wfdesigner.create();
            }
        }
    </script>
